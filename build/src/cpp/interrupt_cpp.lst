GAS LISTING /tmp/cc7ZQW42.s 			page 1


   1              		.file	"interrupt_cpp.cpp"
   2              		.option nopic
   3              		.option norelax
   4              		.attribute arch, "rv64i2p0_m2p0_a2p0"
   5              		.attribute unaligned_access, 0
   6              		.attribute stack_align, 16
   7              		.text
   8              	.Ltext0:
   9              		.align	2
  10              		.globl	_Z13timer_handlerv
  12              	_Z13timer_handlerv:
  13              	.LFB37:
  14              		.file 1 "src/cpp/interrupt_cpp.cpp"
   1:src/cpp/interrupt_cpp.cpp **** #include"../../h/testing.hpp"
   2:src/cpp/interrupt_cpp.cpp **** #include"../../h/riscv.hpp"
   3:src/cpp/interrupt_cpp.cpp **** #include"../../h/syscall_c.h"
   4:src/cpp/interrupt_cpp.cpp **** #include"../../h/tcb.hpp"
   5:src/cpp/interrupt_cpp.cpp **** 
   6:src/cpp/interrupt_cpp.cpp **** void timer_handler(){
  15              		.loc 1 6 21
  16              		.cfi_startproc
   7:src/cpp/interrupt_cpp.cpp ****     
   8:src/cpp/interrupt_cpp.cpp **** 
   9:src/cpp/interrupt_cpp.cpp ****     //TODO: smanjivanje vremena spavanja threadova
  10:src/cpp/interrupt_cpp.cpp ****     
  11:src/cpp/interrupt_cpp.cpp ****     //uvecavanje vremena koriscenja procesora tekuceg thread
  12:src/cpp/interrupt_cpp.cpp ****     TCB::timeSliceCounter++;
  17              		.loc 1 12 5
  18              		.loc 1 12 26 is_stmt 0
  19 0000 17070000 		lla	a4,_ZN3TCB16timeSliceCounterE
  19      13070700 
  20 0008 83370700 		ld	a5,0(a4)
  21 000c 93871700 		addi	a5,a5,1
  22 0010 2330F700 		sd	a5,0(a4)
  13:src/cpp/interrupt_cpp.cpp ****     
  14:src/cpp/interrupt_cpp.cpp ****     if(TCB::timeSliceCounter >= TCB::running->getTimeSlice()){
  23              		.loc 1 14 5 is_stmt 1
  24              	.LBB34:
  25              		.loc 1 14 59 is_stmt 0
  26 0014 17070000 		lla	a4,_ZN3TCB7runningE
  26      13070700 
  27 001c 03370700 		ld	a4,0(a4)
  28              	.LVL0:
  29              	.LBB35:
  30              	.LBB36:
  31              		.file 2 "src/cpp/../../h/tcb.hpp"
   1:src/cpp/../../h/tcb.hpp **** #ifndef __tcb__h
   2:src/cpp/../../h/tcb.hpp **** #define __tcb__h
   3:src/cpp/../../h/tcb.hpp **** 
   4:src/cpp/../../h/tcb.hpp **** #include"../h/memory_allocator.hpp"
   5:src/cpp/../../h/tcb.hpp **** #include"../h/testing.hpp"
   6:src/cpp/../../h/tcb.hpp **** class TCB{
   7:src/cpp/../../h/tcb.hpp ****     
   8:src/cpp/../../h/tcb.hpp **** public:
   9:src/cpp/../../h/tcb.hpp ****     //alokacija
  10:src/cpp/../../h/tcb.hpp ****     #include"../h/kernel_operators.hpp"
  11:src/cpp/../../h/tcb.hpp ****     
GAS LISTING /tmp/cc7ZQW42.s 			page 2


  12:src/cpp/../../h/tcb.hpp ****     using Body = void (*)(void*);
  13:src/cpp/../../h/tcb.hpp ****     enum TCBState{
  14:src/cpp/../../h/tcb.hpp ****         BLOCKED,
  15:src/cpp/../../h/tcb.hpp ****         READY,
  16:src/cpp/../../h/tcb.hpp ****         DELETING,
  17:src/cpp/../../h/tcb.hpp ****         FINISHED,
  18:src/cpp/../../h/tcb.hpp ****     };
  19:src/cpp/../../h/tcb.hpp ****     
  20:src/cpp/../../h/tcb.hpp ****     ~TCB(){ 
  21:src/cpp/../../h/tcb.hpp ****         MemoryAllocator& allocator = MemoryAllocator::getInstance(); 
  22:src/cpp/../../h/tcb.hpp ****         if(!allocator.invalidFreeAddress(this))
  23:src/cpp/../../h/tcb.hpp ****             allocator.mem_free(stack);
  24:src/cpp/../../h/tcb.hpp ****     }
  25:src/cpp/../../h/tcb.hpp ****     
  26:src/cpp/../../h/tcb.hpp ****     //da li je thread zavrsen
  27:src/cpp/../../h/tcb.hpp ****     void setState(TCBState s) {state = s;}
  28:src/cpp/../../h/tcb.hpp ****     TCBState getState() const{ return state; }
  29:src/cpp/../../h/tcb.hpp ****     void finish() { state = FINISHED; }
  30:src/cpp/../../h/tcb.hpp ****     bool isFinished(){ return state == FINISHED; }
  31:src/cpp/../../h/tcb.hpp ****     
  32:src/cpp/../../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  32              		.loc 2 32 35 is_stmt 1
  33              		.loc 2 32 42 is_stmt 0
  34 0020 03378701 		ld	a4,24(a4)
  35              	.LVL1:
  36              	.LBE36:
  37              	.LBE35:
  38              		.loc 1 14 5
  39 0024 63F8E700 		bgeu	a5,a4,.L7
  40              	.LBE34:
  15:src/cpp/interrupt_cpp.cpp ****         //uint64 sip = Riscv::r_sip();
  16:src/cpp/interrupt_cpp.cpp ****         /*volatile*/ uint64 sstatus = Riscv::r_sstatus(),
  17:src/cpp/interrupt_cpp.cpp ****         sepc = Riscv::r_sepc()/*, ra, sp*/;
  18:src/cpp/interrupt_cpp.cpp ****         
  19:src/cpp/interrupt_cpp.cpp ****         TCB::timeSliceCounter = 0;
  20:src/cpp/interrupt_cpp.cpp ****         
  21:src/cpp/interrupt_cpp.cpp ****         TCB::yield();
  22:src/cpp/interrupt_cpp.cpp **** 
  23:src/cpp/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
  24:src/cpp/interrupt_cpp.cpp ****         Riscv::w_sepc(sepc);
  25:src/cpp/interrupt_cpp.cpp ****         //Riscv::w_sip(sip);
  26:src/cpp/interrupt_cpp.cpp ****     } 
  27:src/cpp/interrupt_cpp.cpp **** 
  28:src/cpp/interrupt_cpp.cpp ****     
  29:src/cpp/interrupt_cpp.cpp ****     Riscv::mc_sip(Riscv::SIP_SSIE);
  41              		.loc 1 29 5 is_stmt 1
  42              	.LVL2:
  43              	.LBB46:
  44              	.LBB47:
  45              		.file 3 "src/cpp/../../h/../h/riscv.hpp"
   1:src/cpp/../../h/../h/riscv.hpp **** #ifndef __riscv__
   2:src/cpp/../../h/../h/riscv.hpp **** #define __riscv__
   3:src/cpp/../../h/../h/riscv.hpp **** 
   4:src/cpp/../../h/../h/riscv.hpp **** #include"../lib/hw.h"
   5:src/cpp/../../h/../h/riscv.hpp **** 
   6:src/cpp/../../h/../h/riscv.hpp **** class Riscv{
   7:src/cpp/../../h/../h/riscv.hpp **** public:
GAS LISTING /tmp/cc7ZQW42.s 			page 3


   8:src/cpp/../../h/../h/riscv.hpp ****     
   9:src/cpp/../../h/../h/riscv.hpp ****     static void w_scause(uint64);
  10:src/cpp/../../h/../h/riscv.hpp ****     static uint64 r_scause(); 
  11:src/cpp/../../h/../h/riscv.hpp **** 
  12:src/cpp/../../h/../h/riscv.hpp ****     static void w_sepc(uint64);
  13:src/cpp/../../h/../h/riscv.hpp ****     static uint64 r_sepc();
  14:src/cpp/../../h/../h/riscv.hpp ****     static void ni_sepc();
  15:src/cpp/../../h/../h/riscv.hpp **** 
  16:src/cpp/../../h/../h/riscv.hpp ****     static void w_stvec(uint64);
  17:src/cpp/../../h/../h/riscv.hpp ****     static uint64 r_stvec();
  18:src/cpp/../../h/../h/riscv.hpp ****      
  19:src/cpp/../../h/../h/riscv.hpp ****     static void w_stval(uint64);
  20:src/cpp/../../h/../h/riscv.hpp ****     static uint64 r_stval();
  21:src/cpp/../../h/../h/riscv.hpp ****     
  22:src/cpp/../../h/../h/riscv.hpp ****     enum BitMaskSip{
  23:src/cpp/../../h/../h/riscv.hpp ****         SIP_SSIE = (1<<1),
  24:src/cpp/../../h/../h/riscv.hpp ****         SIP_STIE = (1<<5),
  25:src/cpp/../../h/../h/riscv.hpp ****         SIP_SEIE = (1<<9),
  26:src/cpp/../../h/../h/riscv.hpp ****     };
  27:src/cpp/../../h/../h/riscv.hpp **** 
  28:src/cpp/../../h/../h/riscv.hpp ****     static void ms_sip(uint64);
  29:src/cpp/../../h/../h/riscv.hpp ****     static void mc_sip(uint64);
  30:src/cpp/../../h/../h/riscv.hpp **** 
  31:src/cpp/../../h/../h/riscv.hpp ****     static void w_sip(uint64);
  32:src/cpp/../../h/../h/riscv.hpp ****     static uint64 r_sip();
  33:src/cpp/../../h/../h/riscv.hpp **** 
  34:src/cpp/../../h/../h/riscv.hpp ****     enum BitMaskSstatus{
  35:src/cpp/../../h/../h/riscv.hpp ****         SSTATUS_SIE = (1<<1),
  36:src/cpp/../../h/../h/riscv.hpp ****         SSTATUS_SPIE = (1<<5),
  37:src/cpp/../../h/../h/riscv.hpp ****         SSTATUS_SPP = (1<<8),
  38:src/cpp/../../h/../h/riscv.hpp ****     };
  39:src/cpp/../../h/../h/riscv.hpp **** 
  40:src/cpp/../../h/../h/riscv.hpp ****     static void ms_sstatus(uint64);
  41:src/cpp/../../h/../h/riscv.hpp ****     static void mc_sstatus(uint64);
  42:src/cpp/../../h/../h/riscv.hpp **** 
  43:src/cpp/../../h/../h/riscv.hpp ****     static void w_sstatus(uint64);
  44:src/cpp/../../h/../h/riscv.hpp ****     static uint64 r_sstatus();
  45:src/cpp/../../h/../h/riscv.hpp **** 
  46:src/cpp/../../h/../h/riscv.hpp ****     static uint64 r_a0();
  47:src/cpp/../../h/../h/riscv.hpp ****     static uint64 s_a0(uint64 a0);
  48:src/cpp/../../h/../h/riscv.hpp ****     static uint64 r_a1();
  49:src/cpp/../../h/../h/riscv.hpp ****     static uint64 r_a2();
  50:src/cpp/../../h/../h/riscv.hpp ****     static uint64 r_a3();
  51:src/cpp/../../h/../h/riscv.hpp ****     static uint64 r_a4();
  52:src/cpp/../../h/../h/riscv.hpp **** 
  53:src/cpp/../../h/../h/riscv.hpp ****     static void popRegisters();
  54:src/cpp/../../h/../h/riscv.hpp ****     static void pushRegisters();
  55:src/cpp/../../h/../h/riscv.hpp **** 
  56:src/cpp/../../h/../h/riscv.hpp ****     static void popSppSpie();
  57:src/cpp/../../h/../h/riscv.hpp **** };
  58:src/cpp/../../h/../h/riscv.hpp **** 
  59:src/cpp/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a0(){
  60:src/cpp/../../h/../h/riscv.hpp ****     uint64 a0;
  61:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("mv %0, a0" : "=r" (a0));
  62:src/cpp/../../h/../h/riscv.hpp ****     return a0;
  63:src/cpp/../../h/../h/riscv.hpp **** }
  64:src/cpp/../../h/../h/riscv.hpp **** 
GAS LISTING /tmp/cc7ZQW42.s 			page 4


  65:src/cpp/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a1(){
  66:src/cpp/../../h/../h/riscv.hpp ****     uint64 a0;
  67:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("mv %0, a1" : "=r" (a0));
  68:src/cpp/../../h/../h/riscv.hpp ****     return a0;
  69:src/cpp/../../h/../h/riscv.hpp **** }
  70:src/cpp/../../h/../h/riscv.hpp **** 
  71:src/cpp/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a2(){
  72:src/cpp/../../h/../h/riscv.hpp ****     uint64 a0;
  73:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("mv %0, a2" : "=r" (a0));
  74:src/cpp/../../h/../h/riscv.hpp ****     return a0;
  75:src/cpp/../../h/../h/riscv.hpp **** }
  76:src/cpp/../../h/../h/riscv.hpp **** 
  77:src/cpp/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a3(){
  78:src/cpp/../../h/../h/riscv.hpp ****     uint64 a0;
  79:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("mv %0, a3" : "=r" (a0));
  80:src/cpp/../../h/../h/riscv.hpp ****     return a0;
  81:src/cpp/../../h/../h/riscv.hpp **** }
  82:src/cpp/../../h/../h/riscv.hpp **** 
  83:src/cpp/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a4(){
  84:src/cpp/../../h/../h/riscv.hpp ****     uint64 a0;
  85:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("mv %0, a4" : "=r" (a0));
  86:src/cpp/../../h/../h/riscv.hpp ****     return a0;
  87:src/cpp/../../h/../h/riscv.hpp **** }
  88:src/cpp/../../h/../h/riscv.hpp **** 
  89:src/cpp/../../h/../h/riscv.hpp **** 
  90:src/cpp/../../h/../h/riscv.hpp **** inline uint64 Riscv::s_a0(uint64 a0){
  91:src/cpp/../../h/../h/riscv.hpp ****     return a0;
  92:src/cpp/../../h/../h/riscv.hpp **** }
  93:src/cpp/../../h/../h/riscv.hpp **** 
  94:src/cpp/../../h/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause){
  95:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("csrw scause, %0" : : "r" (scause));
  96:src/cpp/../../h/../h/riscv.hpp **** }
  97:src/cpp/../../h/../h/riscv.hpp **** 
  98:src/cpp/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_scause(){
  99:src/cpp/../../h/../h/riscv.hpp ****     uint64 volatile scause;
 100:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, scause" : "=r" (scause));
 101:src/cpp/../../h/../h/riscv.hpp ****     return scause;
 102:src/cpp/../../h/../h/riscv.hpp **** } 
 103:src/cpp/../../h/../h/riscv.hpp **** 
 104:src/cpp/../../h/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc){
 105:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("csrw sepc, %0" : : "r" (sepc));
 106:src/cpp/../../h/../h/riscv.hpp **** }
 107:src/cpp/../../h/../h/riscv.hpp **** 
 108:src/cpp/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_sepc(){
 109:src/cpp/../../h/../h/riscv.hpp ****     uint64 volatile sepc;
 110:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sepc" : "=r" (sepc));
 111:src/cpp/../../h/../h/riscv.hpp ****     return sepc;
 112:src/cpp/../../h/../h/riscv.hpp **** } 
 113:src/cpp/../../h/../h/riscv.hpp **** 
 114:src/cpp/../../h/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec){
 115:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("csrw stvec, %0" : : "r" (stvec));
 116:src/cpp/../../h/../h/riscv.hpp **** }
 117:src/cpp/../../h/../h/riscv.hpp **** 
 118:src/cpp/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_stvec(){
 119:src/cpp/../../h/../h/riscv.hpp ****     uint64 volatile stvec;
 120:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, stvec" : "=r" (stvec));
 121:src/cpp/../../h/../h/riscv.hpp ****     return stvec;
GAS LISTING /tmp/cc7ZQW42.s 			page 5


 122:src/cpp/../../h/../h/riscv.hpp **** } 
 123:src/cpp/../../h/../h/riscv.hpp **** 
 124:src/cpp/../../h/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval){
 125:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("csrw stval, %0" : : "r" (stval));
 126:src/cpp/../../h/../h/riscv.hpp **** }
 127:src/cpp/../../h/../h/riscv.hpp **** 
 128:src/cpp/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_stval(){
 129:src/cpp/../../h/../h/riscv.hpp ****     uint64 volatile stval;
 130:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, stval" : "=r" (stval));
 131:src/cpp/../../h/../h/riscv.hpp ****     return stval;
 132:src/cpp/../../h/../h/riscv.hpp **** } 
 133:src/cpp/../../h/../h/riscv.hpp **** 
 134:src/cpp/../../h/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask){
 135:src/cpp/../../h/../h/riscv.hpp ****     asm volatile ("csrs sip, %0" : : "r" (mask));
 136:src/cpp/../../h/../h/riscv.hpp **** }
 137:src/cpp/../../h/../h/riscv.hpp **** 
 138:src/cpp/../../h/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask){
 139:src/cpp/../../h/../h/riscv.hpp ****     asm volatile ("csrc sip, %0" : : "r" (mask));
  46              		.loc 3 139 5
  47              		.loc 3 139 49 is_stmt 0
  48 0028 93072000 		li	a5,2
  49              	 #APP
  50              	# 139 "src/cpp/../../h/../h/riscv.hpp" 1
 140              	}
  51              		csrc sip, a5
  52              	# 0 "" 2
  53              	.LVL3:
  54              	 #NO_APP
  55 0030 67800000 		ret
  56              	.L7:
  57              	.LBE47:
  58              	.LBE46:
   6:src/cpp/interrupt_cpp.cpp ****     
  59              		.loc 1 6 21
  60 0034 130101FD 		addi	sp,sp,-48
  61              		.cfi_def_cfa_offset 48
  62 0038 23341102 		sd	ra,40(sp)
  63 003c 23308102 		sd	s0,32(sp)
  64 0040 233C9100 		sd	s1,24(sp)
  65 0044 23382101 		sd	s2,16(sp)
  66              		.cfi_offset 1, -8
  67              		.cfi_offset 8, -16
  68              		.cfi_offset 9, -24
  69              		.cfi_offset 18, -32
  70 0048 13040103 		addi	s0,sp,48
  71              		.cfi_def_cfa 8, 0
  72              	.LBB49:
  73              	.LBB37:
  16:src/cpp/interrupt_cpp.cpp ****         sepc = Riscv::r_sepc()/*, ra, sp*/;
  74              		.loc 1 16 22 is_stmt 1
  75              	.LBB38:
  76              	.LBB39:
 141:src/cpp/../../h/../h/riscv.hpp **** 
 142:src/cpp/../../h/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip){
 143:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("csrw sip, %0" : : "r" (sip));
 144:src/cpp/../../h/../h/riscv.hpp **** }
 145:src/cpp/../../h/../h/riscv.hpp **** 
GAS LISTING /tmp/cc7ZQW42.s 			page 6


 146:src/cpp/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_sip(){
 147:src/cpp/../../h/../h/riscv.hpp ****     uint64 volatile sip;
 148:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sip" : "=r" (sip));
 149:src/cpp/../../h/../h/riscv.hpp ****     return sip;
 150:src/cpp/../../h/../h/riscv.hpp **** } 
 151:src/cpp/../../h/../h/riscv.hpp **** 
 152:src/cpp/../../h/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask){
 153:src/cpp/../../h/../h/riscv.hpp ****     asm volatile ("csrs sstatus, %0" : : "r" (mask));
 154:src/cpp/../../h/../h/riscv.hpp **** }
 155:src/cpp/../../h/../h/riscv.hpp **** 
 156:src/cpp/../../h/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask){
 157:src/cpp/../../h/../h/riscv.hpp ****     asm volatile ("csrc sstatus, %0" : : "r" (mask));
 158:src/cpp/../../h/../h/riscv.hpp **** }
 159:src/cpp/../../h/../h/riscv.hpp **** 
 160:src/cpp/../../h/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus){
 161:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("csrw sstatus, %0" : : "r" (sstatus));
 162:src/cpp/../../h/../h/riscv.hpp **** }
 163:src/cpp/../../h/../h/riscv.hpp **** 
 164:src/cpp/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus(){
 165:src/cpp/../../h/../h/riscv.hpp ****     uint64 volatile sstatus;
  77              		.loc 3 165 5
 166:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sstatus" : "=r" (sstatus));
  78              		.loc 3 166 5
  79              		.loc 3 166 54 is_stmt 0
  80              	 #APP
  81              	# 166 "src/cpp/../../h/../h/riscv.hpp" 1
 167              	    return sstatus;
  82              		csrr a5, sstatus
  83              	# 0 "" 2
  84              	 #NO_APP
  85 0050 233CF4FC 		sd	a5,-40(s0)
  86              		.loc 3 167 5 is_stmt 1
  87              		.loc 3 167 12 is_stmt 0
  88 0054 033984FD 		ld	s2,-40(s0)
  89              	.LVL4:
  90              	.LBE39:
  91              	.LBE38:
  92              	.LBB40:
  93              	.LBB41:
 109:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sepc" : "=r" (sepc));
  94              		.loc 3 109 5 is_stmt 1
 110:src/cpp/../../h/../h/riscv.hpp ****     return sepc;
  95              		.loc 3 110 5
 110:src/cpp/../../h/../h/riscv.hpp ****     return sepc;
  96              		.loc 3 110 48 is_stmt 0
  97              	 #APP
  98              	# 110 "src/cpp/../../h/../h/riscv.hpp" 1
  99              		csrr a5, sepc
 100              	# 0 "" 2
 101              	 #NO_APP
 102 005c 2338F4FC 		sd	a5,-48(s0)
 111:src/cpp/../../h/../h/riscv.hpp **** } 
 103              		.loc 3 111 5 is_stmt 1
 111:src/cpp/../../h/../h/riscv.hpp **** } 
 104              		.loc 3 111 12 is_stmt 0
 105 0060 833404FD 		ld	s1,-48(s0)
 106              	.LVL5:
GAS LISTING /tmp/cc7ZQW42.s 			page 7


 107              	.LBE41:
 108              	.LBE40:
  19:src/cpp/interrupt_cpp.cpp ****         
 109              		.loc 1 19 9 is_stmt 1
  19:src/cpp/interrupt_cpp.cpp ****         
 110              		.loc 1 19 31 is_stmt 0
 111 0064 97070000 		sd	zero,_ZN3TCB16timeSliceCounterE,a5
 111      23B00700 
  21:src/cpp/interrupt_cpp.cpp **** 
 112              		.loc 1 21 9 is_stmt 1
  21:src/cpp/interrupt_cpp.cpp **** 
 113              		.loc 1 21 19 is_stmt 0
 114 006c 97000000 		call	_ZN3TCB5yieldEv
 114      E7800000 
 115              	.LVL6:
  23:src/cpp/interrupt_cpp.cpp ****         Riscv::w_sepc(sepc);
 116              		.loc 1 23 9 is_stmt 1
 117              	.LBB42:
 118              	.LBB43:
 161:src/cpp/../../h/../h/riscv.hpp **** }
 119              		.loc 3 161 5
 161:src/cpp/../../h/../h/riscv.hpp **** }
 120              		.loc 3 161 55 is_stmt 0
 121              	 #APP
 122              	# 161 "src/cpp/../../h/../h/riscv.hpp" 1
 123              		csrw sstatus, s2
 124              	# 0 "" 2
 125              	.LVL7:
 126              	 #NO_APP
 127              	.LBE43:
 128              	.LBE42:
  24:src/cpp/interrupt_cpp.cpp ****         //Riscv::w_sip(sip);
 129              		.loc 1 24 9 is_stmt 1
 130              	.LBB44:
 131              	.LBB45:
 105:src/cpp/../../h/../h/riscv.hpp **** }
 132              		.loc 3 105 5
 105:src/cpp/../../h/../h/riscv.hpp **** }
 133              		.loc 3 105 49 is_stmt 0
 134              	 #APP
 135              	# 105 "src/cpp/../../h/../h/riscv.hpp" 1
 136              		csrw sepc, s1
 137              	# 0 "" 2
 138              	 #NO_APP
 139              	.LBE45:
 140              	.LBE44:
 141              	.LBE37:
 142              	.LBE49:
 143              		.loc 1 29 5 is_stmt 1
 144              	.LVL8:
 145              	.LBB50:
 146              	.LBB48:
 139:src/cpp/../../h/../h/riscv.hpp **** }
 147              		.loc 3 139 5
 139:src/cpp/../../h/../h/riscv.hpp **** }
 148              		.loc 3 139 49 is_stmt 0
 149 007c 93072000 		li	a5,2
GAS LISTING /tmp/cc7ZQW42.s 			page 8


 150              	 #APP
 151              	# 139 "src/cpp/../../h/../h/riscv.hpp" 1
 152              		csrc sip, a5
 153              	# 0 "" 2
 154              	.LVL9:
 155              	 #NO_APP
 156              	.LBE48:
 157              	.LBE50:
  30:src/cpp/interrupt_cpp.cpp **** }
 158              		.loc 1 30 1
 159 0084 83308102 		ld	ra,40(sp)
 160              		.cfi_restore 1
 161 0088 03340102 		ld	s0,32(sp)
 162              		.cfi_restore 8
 163              		.cfi_def_cfa 2, 48
 164 008c 83348101 		ld	s1,24(sp)
 165              		.cfi_restore 9
 166              	.LVL10:
 167 0090 03390101 		ld	s2,16(sp)
 168              		.cfi_restore 18
 169              	.LVL11:
 170 0094 13010103 		addi	sp,sp,48
 171              		.cfi_def_cfa_offset 0
 172 0098 67800000 		jr	ra
 173              		.cfi_endproc
 174              	.LFE37:
 176              		.align	2
 177              		.globl	_Z8usrEcallmmmmm
 179              	_Z8usrEcallmmmmm:
 180              	.LFB38:
  31:src/cpp/interrupt_cpp.cpp **** 
  32:src/cpp/interrupt_cpp.cpp **** uint64 usrEcall(uint64 a0, uint64 a1, uint64 a2, uint64 a3, uint64 a4){
 181              		.loc 1 32 71 is_stmt 1
 182              		.cfi_startproc
 183              	.LVL12:
 184 009c 130101FF 		addi	sp,sp,-16
 185              		.cfi_def_cfa_offset 16
 186 00a0 23348100 		sd	s0,8(sp)
 187              		.cfi_offset 8, -8
 188 00a4 13040101 		addi	s0,sp,16
 189              		.cfi_def_cfa 8, 0
  33:src/cpp/interrupt_cpp.cpp ****     return a0;
 190              		.loc 1 33 5
  34:src/cpp/interrupt_cpp.cpp **** }
 191              		.loc 1 34 1 is_stmt 0
 192 00a8 03348100 		ld	s0,8(sp)
 193              		.cfi_restore 8
 194              		.cfi_def_cfa 2, 16
 195 00ac 13010101 		addi	sp,sp,16
 196              		.cfi_def_cfa_offset 0
 197 00b0 67800000 		jr	ra
 198              		.cfi_endproc
 199              	.LFE38:
 201              		.align	2
 202              		.globl	_Z8sysEcallmmmmm
 204              	_Z8sysEcallmmmmm:
 205              	.LFB39:
GAS LISTING /tmp/cc7ZQW42.s 			page 9


  35:src/cpp/interrupt_cpp.cpp **** 
  36:src/cpp/interrupt_cpp.cpp **** uint64 sysEcall(uint64 a0, uint64 a1, uint64 a2, uint64 a3, uint64 a4){    
 206              		.loc 1 36 71 is_stmt 1
 207              		.cfi_startproc
 208              	.LVL13:
 209 00b4 130101FC 		addi	sp,sp,-64
 210              		.cfi_def_cfa_offset 64
 211 00b8 233C1102 		sd	ra,56(sp)
 212 00bc 23388102 		sd	s0,48(sp)
 213 00c0 23349102 		sd	s1,40(sp)
 214 00c4 23302103 		sd	s2,32(sp)
 215 00c8 233C3101 		sd	s3,24(sp)
 216 00cc 23384101 		sd	s4,16(sp)
 217              		.cfi_offset 1, -8
 218              		.cfi_offset 8, -16
 219              		.cfi_offset 9, -24
 220              		.cfi_offset 18, -32
 221              		.cfi_offset 19, -40
 222              		.cfi_offset 20, -48
 223 00d0 13040104 		addi	s0,sp,64
 224              		.cfi_def_cfa 8, 0
 225 00d4 93040500 		mv	s1,a0
 226 00d8 93890500 		mv	s3,a1
  37:src/cpp/interrupt_cpp.cpp ****     /*volatile*/ uint64 sepc = Riscv::r_sepc()+4, sstatus = Riscv::r_sstatus(), ret = a0;
 227              		.loc 1 37 18
 228              	.LBB51:
 229              	.LBB52:
 109:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sepc" : "=r" (sepc));
 230              		.loc 3 109 5
 110:src/cpp/../../h/../h/riscv.hpp ****     return sepc;
 231              		.loc 3 110 5
 110:src/cpp/../../h/../h/riscv.hpp ****     return sepc;
 232              		.loc 3 110 48 is_stmt 0
 233              	 #APP
 234              	# 110 "src/cpp/../../h/../h/riscv.hpp" 1
 235              		csrr a5, sepc
 236              	# 0 "" 2
 237              	 #NO_APP
 238 00e0 2334F4FC 		sd	a5,-56(s0)
 111:src/cpp/../../h/../h/riscv.hpp **** } 
 239              		.loc 3 111 5 is_stmt 1
 111:src/cpp/../../h/../h/riscv.hpp **** } 
 240              		.loc 3 111 12 is_stmt 0
 241 00e4 033984FC 		ld	s2,-56(s0)
 242              	.LBE52:
 243              	.LBE51:
 244              		.loc 1 37 48
 245 00e8 13094900 		addi	s2,s2,4
 246              	.LVL14:
 247              	.LBB53:
 248              	.LBB54:
 165:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sstatus" : "=r" (sstatus));
 249              		.loc 3 165 5 is_stmt 1
 166:src/cpp/../../h/../h/riscv.hpp ****     return sstatus;
 250              		.loc 3 166 5
 166:src/cpp/../../h/../h/riscv.hpp ****     return sstatus;
 251              		.loc 3 166 54 is_stmt 0
GAS LISTING /tmp/cc7ZQW42.s 			page 10


 252              	 #APP
 253              	# 166 "src/cpp/../../h/../h/riscv.hpp" 1
 254              		csrr a5, sstatus
 255              	# 0 "" 2
 256              	 #NO_APP
 257 00f0 2330F4FC 		sd	a5,-64(s0)
 258              		.loc 3 167 5 is_stmt 1
 259              		.loc 3 167 12 is_stmt 0
 260 00f4 033A04FC 		ld	s4,-64(s0)
 261              	.LVL15:
 262              	.LBE54:
 263              	.LBE53:
  38:src/cpp/interrupt_cpp.cpp ****     if(a0 == 0x1){
 264              		.loc 1 38 5 is_stmt 1
 265              	.LBB55:
 266 00f8 93071000 		li	a5,1
 267 00fc 630CF504 		beq	a0,a5,.L20
 268 0100 13050600 		mv	a0,a2
 269              	.LVL16:
 270              	.LBE55:
  39:src/cpp/interrupt_cpp.cpp ****         //mem_alloc
  40:src/cpp/interrupt_cpp.cpp ****         ret = (uint64)MemoryAllocator::getInstance().mem_alloc(a1);
  41:src/cpp/interrupt_cpp.cpp ****         
  42:src/cpp/interrupt_cpp.cpp ****     }else if(a0 == 0x2){
 271              		.loc 1 42 11
 272              	.LBB74:
 273              	.LBB56:
 274 0104 93072000 		li	a5,2
 275 0108 6382F406 		beq	s1,a5,.L21
 276              	.LBE56:
 277              	.LBE74:
  43:src/cpp/interrupt_cpp.cpp ****         //mem_free
  44:src/cpp/interrupt_cpp.cpp ****         ret = (uint64)MemoryAllocator::getInstance().mem_free((void*)a1);
  45:src/cpp/interrupt_cpp.cpp ****     
  46:src/cpp/interrupt_cpp.cpp ****     }else if(a0 == 0x11){
 278              		.loc 1 46 11
 279              	.LBB75:
 280              	.LBB69:
 281              	.LBB57:
 282 010c 93071001 		li	a5,17
 283 0110 638AF406 		beq	s1,a5,.L22
  47:src/cpp/interrupt_cpp.cpp ****         //thread_create
  48:src/cpp/interrupt_cpp.cpp ****         uint64* t = (uint64*)a1;
  49:src/cpp/interrupt_cpp.cpp ****         *t = (uint64)TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4); 
  50:src/cpp/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
  51:src/cpp/interrupt_cpp.cpp ****         else ret = 0;
  52:src/cpp/interrupt_cpp.cpp ****     }else if(a0 == 0x12){
 284              		.loc 1 52 11
 285 0114 93072001 		li	a5,18
 286 0118 638AF408 		beq	s1,a5,.L23
  53:src/cpp/interrupt_cpp.cpp ****         //thread_exit
  54:src/cpp/interrupt_cpp.cpp ****         TCB::running->finish();
  55:src/cpp/interrupt_cpp.cpp ****         TCB::dispatch();
  56:src/cpp/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
  57:src/cpp/interrupt_cpp.cpp ****     }
  58:src/cpp/interrupt_cpp.cpp ****     else if(a0 == 0x13){
 287              		.loc 1 58 10
GAS LISTING /tmp/cc7ZQW42.s 			page 11


 288 011c 93073001 		li	a5,19
 289 0120 638AF40A 		beq	s1,a5,.L24
  59:src/cpp/interrupt_cpp.cpp ****         //thread_dispatch
  60:src/cpp/interrupt_cpp.cpp ****         TCB::timeSliceCounter = 0; 
  61:src/cpp/interrupt_cpp.cpp ****         TCB::yield();
  62:src/cpp/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
  63:src/cpp/interrupt_cpp.cpp ****     }else if(a0 == 0x69){
 290              		.loc 1 63 11
 291 0124 93079006 		li	a5,105
 292 0128 6384F40C 		beq	s1,a5,.L25
 293              	.LBE57:
 294              	.LBE69:
 295              	.LBE75:
  37:src/cpp/interrupt_cpp.cpp ****     if(a0 == 0x1){
 296              		.loc 1 37 81 is_stmt 0
 297 012c 13850400 		mv	a0,s1
 298              	.LVL17:
 299              	.L12:
  64:src/cpp/interrupt_cpp.cpp ****         //delete handle
  65:src/cpp/interrupt_cpp.cpp ****         TCB::deleteThread((TCB*)a1);
  66:src/cpp/interrupt_cpp.cpp ****     }
  67:src/cpp/interrupt_cpp.cpp ****     Riscv::w_sepc(sepc);
 300              		.loc 1 67 5 is_stmt 1
 301              	.LBB76:
 302              	.LBB77:
 105:src/cpp/../../h/../h/riscv.hpp **** }
 303              		.loc 3 105 5
 105:src/cpp/../../h/../h/riscv.hpp **** }
 304              		.loc 3 105 49 is_stmt 0
 305              	 #APP
 306              	# 105 "src/cpp/../../h/../h/riscv.hpp" 1
 307              		csrw sepc, s2
 308              	# 0 "" 2
 309              	.LVL18:
 310              	 #NO_APP
 311              	.LBE77:
 312              	.LBE76:
  68:src/cpp/interrupt_cpp.cpp ****     return ret;
 313              		.loc 1 68 5 is_stmt 1
  69:src/cpp/interrupt_cpp.cpp **** }
 314              		.loc 1 69 1 is_stmt 0
 315 0134 83308103 		ld	ra,56(sp)
 316              		.cfi_remember_state
 317              		.cfi_restore 1
 318 0138 03340103 		ld	s0,48(sp)
 319              		.cfi_restore 8
 320              		.cfi_def_cfa 2, 64
 321 013c 83348102 		ld	s1,40(sp)
 322              		.cfi_restore 9
 323              	.LVL19:
 324 0140 03390102 		ld	s2,32(sp)
 325              		.cfi_restore 18
 326              	.LVL20:
 327 0144 83398101 		ld	s3,24(sp)
 328              		.cfi_restore 19
 329              	.LVL21:
 330 0148 033A0101 		ld	s4,16(sp)
GAS LISTING /tmp/cc7ZQW42.s 			page 12


 331              		.cfi_restore 20
 332              	.LVL22:
 333 014c 13010104 		addi	sp,sp,64
 334              		.cfi_def_cfa_offset 0
 335 0150 67800000 		jr	ra
 336              	.LVL23:
 337              	.L20:
 338              		.cfi_restore_state
 339              	.LBB78:
  40:src/cpp/interrupt_cpp.cpp ****         
 340              		.loc 1 40 9 is_stmt 1
  40:src/cpp/interrupt_cpp.cpp ****         
 341              		.loc 1 40 52 is_stmt 0
 342 0154 97000000 		call	_ZN15MemoryAllocator11getInstanceEv
 342      E7800000 
 343              	.LVL24:
  40:src/cpp/interrupt_cpp.cpp ****         
 344              		.loc 1 40 63
 345 015c 93850900 		mv	a1,s3
 346 0160 97000000 		call	_ZN15MemoryAllocator9mem_allocEm
 346      E7800000 
 347              	.LVL25:
 348 0168 6FF09FFC 		j	.L12
 349              	.LVL26:
 350              	.L21:
 351              	.LBB70:
  44:src/cpp/interrupt_cpp.cpp ****     
 352              		.loc 1 44 9 is_stmt 1
  44:src/cpp/interrupt_cpp.cpp ****     
 353              		.loc 1 44 52 is_stmt 0
 354 016c 97000000 		call	_ZN15MemoryAllocator11getInstanceEv
 354      E7800000 
 355              	.LVL27:
  44:src/cpp/interrupt_cpp.cpp ****     
 356              		.loc 1 44 62
 357 0174 93850900 		mv	a1,s3
 358 0178 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv
 358      E7800000 
 359              	.LVL28:
 360 0180 6FF01FFB 		j	.L12
 361              	.LVL29:
 362              	.L22:
 363              	.LBB65:
 364              	.LBB58:
  48:src/cpp/interrupt_cpp.cpp ****         *t = (uint64)TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4); 
 365              		.loc 1 48 9 is_stmt 1
  49:src/cpp/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
 366              		.loc 1 49 9
  49:src/cpp/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
 367              		.loc 1 49 39 is_stmt 0
 368 0184 13060700 		mv	a2,a4
 369 0188 93850600 		mv	a1,a3
 370              	.LVL30:
 371 018c 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm
 371      E7800000 
 372              	.LVL31:
  49:src/cpp/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
GAS LISTING /tmp/cc7ZQW42.s 			page 13


 373              		.loc 1 49 12
 374 0194 23B0A900 		sd	a0,0(s3)
  50:src/cpp/interrupt_cpp.cpp ****         else ret = 0;
 375              		.loc 1 50 9 is_stmt 1
 376 0198 63060500 		beq	a0,zero,.L26
  51:src/cpp/interrupt_cpp.cpp ****     }else if(a0 == 0x12){
 377              		.loc 1 51 18 is_stmt 0
 378 019c 13050000 		li	a0,0
 379 01a0 6FF01FF9 		j	.L12
 380              	.L26:
  50:src/cpp/interrupt_cpp.cpp ****         else ret = 0;
 381              		.loc 1 50 23
 382 01a4 1305C0FF 		li	a0,-4
 383 01a8 6FF09FF8 		j	.L12
 384              	.LVL32:
 385              	.L23:
 386              	.LBE58:
  54:src/cpp/interrupt_cpp.cpp ****         TCB::dispatch();
 387              		.loc 1 54 9 is_stmt 1
  54:src/cpp/interrupt_cpp.cpp ****         TCB::dispatch();
 388              		.loc 1 54 29 is_stmt 0
 389 01ac 97070000 		lla	a5,_ZN3TCB7runningE
 389      93870700 
 390 01b4 83B70700 		ld	a5,0(a5)
 391              	.LVL33:
 392              	.LBB59:
 393              	.LBB60:
  29:src/cpp/../../h/tcb.hpp ****     bool isFinished(){ return state == FINISHED; }
 394              		.loc 2 29 21 is_stmt 1
  29:src/cpp/../../h/tcb.hpp ****     bool isFinished(){ return state == FINISHED; }
 395              		.loc 2 29 27 is_stmt 0
 396 01b8 13073000 		li	a4,3
 397              	.LVL34:
 398 01bc 23A0E702 		sw	a4,32(a5)
 399              	.LVL35:
 400              	.LBE60:
 401              	.LBE59:
  55:src/cpp/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 402              		.loc 1 55 9 is_stmt 1
  55:src/cpp/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 403              		.loc 1 55 22 is_stmt 0
 404 01c0 97000000 		call	_ZN3TCB8dispatchEv
 404      E7800000 
 405              	.LVL36:
  56:src/cpp/interrupt_cpp.cpp ****     }
 406              		.loc 1 56 9 is_stmt 1
 407              	.LBB61:
 408              	.LBB62:
 161:src/cpp/../../h/../h/riscv.hpp **** }
 409              		.loc 3 161 5
 161:src/cpp/../../h/../h/riscv.hpp **** }
 410              		.loc 3 161 55 is_stmt 0
 411              	 #APP
 412              	# 161 "src/cpp/../../h/../h/riscv.hpp" 1
 413              		csrw sstatus, s4
 414              	# 0 "" 2
 415              	 #NO_APP
GAS LISTING /tmp/cc7ZQW42.s 			page 14


 416              	.LBE62:
 417              	.LBE61:
 418              	.LBE65:
 419              	.LBE70:
 420              	.LBE78:
  37:src/cpp/interrupt_cpp.cpp ****     if(a0 == 0x1){
 421              		.loc 1 37 81
 422 01cc 13850400 		mv	a0,s1
 423 01d0 6FF01FF6 		j	.L12
 424              	.LVL37:
 425              	.L24:
 426              	.LBB79:
 427              	.LBB71:
 428              	.LBB66:
  60:src/cpp/interrupt_cpp.cpp ****         TCB::yield();
 429              		.loc 1 60 9 is_stmt 1
  60:src/cpp/interrupt_cpp.cpp ****         TCB::yield();
 430              		.loc 1 60 31 is_stmt 0
 431 01d4 97070000 		sd	zero,_ZN3TCB16timeSliceCounterE,a5
 431      23B00700 
  61:src/cpp/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 432              		.loc 1 61 9 is_stmt 1
  61:src/cpp/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 433              		.loc 1 61 19 is_stmt 0
 434 01dc 97000000 		call	_ZN3TCB5yieldEv
 434      E7800000 
 435              	.LVL38:
  62:src/cpp/interrupt_cpp.cpp ****     }else if(a0 == 0x69){
 436              		.loc 1 62 9 is_stmt 1
 437              	.LBB63:
 438              	.LBB64:
 161:src/cpp/../../h/../h/riscv.hpp **** }
 439              		.loc 3 161 5
 161:src/cpp/../../h/../h/riscv.hpp **** }
 440              		.loc 3 161 55 is_stmt 0
 441              	 #APP
 442              	# 161 "src/cpp/../../h/../h/riscv.hpp" 1
 443              		csrw sstatus, s4
 444              	# 0 "" 2
 445              	 #NO_APP
 446              	.LBE64:
 447              	.LBE63:
 448              	.LBE66:
 449              	.LBE71:
 450              	.LBE79:
  37:src/cpp/interrupt_cpp.cpp ****     if(a0 == 0x1){
 451              		.loc 1 37 81
 452 01e8 13850400 		mv	a0,s1
 453 01ec 6FF05FF4 		j	.L12
 454              	.LVL39:
 455              	.L25:
 456              	.LBB80:
 457              	.LBB72:
 458              	.LBB67:
  65:src/cpp/interrupt_cpp.cpp ****     }
 459              		.loc 1 65 9 is_stmt 1
  65:src/cpp/interrupt_cpp.cpp ****     }
GAS LISTING /tmp/cc7ZQW42.s 			page 15


 460              		.loc 1 65 26 is_stmt 0
 461 01f0 13850500 		mv	a0,a1
 462              	.LVL40:
 463 01f4 97000000 		call	_ZN3TCB12deleteThreadEPS_
 463      E7800000 
 464              	.LVL41:
 465              	.LBE67:
 466              	.LBE72:
 467              	.LBE80:
  37:src/cpp/interrupt_cpp.cpp ****     if(a0 == 0x1){
 468              		.loc 1 37 81
 469 01fc 13850400 		mv	a0,s1
 470              	.LBB81:
 471              	.LBB73:
 472              	.LBB68:
 473 0200 6FF01FF3 		j	.L12
 474              	.LBE68:
 475              	.LBE73:
 476              	.LBE81:
 477              		.cfi_endproc
 478              	.LFE39:
 480              		.align	2
 481              		.globl	interrupt
 483              	interrupt:
 484              	.LFB40:
  70:src/cpp/interrupt_cpp.cpp **** 
  71:src/cpp/interrupt_cpp.cpp **** extern "C" volatile void interrupt(uint64 a0, uint64 a1, uint64 a2, uint64 a3, uint64 a4){
 485              		.loc 1 71 90 is_stmt 1
 486              		.cfi_startproc
 487              	.LVL42:
 488 0204 130101FE 		addi	sp,sp,-32
 489              		.cfi_def_cfa_offset 32
 490 0208 233C1100 		sd	ra,24(sp)
 491 020c 23388100 		sd	s0,16(sp)
 492              		.cfi_offset 1, -8
 493              		.cfi_offset 8, -16
 494 0210 13040102 		addi	s0,sp,32
 495              		.cfi_def_cfa 8, 0
  72:src/cpp/interrupt_cpp.cpp ****     /*uint64 a0_s = a0, a1_s = a1, 
  73:src/cpp/interrupt_cpp.cpp ****         a2_s = a2, a3_s = a3, 
  74:src/cpp/interrupt_cpp.cpp ****         a4_s = a4;*/  
  75:src/cpp/interrupt_cpp.cpp ****     uint64 scause = Riscv::r_scause();
 496              		.loc 1 75 5
 497              	.LBB82:
 498              	.LBB83:
  99:src/cpp/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, scause" : "=r" (scause));
 499              		.loc 3 99 5
 100:src/cpp/../../h/../h/riscv.hpp ****     return scause;
 500              		.loc 3 100 5
 100:src/cpp/../../h/../h/riscv.hpp ****     return scause;
 501              		.loc 3 100 52 is_stmt 0
 502              	 #APP
 503              	# 100 "src/cpp/../../h/../h/riscv.hpp" 1
 504              		csrr a5, scause
 505              	# 0 "" 2
 506              	 #NO_APP
 507 0218 2334F4FE 		sd	a5,-24(s0)
GAS LISTING /tmp/cc7ZQW42.s 			page 16


 101:src/cpp/../../h/../h/riscv.hpp **** } 
 508              		.loc 3 101 5 is_stmt 1
 101:src/cpp/../../h/../h/riscv.hpp **** } 
 509              		.loc 3 101 12 is_stmt 0
 510 021c 833784FE 		ld	a5,-24(s0)
 511              	.LVL43:
 512              	.LBE83:
 513              	.LBE82:
  76:src/cpp/interrupt_cpp.cpp ****     static int t = 0;
 514              		.loc 1 76 5 is_stmt 1
  77:src/cpp/interrupt_cpp.cpp ****     if(scause == 9){
 515              		.loc 1 77 5
 516 0220 13089000 		li	a6,9
 517 0224 638E0707 		beq	a5,a6,.L36
  78:src/cpp/interrupt_cpp.cpp ****         //ecall iz sistemskog rezima
  79:src/cpp/interrupt_cpp.cpp ****         a0 = sysEcall(a0, a1, a2, a3, a4);
  80:src/cpp/interrupt_cpp.cpp ****         asm volatile("sd %0, 10 * 8(s0)" :: "r" (a0));
  81:src/cpp/interrupt_cpp.cpp ****     
  82:src/cpp/interrupt_cpp.cpp ****     } else if(scause == 8){
 518              		.loc 1 82 12
 519 0228 13088000 		li	a6,8
 520 022c 63820709 		beq	a5,a6,.L37
  83:src/cpp/interrupt_cpp.cpp ****         //ecall iz korisnickog rezima
  84:src/cpp/interrupt_cpp.cpp ****         a0 = usrEcall(a0, a1, a2, a3, a4);
  85:src/cpp/interrupt_cpp.cpp ****         asm volatile("sd %0, 10 * 8(s0)" :: "r" (a0));
  86:src/cpp/interrupt_cpp.cpp ****         
  87:src/cpp/interrupt_cpp.cpp ****     } else if(scause == 0x8000000000000009){
 521              		.loc 1 87 12
 522 0230 1307F0FF 		li	a4,-1
 523              	.LVL44:
 524 0234 1317F703 		slli	a4,a4,63
 525 0238 13079700 		addi	a4,a4,9
 526 023c 6388E708 		beq	a5,a4,.L38
  88:src/cpp/interrupt_cpp.cpp ****         //hardverski prekid
  89:src/cpp/interrupt_cpp.cpp ****        console_handler();
  90:src/cpp/interrupt_cpp.cpp ****     
  91:src/cpp/interrupt_cpp.cpp ****     } else if(scause == 0x8000000000000001){
 527              		.loc 1 91 12
 528 0240 1307F0FF 		li	a4,-1
 529 0244 1317F703 		slli	a4,a4,63
 530 0248 13071700 		addi	a4,a4,1
 531 024c 6386E708 		beq	a5,a4,.L39
  92:src/cpp/interrupt_cpp.cpp ****         //prekid od timera
  93:src/cpp/interrupt_cpp.cpp ****         timer_handler();      
  94:src/cpp/interrupt_cpp.cpp ****     
  95:src/cpp/interrupt_cpp.cpp ****     }else if(scause == 2){
 532              		.loc 1 95 11
 533 0250 13072000 		li	a4,2
 534 0254 6388E708 		beq	a5,a4,.L40
  96:src/cpp/interrupt_cpp.cpp ****         if(t<5){
  97:src/cpp/interrupt_cpp.cpp ****             print(scause);
  98:src/cpp/interrupt_cpp.cpp ****             t++;
  99:src/cpp/interrupt_cpp.cpp ****         }
 100:src/cpp/interrupt_cpp.cpp ****     }else if(scause == 1){
 535              		.loc 1 100 11
 536 0258 13071000 		li	a4,1
 537 025c 6384E70C 		beq	a5,a4,.L41
GAS LISTING /tmp/cc7ZQW42.s 			page 17


 101:src/cpp/interrupt_cpp.cpp ****         if(t<10){
 102:src/cpp/interrupt_cpp.cpp ****             print(scause);
 103:src/cpp/interrupt_cpp.cpp ****             t++;
 104:src/cpp/interrupt_cpp.cpp ****         }
 105:src/cpp/interrupt_cpp.cpp ****     }else{
 106:src/cpp/interrupt_cpp.cpp ****         if(t<15){
 538              		.loc 1 106 9
 539              		.loc 1 106 13 is_stmt 0
 540 0260 17070000 		lla	a4,_ZZ9interruptE1t
 540      13070700 
 541 0268 83260700 		lw	a3,0(a4)
 542              	.LVL45:
 543              		.loc 1 106 9
 544 026c 1307E000 		li	a4,14
 545 0270 6346D704 		bgt	a3,a4,.L27
 107:src/cpp/interrupt_cpp.cpp ****             print(scause);
 546              		.loc 1 107 13 is_stmt 1
 547              		.loc 1 107 18 is_stmt 0
 548 0274 13061000 		li	a2,1
 549              	.LVL46:
 550 0278 9305A000 		li	a1,10
 551              	.LVL47:
 552 027c 13850700 		mv	a0,a5
 553              	.LVL48:
 554 0280 97000000 		call	_Z5printmcb
 554      E7800000 
 555              	.LVL49:
 108:src/cpp/interrupt_cpp.cpp ****             t++;
 556              		.loc 1 108 13 is_stmt 1
 557              		.loc 1 108 14 is_stmt 0
 558 0288 17070000 		lla	a4,_ZZ9interruptE1t
 558      13070700 
 559 0290 83270700 		lw	a5,0(a4)
 560 0294 9B871700 		addiw	a5,a5,1
 561 0298 2320F700 		sw	a5,0(a4)
 109:src/cpp/interrupt_cpp.cpp ****         }
 110:src/cpp/interrupt_cpp.cpp ****     }
 111:src/cpp/interrupt_cpp.cpp ****     //print(a4);
 112:src/cpp/interrupt_cpp.cpp **** }...
 562              		.loc 1 112 1
 563 029c 6F000002 		j	.L27
 564              	.LVL50:
 565              	.L36:
  79:src/cpp/interrupt_cpp.cpp ****         a0 = sysEcall(a0, a1, a2, a3, a4);
 566              		.loc 1 79 9 is_stmt 1
  79:src/cpp/interrupt_cpp.cpp ****         a0 = sysEcall(a0, a1, a2, a3, a4);
 567              		.loc 1 79 22 is_stmt 0
 568 02a0 97000000 		call	_Z8sysEcallmmmmm
 568      E7800000 
 569              	.LVL51:
  80:src/cpp/interrupt_cpp.cpp ****         asm volatile("sd %0, 10 * 8(s0)" :: "r" (a0));
 570              		.loc 1 80 9 is_stmt 1
  80:src/cpp/interrupt_cpp.cpp ****         asm volatile("sd %0, 10 * 8(s0)" :: "r" (a0));
 571              		.loc 1 80 54 is_stmt 0
 572              	 #APP
 573              	# 80 "src/cpp/interrupt_cpp.cpp" 1
 574              		sd a0, 10 * 8(s0)
GAS LISTING /tmp/cc7ZQW42.s 			page 18


 575              	# 0 "" 2
 576              	 #NO_APP
 577 02ac 6F000001 		j	.L27
 578              	.LVL52:
 579              	.L37:
  84:src/cpp/interrupt_cpp.cpp ****         a0 = usrEcall(a0, a1, a2, a3, a4);
 580              		.loc 1 84 9 is_stmt 1
  84:src/cpp/interrupt_cpp.cpp ****         a0 = usrEcall(a0, a1, a2, a3, a4);
 581              		.loc 1 84 22 is_stmt 0
 582 02b0 97000000 		call	_Z8usrEcallmmmmm
 582      E7800000 
 583              	.LVL53:
  85:src/cpp/interrupt_cpp.cpp ****         asm volatile("sd %0, 10 * 8(s0)" :: "r" (a0));
 584              		.loc 1 85 9 is_stmt 1
  85:src/cpp/interrupt_cpp.cpp ****         asm volatile("sd %0, 10 * 8(s0)" :: "r" (a0));
 585              		.loc 1 85 54 is_stmt 0
 586              	 #APP
 587              	# 85 "src/cpp/interrupt_cpp.cpp" 1
 588              		sd a0, 10 * 8(s0)
 589              	# 0 "" 2
 590              	.LVL54:
 591              	 #NO_APP
 592              	.L27:
 593              		.loc 1 112 1
 594 02bc 83308101 		ld	ra,24(sp)
 595              		.cfi_remember_state
 596              		.cfi_restore 1
 597 02c0 03340101 		ld	s0,16(sp)
 598              		.cfi_restore 8
 599              		.cfi_def_cfa 2, 32
 600 02c4 13010102 		addi	sp,sp,32
 601              		.cfi_def_cfa_offset 0
 602 02c8 67800000 		jr	ra
 603              	.LVL55:
 604              	.L38:
 605              		.cfi_restore_state
  89:src/cpp/interrupt_cpp.cpp ****        console_handler();
 606              		.loc 1 89 8 is_stmt 1
  89:src/cpp/interrupt_cpp.cpp ****        console_handler();
 607              		.loc 1 89 23 is_stmt 0
 608 02cc 97000000 		call	console_handler
 608      E7800000 
 609              	.LVL56:
 610 02d4 6FF09FFE 		j	.L27
 611              	.LVL57:
 612              	.L39:
  93:src/cpp/interrupt_cpp.cpp ****         timer_handler();      
 613              		.loc 1 93 9 is_stmt 1
  93:src/cpp/interrupt_cpp.cpp ****         timer_handler();      
 614              		.loc 1 93 22 is_stmt 0
 615 02d8 97000000 		call	_Z13timer_handlerv
 615      E7800000 
 616              	.LVL58:
 617 02e0 6FF0DFFD 		j	.L27
 618              	.LVL59:
 619              	.L40:
  96:src/cpp/interrupt_cpp.cpp ****         if(t<5){
GAS LISTING /tmp/cc7ZQW42.s 			page 19


 620              		.loc 1 96 9 is_stmt 1
  96:src/cpp/interrupt_cpp.cpp ****         if(t<5){
 621              		.loc 1 96 13 is_stmt 0
 622 02e4 17070000 		lla	a4,_ZZ9interruptE1t
 622      13070700 
 623 02ec 83260700 		lw	a3,0(a4)
 624              	.LVL60:
  96:src/cpp/interrupt_cpp.cpp ****         if(t<5){
 625              		.loc 1 96 9
 626 02f0 13074000 		li	a4,4
 627 02f4 E344D7FC 		bgt	a3,a4,.L27
  97:src/cpp/interrupt_cpp.cpp ****             print(scause);
 628              		.loc 1 97 13 is_stmt 1
  97:src/cpp/interrupt_cpp.cpp ****             print(scause);
 629              		.loc 1 97 18 is_stmt 0
 630 02f8 13061000 		li	a2,1
 631              	.LVL61:
 632 02fc 9305A000 		li	a1,10
 633              	.LVL62:
 634 0300 13850700 		mv	a0,a5
 635              	.LVL63:
 636 0304 97000000 		call	_Z5printmcb
 636      E7800000 
 637              	.LVL64:
  98:src/cpp/interrupt_cpp.cpp ****             t++;
 638              		.loc 1 98 13 is_stmt 1
  98:src/cpp/interrupt_cpp.cpp ****             t++;
 639              		.loc 1 98 14 is_stmt 0
 640 030c 17070000 		lla	a4,_ZZ9interruptE1t
 640      13070700 
 641 0314 83270700 		lw	a5,0(a4)
 642 0318 9B871700 		addiw	a5,a5,1
 643 031c 2320F700 		sw	a5,0(a4)
 644 0320 6FF0DFF9 		j	.L27
 645              	.LVL65:
 646              	.L41:
 101:src/cpp/interrupt_cpp.cpp ****         if(t<10){
 647              		.loc 1 101 9 is_stmt 1
 101:src/cpp/interrupt_cpp.cpp ****         if(t<10){
 648              		.loc 1 101 13 is_stmt 0
 649 0324 17070000 		lla	a4,_ZZ9interruptE1t
 649      13070700 
 650 032c 83260700 		lw	a3,0(a4)
 651              	.LVL66:
 101:src/cpp/interrupt_cpp.cpp ****         if(t<10){
 652              		.loc 1 101 9
 653 0330 13079000 		li	a4,9
 654 0334 E344D7F8 		bgt	a3,a4,.L27
 102:src/cpp/interrupt_cpp.cpp ****             print(scause);
 655              		.loc 1 102 13 is_stmt 1
 102:src/cpp/interrupt_cpp.cpp ****             print(scause);
 656              		.loc 1 102 18 is_stmt 0
 657 0338 13061000 		li	a2,1
 658              	.LVL67:
 659 033c 9305A000 		li	a1,10
 660              	.LVL68:
 661 0340 13850700 		mv	a0,a5
GAS LISTING /tmp/cc7ZQW42.s 			page 20


 662              	.LVL69:
 663 0344 97000000 		call	_Z5printmcb
 663      E7800000 
 664              	.LVL70:
 103:src/cpp/interrupt_cpp.cpp ****             t++;
 665              		.loc 1 103 13 is_stmt 1
 103:src/cpp/interrupt_cpp.cpp ****             t++;
 666              		.loc 1 103 14 is_stmt 0
 667 034c 17070000 		lla	a4,_ZZ9interruptE1t
 667      13070700 
 668 0354 83270700 		lw	a5,0(a4)
 669 0358 9B871700 		addiw	a5,a5,1
 670 035c 2320F700 		sw	a5,0(a4)
 671 0360 6FF0DFF5 		j	.L27
 672              		.cfi_endproc
 673              	.LFE40:
 675              		.section	.sbss,"aw",@nobits
 676              		.align	2
 679              	_ZZ9interruptE1t:
 680 0000 00000000 		.zero	4
 681              		.text
 682              	.Letext0:
 683              		.file 4 "src/cpp/../../h/../h/../lib/hw.h"
 684              		.file 5 "src/cpp/../../h/../h/memory_allocator.hpp"
 685              		.file 6 "src/cpp/../../h/../h/kernel_operators.hpp"
 686              		.file 7 "src/cpp/../../h/testing.hpp"
 687              		.file 8 "src/cpp/../../h/../lib/console.h"
GAS LISTING /tmp/cc7ZQW42.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interrupt_cpp.cpp
     /tmp/cc7ZQW42.s:12     .text:0000000000000000 _Z13timer_handlerv
     /tmp/cc7ZQW42.s:16     .text:0000000000000000 .L0 
     /tmp/cc7ZQW42.s:17     .text:0000000000000000 .L0 
     /tmp/cc7ZQW42.s:18     .text:0000000000000000 .L0 
     /tmp/cc7ZQW42.s:19     .text:0000000000000000 .L0 
     /tmp/cc7ZQW42.s:25     .text:0000000000000014 .L0 
     /tmp/cc7ZQW42.s:26     .text:0000000000000014 .L0 
     /tmp/cc7ZQW42.s:33     .text:0000000000000020 .L0 
     /tmp/cc7ZQW42.s:34     .text:0000000000000020 .L0 
     /tmp/cc7ZQW42.s:39     .text:0000000000000024 .L0 
     /tmp/cc7ZQW42.s:46     .text:0000000000000028 .L0 
     /tmp/cc7ZQW42.s:47     .text:0000000000000028 .L0 
     /tmp/cc7ZQW42.s:48     .text:0000000000000028 .L0 
     /tmp/cc7ZQW42.s:60     .text:0000000000000034 .L0 
     /tmp/cc7ZQW42.s:61     .text:0000000000000038 .L0 
     /tmp/cc7ZQW42.s:66     .text:0000000000000048 .L0 
     /tmp/cc7ZQW42.s:67     .text:0000000000000048 .L0 
     /tmp/cc7ZQW42.s:68     .text:0000000000000048 .L0 
     /tmp/cc7ZQW42.s:69     .text:0000000000000048 .L0 
     /tmp/cc7ZQW42.s:71     .text:000000000000004c .L0 
     /tmp/cc7ZQW42.s:77     .text:000000000000004c .L0 
     /tmp/cc7ZQW42.s:78     .text:000000000000004c .L0 
     /tmp/cc7ZQW42.s:79     .text:000000000000004c .L0 
src/cpp/../../h/../h/riscv.hpp:166    .text:000000000000004c .L0 
     /tmp/cc7ZQW42.s:87     .text:0000000000000054 .L0 
     /tmp/cc7ZQW42.s:88     .text:0000000000000054 .L0 
     /tmp/cc7ZQW42.s:95     .text:0000000000000058 .L0 
     /tmp/cc7ZQW42.s:96     .text:0000000000000058 .L0 
src/cpp/../../h/../h/riscv.hpp:110    .text:0000000000000058 .L0 
     /tmp/cc7ZQW42.s:104    .text:0000000000000060 .L0 
     /tmp/cc7ZQW42.s:105    .text:0000000000000060 .L0 
     /tmp/cc7ZQW42.s:110    .text:0000000000000064 .L0 
     /tmp/cc7ZQW42.s:111    .text:0000000000000064 .L0 
     /tmp/cc7ZQW42.s:113    .text:000000000000006c .L0 
     /tmp/cc7ZQW42.s:114    .text:000000000000006c .L0 
     /tmp/cc7ZQW42.s:119    .text:0000000000000074 .L0 
     /tmp/cc7ZQW42.s:120    .text:0000000000000074 .L0 
src/cpp/../../h/../h/riscv.hpp:161    .text:0000000000000074 .L0 
     /tmp/cc7ZQW42.s:132    .text:0000000000000078 .L0 
     /tmp/cc7ZQW42.s:133    .text:0000000000000078 .L0 
src/cpp/../../h/../h/riscv.hpp:105    .text:0000000000000078 .L0 
     /tmp/cc7ZQW42.s:147    .text:000000000000007c .L0 
     /tmp/cc7ZQW42.s:148    .text:000000000000007c .L0 
     /tmp/cc7ZQW42.s:149    .text:000000000000007c .L0 
     /tmp/cc7ZQW42.s:159    .text:0000000000000084 .L0 
     /tmp/cc7ZQW42.s:160    .text:0000000000000088 .L0 
     /tmp/cc7ZQW42.s:162    .text:000000000000008c .L0 
     /tmp/cc7ZQW42.s:163    .text:000000000000008c .L0 
     /tmp/cc7ZQW42.s:165    .text:0000000000000090 .L0 
     /tmp/cc7ZQW42.s:168    .text:0000000000000094 .L0 
     /tmp/cc7ZQW42.s:171    .text:0000000000000098 .L0 
     /tmp/cc7ZQW42.s:173    .text:000000000000009c .L0 
     /tmp/cc7ZQW42.s:179    .text:000000000000009c _Z8usrEcallmmmmm
     /tmp/cc7ZQW42.s:182    .text:000000000000009c .L0 
     /tmp/cc7ZQW42.s:184    .text:000000000000009c .L0 
GAS LISTING /tmp/cc7ZQW42.s 			page 22


     /tmp/cc7ZQW42.s:185    .text:00000000000000a0 .L0 
     /tmp/cc7ZQW42.s:187    .text:00000000000000a4 .L0 
     /tmp/cc7ZQW42.s:189    .text:00000000000000a8 .L0 
     /tmp/cc7ZQW42.s:191    .text:00000000000000a8 .L0 
     /tmp/cc7ZQW42.s:192    .text:00000000000000a8 .L0 
     /tmp/cc7ZQW42.s:193    .text:00000000000000ac .L0 
     /tmp/cc7ZQW42.s:194    .text:00000000000000ac .L0 
     /tmp/cc7ZQW42.s:196    .text:00000000000000b0 .L0 
     /tmp/cc7ZQW42.s:198    .text:00000000000000b4 .L0 
     /tmp/cc7ZQW42.s:204    .text:00000000000000b4 _Z8sysEcallmmmmm
     /tmp/cc7ZQW42.s:207    .text:00000000000000b4 .L0 
     /tmp/cc7ZQW42.s:209    .text:00000000000000b4 .L0 
     /tmp/cc7ZQW42.s:210    .text:00000000000000b8 .L0 
     /tmp/cc7ZQW42.s:217    .text:00000000000000d0 .L0 
     /tmp/cc7ZQW42.s:218    .text:00000000000000d0 .L0 
     /tmp/cc7ZQW42.s:219    .text:00000000000000d0 .L0 
     /tmp/cc7ZQW42.s:220    .text:00000000000000d0 .L0 
     /tmp/cc7ZQW42.s:221    .text:00000000000000d0 .L0 
     /tmp/cc7ZQW42.s:222    .text:00000000000000d0 .L0 
     /tmp/cc7ZQW42.s:224    .text:00000000000000d4 .L0 
     /tmp/cc7ZQW42.s:230    .text:00000000000000dc .L0 
     /tmp/cc7ZQW42.s:231    .text:00000000000000dc .L0 
     /tmp/cc7ZQW42.s:232    .text:00000000000000dc .L0 
src/cpp/../../h/../h/riscv.hpp:110    .text:00000000000000dc .L0 
     /tmp/cc7ZQW42.s:240    .text:00000000000000e4 .L0 
     /tmp/cc7ZQW42.s:241    .text:00000000000000e4 .L0 
     /tmp/cc7ZQW42.s:245    .text:00000000000000e8 .L0 
     /tmp/cc7ZQW42.s:250    .text:00000000000000ec .L0 
     /tmp/cc7ZQW42.s:251    .text:00000000000000ec .L0 
src/cpp/../../h/../h/riscv.hpp:166    .text:00000000000000ec .L0 
     /tmp/cc7ZQW42.s:259    .text:00000000000000f4 .L0 
     /tmp/cc7ZQW42.s:260    .text:00000000000000f4 .L0 
     /tmp/cc7ZQW42.s:266    .text:00000000000000f8 .L0 
     /tmp/cc7ZQW42.s:274    .text:0000000000000104 .L0 
     /tmp/cc7ZQW42.s:282    .text:000000000000010c .L0 
     /tmp/cc7ZQW42.s:285    .text:0000000000000114 .L0 
     /tmp/cc7ZQW42.s:288    .text:000000000000011c .L0 
     /tmp/cc7ZQW42.s:291    .text:0000000000000124 .L0 
     /tmp/cc7ZQW42.s:297    .text:000000000000012c .L0 
     /tmp/cc7ZQW42.s:303    .text:0000000000000130 .L0 
     /tmp/cc7ZQW42.s:304    .text:0000000000000130 .L0 
src/cpp/../../h/../h/riscv.hpp:105    .text:0000000000000130 .L0 
     /tmp/cc7ZQW42.s:314    .text:0000000000000134 .L0 
     /tmp/cc7ZQW42.s:315    .text:0000000000000134 .L0 
     /tmp/cc7ZQW42.s:316    .text:0000000000000138 .L0 
     /tmp/cc7ZQW42.s:317    .text:0000000000000138 .L0 
     /tmp/cc7ZQW42.s:319    .text:000000000000013c .L0 
     /tmp/cc7ZQW42.s:320    .text:000000000000013c .L0 
     /tmp/cc7ZQW42.s:322    .text:0000000000000140 .L0 
     /tmp/cc7ZQW42.s:325    .text:0000000000000144 .L0 
     /tmp/cc7ZQW42.s:328    .text:0000000000000148 .L0 
     /tmp/cc7ZQW42.s:331    .text:000000000000014c .L0 
     /tmp/cc7ZQW42.s:334    .text:0000000000000150 .L0 
     /tmp/cc7ZQW42.s:338    .text:0000000000000154 .L0 
     /tmp/cc7ZQW42.s:341    .text:0000000000000154 .L0 
     /tmp/cc7ZQW42.s:342    .text:0000000000000154 .L0 
     /tmp/cc7ZQW42.s:345    .text:000000000000015c .L0 
GAS LISTING /tmp/cc7ZQW42.s 			page 23


     /tmp/cc7ZQW42.s:353    .text:000000000000016c .L0 
     /tmp/cc7ZQW42.s:354    .text:000000000000016c .L0 
     /tmp/cc7ZQW42.s:357    .text:0000000000000174 .L0 
     /tmp/cc7ZQW42.s:366    .text:0000000000000184 .L0 
     /tmp/cc7ZQW42.s:367    .text:0000000000000184 .L0 
     /tmp/cc7ZQW42.s:368    .text:0000000000000184 .L0 
     /tmp/cc7ZQW42.s:374    .text:0000000000000194 .L0 
     /tmp/cc7ZQW42.s:376    .text:0000000000000198 .L0 
     /tmp/cc7ZQW42.s:378    .text:000000000000019c .L0 
     /tmp/cc7ZQW42.s:382    .text:00000000000001a4 .L0 
     /tmp/cc7ZQW42.s:388    .text:00000000000001ac .L0 
     /tmp/cc7ZQW42.s:389    .text:00000000000001ac .L0 
     /tmp/cc7ZQW42.s:395    .text:00000000000001b8 .L0 
     /tmp/cc7ZQW42.s:396    .text:00000000000001b8 .L0 
     /tmp/cc7ZQW42.s:403    .text:00000000000001c0 .L0 
     /tmp/cc7ZQW42.s:404    .text:00000000000001c0 .L0 
     /tmp/cc7ZQW42.s:409    .text:00000000000001c8 .L0 
     /tmp/cc7ZQW42.s:410    .text:00000000000001c8 .L0 
src/cpp/../../h/../h/riscv.hpp:161    .text:00000000000001c8 .L0 
     /tmp/cc7ZQW42.s:422    .text:00000000000001cc .L0 
     /tmp/cc7ZQW42.s:430    .text:00000000000001d4 .L0 
     /tmp/cc7ZQW42.s:431    .text:00000000000001d4 .L0 
     /tmp/cc7ZQW42.s:433    .text:00000000000001dc .L0 
     /tmp/cc7ZQW42.s:434    .text:00000000000001dc .L0 
     /tmp/cc7ZQW42.s:439    .text:00000000000001e4 .L0 
     /tmp/cc7ZQW42.s:440    .text:00000000000001e4 .L0 
src/cpp/../../h/../h/riscv.hpp:161    .text:00000000000001e4 .L0 
     /tmp/cc7ZQW42.s:452    .text:00000000000001e8 .L0 
     /tmp/cc7ZQW42.s:460    .text:00000000000001f0 .L0 
     /tmp/cc7ZQW42.s:461    .text:00000000000001f0 .L0 
     /tmp/cc7ZQW42.s:469    .text:00000000000001fc .L0 
     /tmp/cc7ZQW42.s:477    .text:0000000000000204 .L0 
     /tmp/cc7ZQW42.s:483    .text:0000000000000204 interrupt
     /tmp/cc7ZQW42.s:486    .text:0000000000000204 .L0 
     /tmp/cc7ZQW42.s:488    .text:0000000000000204 .L0 
     /tmp/cc7ZQW42.s:489    .text:0000000000000208 .L0 
     /tmp/cc7ZQW42.s:492    .text:0000000000000210 .L0 
     /tmp/cc7ZQW42.s:493    .text:0000000000000210 .L0 
     /tmp/cc7ZQW42.s:495    .text:0000000000000214 .L0 
     /tmp/cc7ZQW42.s:499    .text:0000000000000214 .L0 
     /tmp/cc7ZQW42.s:500    .text:0000000000000214 .L0 
     /tmp/cc7ZQW42.s:501    .text:0000000000000214 .L0 
src/cpp/../../h/../h/riscv.hpp:100    .text:0000000000000214 .L0 
     /tmp/cc7ZQW42.s:509    .text:000000000000021c .L0 
     /tmp/cc7ZQW42.s:510    .text:000000000000021c .L0 
     /tmp/cc7ZQW42.s:515    .text:0000000000000220 .L0 
     /tmp/cc7ZQW42.s:516    .text:0000000000000220 .L0 
     /tmp/cc7ZQW42.s:519    .text:0000000000000228 .L0 
     /tmp/cc7ZQW42.s:522    .text:0000000000000230 .L0 
     /tmp/cc7ZQW42.s:528    .text:0000000000000240 .L0 
     /tmp/cc7ZQW42.s:533    .text:0000000000000250 .L0 
     /tmp/cc7ZQW42.s:536    .text:0000000000000258 .L0 
     /tmp/cc7ZQW42.s:539    .text:0000000000000260 .L0 
     /tmp/cc7ZQW42.s:679    .sbss:0000000000000000 _ZZ9interruptE1t
     /tmp/cc7ZQW42.s:540    .text:0000000000000260 .L0 
     /tmp/cc7ZQW42.s:544    .text:000000000000026c .L0 
     /tmp/cc7ZQW42.s:547    .text:0000000000000274 .L0 
GAS LISTING /tmp/cc7ZQW42.s 			page 24


     /tmp/cc7ZQW42.s:548    .text:0000000000000274 .L0 
     /tmp/cc7ZQW42.s:557    .text:0000000000000288 .L0 
     /tmp/cc7ZQW42.s:558    .text:0000000000000288 .L0 
     /tmp/cc7ZQW42.s:563    .text:000000000000029c .L0 
     /tmp/cc7ZQW42.s:567    .text:00000000000002a0 .L0 
     /tmp/cc7ZQW42.s:568    .text:00000000000002a0 .L0 
     /tmp/cc7ZQW42.s:571    .text:00000000000002a8 .L0 
src/cpp/interrupt_cpp.cpp:80     .text:00000000000002a8 .L0 
     /tmp/cc7ZQW42.s:581    .text:00000000000002b0 .L0 
     /tmp/cc7ZQW42.s:582    .text:00000000000002b0 .L0 
     /tmp/cc7ZQW42.s:585    .text:00000000000002b8 .L0 
src/cpp/interrupt_cpp.cpp:85     .text:00000000000002b8 .L0 
     /tmp/cc7ZQW42.s:594    .text:00000000000002bc .L0 
     /tmp/cc7ZQW42.s:595    .text:00000000000002c0 .L0 
     /tmp/cc7ZQW42.s:596    .text:00000000000002c0 .L0 
     /tmp/cc7ZQW42.s:598    .text:00000000000002c4 .L0 
     /tmp/cc7ZQW42.s:599    .text:00000000000002c4 .L0 
     /tmp/cc7ZQW42.s:601    .text:00000000000002c8 .L0 
     /tmp/cc7ZQW42.s:605    .text:00000000000002cc .L0 
     /tmp/cc7ZQW42.s:607    .text:00000000000002cc .L0 
     /tmp/cc7ZQW42.s:608    .text:00000000000002cc .L0 
     /tmp/cc7ZQW42.s:614    .text:00000000000002d8 .L0 
     /tmp/cc7ZQW42.s:615    .text:00000000000002d8 .L0 
     /tmp/cc7ZQW42.s:621    .text:00000000000002e4 .L0 
     /tmp/cc7ZQW42.s:622    .text:00000000000002e4 .L0 
     /tmp/cc7ZQW42.s:626    .text:00000000000002f0 .L0 
     /tmp/cc7ZQW42.s:629    .text:00000000000002f8 .L0 
     /tmp/cc7ZQW42.s:630    .text:00000000000002f8 .L0 
     /tmp/cc7ZQW42.s:639    .text:000000000000030c .L0 
     /tmp/cc7ZQW42.s:640    .text:000000000000030c .L0 
     /tmp/cc7ZQW42.s:648    .text:0000000000000324 .L0 
     /tmp/cc7ZQW42.s:649    .text:0000000000000324 .L0 
     /tmp/cc7ZQW42.s:653    .text:0000000000000330 .L0 
     /tmp/cc7ZQW42.s:656    .text:0000000000000338 .L0 
     /tmp/cc7ZQW42.s:657    .text:0000000000000338 .L0 
     /tmp/cc7ZQW42.s:666    .text:000000000000034c .L0 
     /tmp/cc7ZQW42.s:667    .text:000000000000034c .L0 
     /tmp/cc7ZQW42.s:672    .text:0000000000000364 .L0 
     /tmp/cc7ZQW42.s:688    .text:0000000000000364 .L0 
     /tmp/cc7ZQW42.s:19     .text:0000000000000000 .L0 
     /tmp/cc7ZQW42.s:26     .text:0000000000000014 .L0 
     /tmp/cc7ZQW42.s:111    .text:0000000000000064 .L0 
     /tmp/cc7ZQW42.s:389    .text:00000000000001ac .L0 
     /tmp/cc7ZQW42.s:431    .text:00000000000001d4 .L0 
     /tmp/cc7ZQW42.s:540    .text:0000000000000260 .L0 
     /tmp/cc7ZQW42.s:558    .text:0000000000000288 .L0 
     /tmp/cc7ZQW42.s:622    .text:00000000000002e4 .L0 
     /tmp/cc7ZQW42.s:640    .text:000000000000030c .L0 
     /tmp/cc7ZQW42.s:649    .text:0000000000000324 .L0 
     /tmp/cc7ZQW42.s:667    .text:000000000000034c .L0 
     /tmp/cc7ZQW42.s:56     .text:0000000000000034 .L7
     /tmp/cc7ZQW42.s:337    .text:0000000000000154 .L20
     /tmp/cc7ZQW42.s:350    .text:000000000000016c .L21
     /tmp/cc7ZQW42.s:362    .text:0000000000000184 .L22
     /tmp/cc7ZQW42.s:385    .text:00000000000001ac .L23
     /tmp/cc7ZQW42.s:425    .text:00000000000001d4 .L24
     /tmp/cc7ZQW42.s:455    .text:00000000000001f0 .L25
GAS LISTING /tmp/cc7ZQW42.s 			page 25


     /tmp/cc7ZQW42.s:299    .text:0000000000000130 .L12
     /tmp/cc7ZQW42.s:380    .text:00000000000001a4 .L26
     /tmp/cc7ZQW42.s:565    .text:00000000000002a0 .L36
     /tmp/cc7ZQW42.s:579    .text:00000000000002b0 .L37
     /tmp/cc7ZQW42.s:604    .text:00000000000002cc .L38
     /tmp/cc7ZQW42.s:612    .text:00000000000002d8 .L39
     /tmp/cc7ZQW42.s:619    .text:00000000000002e4 .L40
     /tmp/cc7ZQW42.s:646    .text:0000000000000324 .L41
     /tmp/cc7ZQW42.s:592    .text:00000000000002bc .L27
     /tmp/cc7ZQW42.s:2294   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc7ZQW42.s:4474   .debug_str:0000000000000639 .LASF157
     /tmp/cc7ZQW42.s:4364   .debug_str:00000000000002ef .LASF158
     /tmp/cc7ZQW42.s:4538   .debug_str:0000000000000887 .LASF159
     /tmp/cc7ZQW42.s:8      .text:0000000000000000 .Ltext0
     /tmp/cc7ZQW42.s:682    .text:0000000000000364 .Letext0
     /tmp/cc7ZQW42.s:4264   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc7ZQW42.s:4378   .debug_str:000000000000037b .LASF0
     /tmp/cc7ZQW42.s:4402   .debug_str:0000000000000430 .LASF1
     /tmp/cc7ZQW42.s:4544   .debug_str:00000000000008dc .LASF2
     /tmp/cc7ZQW42.s:4484   .debug_str:0000000000000713 .LASF4
     /tmp/cc7ZQW42.s:4388   .debug_str:00000000000003bd .LASF3
     /tmp/cc7ZQW42.s:4278   .debug_str:0000000000000064 .LASF5
     /tmp/cc7ZQW42.s:4456   .debug_str:00000000000005b5 .LASF6
     /tmp/cc7ZQW42.s:4394   .debug_str:00000000000003fc .LASF7
     /tmp/cc7ZQW42.s:4358   .debug_str:00000000000002c3 .LASF8
     /tmp/cc7ZQW42.s:4366   .debug_str:0000000000000309 .LASF9
     /tmp/cc7ZQW42.s:4308   .debug_str:0000000000000144 .LASF10
     /tmp/cc7ZQW42.s:4348   .debug_str:000000000000028d .LASF11
     /tmp/cc7ZQW42.s:4318   .debug_str:0000000000000186 .LASF12
     /tmp/cc7ZQW42.s:4306   .debug_str:0000000000000134 .LASF13
     /tmp/cc7ZQW42.s:4514   .debug_str:00000000000007cc .LASF14
     /tmp/cc7ZQW42.s:4338   .debug_str:000000000000021f .LASF15
     /tmp/cc7ZQW42.s:4504   .debug_str:0000000000000784 .LASF16
     /tmp/cc7ZQW42.s:4356   .debug_str:00000000000002b7 .LASF160
     /tmp/cc7ZQW42.s:4310   .debug_str:0000000000000153 .LASF17
     /tmp/cc7ZQW42.s:4400   .debug_str:000000000000042b .LASF18
     /tmp/cc7ZQW42.s:4452   .debug_str:0000000000000591 .LASF21
     /tmp/cc7ZQW42.s:4294   .debug_str:00000000000000fb .LASF19
     /tmp/cc7ZQW42.s:4500   .debug_str:0000000000000767 .LASF20
     /tmp/cc7ZQW42.s:4548   .debug_str:00000000000008f3 .LASF161
     /tmp/cc7ZQW42.s:4292   .debug_str:00000000000000e2 .LASF23
     /tmp/cc7ZQW42.s:4386   .debug_str:00000000000003af .LASF22
     /tmp/cc7ZQW42.s:4522   .debug_str:0000000000000802 .LASF24
     /tmp/cc7ZQW42.s:4582   .debug_str:00000000000009bf .LASF25
     /tmp/cc7ZQW42.s:4284   .debug_str:0000000000000097 .LASF26
     /tmp/cc7ZQW42.s:4392   .debug_str:00000000000003e0 .LASF27
     /tmp/cc7ZQW42.s:4566   .debug_str:0000000000000981 .LASF28
     /tmp/cc7ZQW42.s:4590   .debug_str:0000000000000a05 .LASF30
     /tmp/cc7ZQW42.s:4478   .debug_str:00000000000006e8 .LASF29
     /tmp/cc7ZQW42.s:4550   .debug_str:00000000000008fd .LASF31
     /tmp/cc7ZQW42.s:4342   .debug_str:0000000000000250 .LASF32
     /tmp/cc7ZQW42.s:4370   .debug_str:0000000000000322 .LASF33
     /tmp/cc7ZQW42.s:4584   .debug_str:00000000000009d2 .LASF47
     /tmp/cc7ZQW42.s:4428   .debug_str:00000000000004ee .LASF49
     /tmp/cc7ZQW42.s:4426   .debug_str:00000000000004e4 .LASF34
     /tmp/cc7ZQW42.s:4282   .debug_str:0000000000000076 .LASF35
     /tmp/cc7ZQW42.s:4518   .debug_str:00000000000007ee .LASF36
GAS LISTING /tmp/cc7ZQW42.s 			page 26


     /tmp/cc7ZQW42.s:4344   .debug_str:000000000000025b .LASF37
     /tmp/cc7ZQW42.s:4572   .debug_str:000000000000099d .LASF43
     /tmp/cc7ZQW42.s:4328   .debug_str:00000000000001de .LASF45
     /tmp/cc7ZQW42.s:4414   .debug_str:000000000000048c .LASF38
     /tmp/cc7ZQW42.s:4562   .debug_str:0000000000000971 .LASF39
     /tmp/cc7ZQW42.s:4464   .debug_str:00000000000005f6 .LASF99
     /tmp/cc7ZQW42.s:4398   .debug_str:0000000000000422 .LASF40
     /tmp/cc7ZQW42.s:4336   .debug_str:0000000000000216 .LASF41
     /tmp/cc7ZQW42.s:4570   .debug_str:0000000000000994 .LASF42
     /tmp/cc7ZQW42.s:4470   .debug_str:0000000000000625 .LASF44
     /tmp/cc7ZQW42.s:4446   .debug_str:0000000000000566 .LASF46
     /tmp/cc7ZQW42.s:4546   .debug_str:00000000000008ea .LASF48
     /tmp/cc7ZQW42.s:4412   .debug_str:0000000000000477 .LASF50
     /tmp/cc7ZQW42.s:4434   .debug_str:0000000000000523 .LASF51
     /tmp/cc7ZQW42.s:4396   .debug_str:000000000000040f .LASF52
     /tmp/cc7ZQW42.s:4458   .debug_str:00000000000005c8 .LASF53
     /tmp/cc7ZQW42.s:4460   .debug_str:00000000000005cf .LASF54
     /tmp/cc7ZQW42.s:4288   .debug_str:00000000000000cc .LASF91
     /tmp/cc7ZQW42.s:4454   .debug_str:00000000000005a1 .LASF93
     /tmp/cc7ZQW42.s:4432   .debug_str:000000000000051b .LASF55
     /tmp/cc7ZQW42.s:4444   .debug_str:0000000000000552 .LASF56
     /tmp/cc7ZQW42.s:4580   .debug_str:00000000000009b7 .LASF57
     /tmp/cc7ZQW42.s:4532   .debug_str:0000000000000864 .LASF58
     /tmp/cc7ZQW42.s:4600   .debug_str:0000000000000a5c .LASF59
     /tmp/cc7ZQW42.s:4384   .debug_str:000000000000039b .LASF60
     /tmp/cc7ZQW42.s:4410   .debug_str:000000000000046f .LASF61
     /tmp/cc7ZQW42.s:4462   .debug_str:00000000000005e2 .LASF62
     /tmp/cc7ZQW42.s:4510   .debug_str:00000000000007b8 .LASF63
     /tmp/cc7ZQW42.s:4488   .debug_str:000000000000071f .LASF64
     /tmp/cc7ZQW42.s:4490   .debug_str:0000000000000732 .LASF65
     /tmp/cc7ZQW42.s:4312   .debug_str:0000000000000158 .LASF66
     /tmp/cc7ZQW42.s:4382   .debug_str:0000000000000395 .LASF67
     /tmp/cc7ZQW42.s:4326   .debug_str:00000000000001cc .LASF68
     /tmp/cc7ZQW42.s:4334   .debug_str:0000000000000210 .LASF69
     /tmp/cc7ZQW42.s:4374   .debug_str:0000000000000351 .LASF70
     /tmp/cc7ZQW42.s:4280   .debug_str:000000000000006b .LASF71
     /tmp/cc7ZQW42.s:4480   .debug_str:00000000000006f2 .LASF72
     /tmp/cc7ZQW42.s:4472   .debug_str:000000000000062e .LASF73
     /tmp/cc7ZQW42.s:4594   .debug_str:0000000000000a26 .LASF74
     /tmp/cc7ZQW42.s:4560   .debug_str:0000000000000967 .LASF75
     /tmp/cc7ZQW42.s:4424   .debug_str:00000000000004ce .LASF76
     /tmp/cc7ZQW42.s:4564   .debug_str:0000000000000977 .LASF77
     /tmp/cc7ZQW42.s:4586   .debug_str:00000000000009de .LASF78
     /tmp/cc7ZQW42.s:4436   .debug_str:000000000000052a .LASF79
     /tmp/cc7ZQW42.s:4450   .debug_str:0000000000000580 .LASF80
     /tmp/cc7ZQW42.s:4534   .debug_str:0000000000000878 .LASF81
     /tmp/cc7ZQW42.s:4588   .debug_str:00000000000009f4 .LASF82
     /tmp/cc7ZQW42.s:4438   .debug_str:000000000000052f .LASF83
     /tmp/cc7ZQW42.s:4390   .debug_str:00000000000003cf .LASF84
     /tmp/cc7ZQW42.s:4574   .debug_str:00000000000009a8 .LASF85
     /tmp/cc7ZQW42.s:4300   .debug_str:0000000000000117 .LASF86
     /tmp/cc7ZQW42.s:4576   .debug_str:00000000000009ad .LASF87
     /tmp/cc7ZQW42.s:4602   .debug_str:0000000000000a64 .LASF88
     /tmp/cc7ZQW42.s:4578   .debug_str:00000000000009b2 .LASF89
     /tmp/cc7ZQW42.s:4540   .debug_str:00000000000008c3 .LASF90
     /tmp/cc7ZQW42.s:4380   .debug_str:0000000000000388 .LASF92
     /tmp/cc7ZQW42.s:4552   .debug_str:0000000000000919 .LASF94
GAS LISTING /tmp/cc7ZQW42.s 			page 27


     /tmp/cc7ZQW42.s:4492   .debug_str:0000000000000739 .LASF95
     /tmp/cc7ZQW42.s:4340   .debug_str:0000000000000235 .LASF96
     /tmp/cc7ZQW42.s:4368   .debug_str:0000000000000317 .LASF97
     /tmp/cc7ZQW42.s:4376   .debug_str:0000000000000363 .LASF98
     /tmp/cc7ZQW42.s:4526   .debug_str:000000000000083d .LASF100
     /tmp/cc7ZQW42.s:4268   .debug_str:0000000000000013 .LASF101
     /tmp/cc7ZQW42.s:4304   .debug_str:000000000000012e .LASF102
     /tmp/cc7ZQW42.s:4430   .debug_str:0000000000000512 .LASF103
     /tmp/cc7ZQW42.s:4296   .debug_str:0000000000000100 .LASF104
     /tmp/cc7ZQW42.s:4314   .debug_str:000000000000016b .LASF162
     /tmp/cc7ZQW42.s:4596   .debug_str:0000000000000a3e .LASF105
     /tmp/cc7ZQW42.s:4362   .debug_str:00000000000002e3 .LASF106
     /tmp/cc7ZQW42.s:4422   .debug_str:00000000000004be .LASF107
     /tmp/cc7ZQW42.s:4352   .debug_str:00000000000002a1 .LASF108
     /tmp/cc7ZQW42.s:4272   .debug_str:0000000000000020 .LASF109
     /tmp/cc7ZQW42.s:4442   .debug_str:0000000000000545 .LASF110
     /tmp/cc7ZQW42.s:4502   .debug_str:0000000000000771 .LASF111
     /tmp/cc7ZQW42.s:4476   .debug_str:00000000000006db .LASF112
     /tmp/cc7ZQW42.s:4486   .debug_str:000000000000071a .LASF113
     /tmp/cc7ZQW42.s:4276   .debug_str:0000000000000058 .LASF114
     /tmp/cc7ZQW42.s:4482   .debug_str:000000000000070a .LASF115
     /tmp/cc7ZQW42.s:4320   .debug_str:0000000000000196 .LASF116
     /tmp/cc7ZQW42.s:4496   .debug_str:0000000000000758 .LASF117
     /tmp/cc7ZQW42.s:4466   .debug_str:0000000000000601 .LASF118
     /tmp/cc7ZQW42.s:4416   .debug_str:0000000000000491 .LASF119
     /tmp/cc7ZQW42.s:4346   .debug_str:000000000000027c .LASF120
     /tmp/cc7ZQW42.s:4520   .debug_str:00000000000007f7 .LASF121
     /tmp/cc7ZQW42.s:4516   .debug_str:00000000000007d8 .LASF122
     /tmp/cc7ZQW42.s:4406   .debug_str:0000000000000449 .LASF123
     /tmp/cc7ZQW42.s:4530   .debug_str:000000000000084b .LASF124
     /tmp/cc7ZQW42.s:4512   .debug_str:00000000000007bf .LASF125
     /tmp/cc7ZQW42.s:4558   .debug_str:0000000000000945 .LASF126
     /tmp/cc7ZQW42.s:4448   .debug_str:000000000000057b .LASF163
     /tmp/cc7ZQW42.s:4404   .debug_str:0000000000000443 .LASF127
     /tmp/cc7ZQW42.s:4468   .debug_str:0000000000000615 .LASF128
     /tmp/cc7ZQW42.s:4330   .debug_str:0000000000000201 .LASF129
     /tmp/cc7ZQW42.s:4316   .debug_str:0000000000000173 .LASF130
     /tmp/cc7ZQW42.s:4554   .debug_str:0000000000000933 .LASF131
     /tmp/cc7ZQW42.s:4420   .debug_str:00000000000004a4 .LASF132
     /tmp/cc7ZQW42.s:4524   .debug_str:0000000000000835 .LASF133
     /tmp/cc7ZQW42.s:4494   .debug_str:0000000000000747 .LASF134
     /tmp/cc7ZQW42.s:4270   .debug_str:000000000000001b .LASF135
     /tmp/cc7ZQW42.s:4592   .debug_str:0000000000000a21 .LASF136
     /tmp/cc7ZQW42.s:4498   .debug_str:0000000000000761 .LASF137
     /tmp/cc7ZQW42.s:4536   .debug_str:000000000000087d .LASF138
     /tmp/cc7ZQW42.s:4332   .debug_str:000000000000020a .LASF139
     /tmp/cc7ZQW42.s:4418   .debug_str:0000000000000498 .LASF140
     /tmp/cc7ZQW42.s:4542   .debug_str:00000000000008d4 .LASF141
     /tmp/cc7ZQW42.s:4508   .debug_str:00000000000007a1 .LASF164
     /tmp/cc7ZQW42.s:4298   .debug_str:0000000000000109 .LASF165
     /tmp/cc7ZQW42.s:4408   .debug_str:0000000000000456 .LASF166
     /tmp/cc7ZQW42.s:4324   .debug_str:00000000000001be .LASF167
     /tmp/cc7ZQW42.s:4274   .debug_str:0000000000000030 .LASF168
     /tmp/cc7ZQW42.s:4354   .debug_str:00000000000002ad .LASF142
     /tmp/cc7ZQW42.s:484    .text:0000000000000204 .LFB40
     /tmp/cc7ZQW42.s:673    .text:0000000000000364 .LFE40
     /tmp/cc7ZQW42.s:3376   .debug_loc:0000000000000000 .LLST19
GAS LISTING /tmp/cc7ZQW42.s 			page 28


     /tmp/cc7ZQW42.s:3460   .debug_loc:0000000000000142 .LLST20
     /tmp/cc7ZQW42.s:3540   .debug_loc:0000000000000271 .LLST21
     /tmp/cc7ZQW42.s:3620   .debug_loc:00000000000003a0 .LLST22
     /tmp/cc7ZQW42.s:3700   .debug_loc:00000000000004cf .LLST23
     /tmp/cc7ZQW42.s:4506   .debug_str:000000000000079a .LASF143
     /tmp/cc7ZQW42.s:3736   .debug_loc:000000000000055a .LLST24
     /tmp/cc7ZQW42.s:497    .text:0000000000000214 .LBB82
     /tmp/cc7ZQW42.s:513    .text:0000000000000220 .LBE82
     /tmp/cc7ZQW42.s:498    .text:0000000000000214 .LBB83
     /tmp/cc7ZQW42.s:512    .text:0000000000000220 .LBE83
     /tmp/cc7ZQW42.s:555    .text:0000000000000288 .LVL49
     /tmp/cc7ZQW42.s:569    .text:00000000000002a8 .LVL51
     /tmp/cc7ZQW42.s:583    .text:00000000000002b8 .LVL53
     /tmp/cc7ZQW42.s:609    .text:00000000000002d4 .LVL56
     /tmp/cc7ZQW42.s:616    .text:00000000000002e0 .LVL58
     /tmp/cc7ZQW42.s:637    .text:000000000000030c .LVL64
     /tmp/cc7ZQW42.s:664    .text:000000000000034c .LVL70
     /tmp/cc7ZQW42.s:4322   .debug_str:00000000000001b5 .LASF144
     /tmp/cc7ZQW42.s:4440   .debug_str:0000000000000534 .LASF145
     /tmp/cc7ZQW42.s:205    .text:00000000000000b4 .LFB39
     /tmp/cc7ZQW42.s:478    .text:0000000000000204 .LFE39
     /tmp/cc7ZQW42.s:3767   .debug_loc:00000000000005ef .LLST6
     /tmp/cc7ZQW42.s:3789   .debug_loc:000000000000064e .LLST7
     /tmp/cc7ZQW42.s:3855   .debug_loc:000000000000077e .LLST8
     /tmp/cc7ZQW42.s:3939   .debug_loc:00000000000008c0 .LLST9
     /tmp/cc7ZQW42.s:4019   .debug_loc:00000000000009ef .LLST10
     /tmp/cc7ZQW42.s:4528   .debug_str:0000000000000846 .LASF146
     /tmp/cc7ZQW42.s:4099   .debug_loc:0000000000000b1e .LLST11
     /tmp/cc7ZQW42.s:4568   .debug_str:000000000000098c .LASF147
     /tmp/cc7ZQW42.s:4110   .debug_loc:0000000000000b54 .LLST12
     /tmp/cc7ZQW42.s:4121   .debug_loc:0000000000000b8a .LLST13
     /tmp/cc7ZQW42.s:364    .text:0000000000000184 .LBB58
     /tmp/cc7ZQW42.s:386    .text:00000000000001ac .LBE58
     /tmp/cc7ZQW42.s:4156   .debug_loc:0000000000000c32 .LLST14
     /tmp/cc7ZQW42.s:372    .text:0000000000000194 .LVL31
     /tmp/cc7ZQW42.s:228    .text:00000000000000dc .LBB51
     /tmp/cc7ZQW42.s:243    .text:00000000000000e8 .LBE51
     /tmp/cc7ZQW42.s:229    .text:00000000000000dc .LBB52
     /tmp/cc7ZQW42.s:242    .text:00000000000000e8 .LBE52
     /tmp/cc7ZQW42.s:247    .text:00000000000000ec .LBB53
     /tmp/cc7ZQW42.s:263    .text:00000000000000f8 .LBE53
     /tmp/cc7ZQW42.s:248    .text:00000000000000ec .LBB54
     /tmp/cc7ZQW42.s:262    .text:00000000000000f8 .LBE54
     /tmp/cc7ZQW42.s:392    .text:00000000000001b8 .LBB59
     /tmp/cc7ZQW42.s:401    .text:00000000000001c0 .LBE59
     /tmp/cc7ZQW42.s:4167   .debug_loc:0000000000000c68 .LLST15
     /tmp/cc7ZQW42.s:407    .text:00000000000001c8 .LBB61
     /tmp/cc7ZQW42.s:417    .text:00000000000001cc .LBE61
     /tmp/cc7ZQW42.s:4174   .debug_loc:0000000000000c8b .LLST16
     /tmp/cc7ZQW42.s:437    .text:00000000000001e4 .LBB63
     /tmp/cc7ZQW42.s:447    .text:00000000000001e8 .LBE63
     /tmp/cc7ZQW42.s:4181   .debug_loc:0000000000000cae .LLST17
     /tmp/cc7ZQW42.s:301    .text:0000000000000130 .LBB76
     /tmp/cc7ZQW42.s:312    .text:0000000000000134 .LBE76
     /tmp/cc7ZQW42.s:4188   .debug_loc:0000000000000cd1 .LLST18
     /tmp/cc7ZQW42.s:343    .text:000000000000015c .LVL24
     /tmp/cc7ZQW42.s:347    .text:0000000000000168 .LVL25
GAS LISTING /tmp/cc7ZQW42.s 			page 29


     /tmp/cc7ZQW42.s:355    .text:0000000000000174 .LVL27
     /tmp/cc7ZQW42.s:359    .text:0000000000000180 .LVL28
     /tmp/cc7ZQW42.s:405    .text:00000000000001c8 .LVL36
     /tmp/cc7ZQW42.s:435    .text:00000000000001e4 .LVL38
     /tmp/cc7ZQW42.s:464    .text:00000000000001fc .LVL41
     /tmp/cc7ZQW42.s:4286   .debug_str:00000000000000c3 .LASF148
     /tmp/cc7ZQW42.s:4598   .debug_str:0000000000000a4b .LASF149
     /tmp/cc7ZQW42.s:180    .text:000000000000009c .LFB38
     /tmp/cc7ZQW42.s:199    .text:00000000000000b4 .LFE38
     /tmp/cc7ZQW42.s:4290   .debug_str:00000000000000d4 .LASF150
     /tmp/cc7ZQW42.s:4266   .debug_str:0000000000000000 .LASF151
     /tmp/cc7ZQW42.s:13     .text:0000000000000000 .LFB37
     /tmp/cc7ZQW42.s:174    .text:000000000000009c .LFE37
     /tmp/cc7ZQW42.s:73     .text:000000000000004c .LBB37
     /tmp/cc7ZQW42.s:141    .text:000000000000007c .LBE37
     /tmp/cc7ZQW42.s:4195   .debug_loc:0000000000000cf4 .LLST1
     /tmp/cc7ZQW42.s:4202   .debug_loc:0000000000000d17 .LLST2
     /tmp/cc7ZQW42.s:75     .text:000000000000004c .LBB38
     /tmp/cc7ZQW42.s:91     .text:0000000000000058 .LBE38
     /tmp/cc7ZQW42.s:76     .text:000000000000004c .LBB39
     /tmp/cc7ZQW42.s:90     .text:0000000000000058 .LBE39
     /tmp/cc7ZQW42.s:92     .text:0000000000000058 .LBB40
     /tmp/cc7ZQW42.s:108    .text:0000000000000064 .LBE40
     /tmp/cc7ZQW42.s:93     .text:0000000000000058 .LBB41
     /tmp/cc7ZQW42.s:107    .text:0000000000000064 .LBE41
     /tmp/cc7ZQW42.s:117    .text:0000000000000074 .LBB42
     /tmp/cc7ZQW42.s:128    .text:0000000000000078 .LBE42
     /tmp/cc7ZQW42.s:4209   .debug_loc:0000000000000d3a .LLST3
     /tmp/cc7ZQW42.s:130    .text:0000000000000078 .LBB44
     /tmp/cc7ZQW42.s:140    .text:000000000000007c .LBE44
     /tmp/cc7ZQW42.s:4216   .debug_loc:0000000000000d5d .LLST4
     /tmp/cc7ZQW42.s:115    .text:0000000000000074 .LVL6
     /tmp/cc7ZQW42.s:29     .text:0000000000000020 .LBB35
     /tmp/cc7ZQW42.s:37     .text:0000000000000024 .LBE35
     /tmp/cc7ZQW42.s:4223   .debug_loc:0000000000000d80 .LLST0
     /tmp/cc7ZQW42.s:43     .text:0000000000000028 .LBB46
     /tmp/cc7ZQW42.s:4256   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc7ZQW42.s:4230   .debug_loc:0000000000000da3 .LLST5
     /tmp/cc7ZQW42.s:4350   .debug_str:000000000000029c .LASF152
     /tmp/cc7ZQW42.s:4556   .debug_str:0000000000000940 .LASF153
     /tmp/cc7ZQW42.s:4372   .debug_str:0000000000000345 .LASF154
     /tmp/cc7ZQW42.s:4302   .debug_str:0000000000000128 .LASF156
     /tmp/cc7ZQW42.s:4360   .debug_str:00000000000002d3 .LASF155
     /tmp/cc7ZQW42.s:487    .text:0000000000000204 .LVL42
     /tmp/cc7ZQW42.s:553    .text:0000000000000280 .LVL48
     /tmp/cc7ZQW42.s:564    .text:00000000000002a0 .LVL50
     /tmp/cc7ZQW42.s:590    .text:00000000000002bc .LVL54
     /tmp/cc7ZQW42.s:603    .text:00000000000002cc .LVL55
     /tmp/cc7ZQW42.s:611    .text:00000000000002d8 .LVL57
     /tmp/cc7ZQW42.s:618    .text:00000000000002e4 .LVL59
     /tmp/cc7ZQW42.s:635    .text:0000000000000304 .LVL63
     /tmp/cc7ZQW42.s:645    .text:0000000000000324 .LVL65
     /tmp/cc7ZQW42.s:662    .text:0000000000000344 .LVL69
     /tmp/cc7ZQW42.s:551    .text:000000000000027c .LVL47
     /tmp/cc7ZQW42.s:578    .text:00000000000002b0 .LVL52
     /tmp/cc7ZQW42.s:633    .text:0000000000000300 .LVL62
     /tmp/cc7ZQW42.s:660    .text:0000000000000340 .LVL68
GAS LISTING /tmp/cc7ZQW42.s 			page 30


     /tmp/cc7ZQW42.s:549    .text:0000000000000278 .LVL46
     /tmp/cc7ZQW42.s:631    .text:00000000000002fc .LVL61
     /tmp/cc7ZQW42.s:658    .text:000000000000033c .LVL67
     /tmp/cc7ZQW42.s:542    .text:000000000000026c .LVL45
     /tmp/cc7ZQW42.s:624    .text:00000000000002f0 .LVL60
     /tmp/cc7ZQW42.s:651    .text:0000000000000330 .LVL66
     /tmp/cc7ZQW42.s:523    .text:0000000000000234 .LVL44
     /tmp/cc7ZQW42.s:511    .text:0000000000000220 .LVL43
     /tmp/cc7ZQW42.s:208    .text:00000000000000b4 .LVL13
     /tmp/cc7ZQW42.s:269    .text:0000000000000104 .LVL16
     /tmp/cc7ZQW42.s:323    .text:0000000000000140 .LVL19
     /tmp/cc7ZQW42.s:336    .text:0000000000000154 .LVL23
     /tmp/cc7ZQW42.s:298    .text:0000000000000130 .LVL17
     /tmp/cc7ZQW42.s:329    .text:0000000000000148 .LVL21
     /tmp/cc7ZQW42.s:349    .text:000000000000016c .LVL26
     /tmp/cc7ZQW42.s:361    .text:0000000000000184 .LVL29
     /tmp/cc7ZQW42.s:370    .text:000000000000018c .LVL30
     /tmp/cc7ZQW42.s:384    .text:00000000000001ac .LVL32
     /tmp/cc7ZQW42.s:424    .text:00000000000001d4 .LVL37
     /tmp/cc7ZQW42.s:454    .text:00000000000001f0 .LVL39
     /tmp/cc7ZQW42.s:462    .text:00000000000001f4 .LVL40
     /tmp/cc7ZQW42.s:397    .text:00000000000001bc .LVL34
     /tmp/cc7ZQW42.s:246    .text:00000000000000ec .LVL14
     /tmp/cc7ZQW42.s:326    .text:0000000000000144 .LVL20
     /tmp/cc7ZQW42.s:261    .text:00000000000000f8 .LVL15
     /tmp/cc7ZQW42.s:332    .text:000000000000014c .LVL22
     /tmp/cc7ZQW42.s:391    .text:00000000000001b8 .LVL33
     /tmp/cc7ZQW42.s:399    .text:00000000000001c0 .LVL35
     /tmp/cc7ZQW42.s:309    .text:0000000000000134 .LVL18
     /tmp/cc7ZQW42.s:89     .text:0000000000000058 .LVL4
     /tmp/cc7ZQW42.s:169    .text:0000000000000094 .LVL11
     /tmp/cc7ZQW42.s:106    .text:0000000000000064 .LVL5
     /tmp/cc7ZQW42.s:166    .text:0000000000000090 .LVL10
     /tmp/cc7ZQW42.s:125    .text:0000000000000078 .LVL7
     /tmp/cc7ZQW42.s:28     .text:0000000000000020 .LVL0
     /tmp/cc7ZQW42.s:35     .text:0000000000000024 .LVL1
     /tmp/cc7ZQW42.s:42     .text:0000000000000028 .LVL2
     /tmp/cc7ZQW42.s:53     .text:0000000000000030 .LVL3
     /tmp/cc7ZQW42.s:144    .text:000000000000007c .LVL8
     /tmp/cc7ZQW42.s:154    .text:0000000000000084 .LVL9
     /tmp/cc7ZQW42.s:689    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc7ZQW42.s:58     .text:0000000000000034 .LBE46
     /tmp/cc7ZQW42.s:145    .text:000000000000007c .LBB50
     /tmp/cc7ZQW42.s:157    .text:0000000000000084 .LBE50

UNDEFINED SYMBOLS
_ZN3TCB16timeSliceCounterE
_ZN3TCB7runningE
_ZN3TCB5yieldEv
_ZN15MemoryAllocator11getInstanceEv
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN3TCB12createThreadEPFvPvES0_Pm
_ZN3TCB8dispatchEv
_ZN3TCB12deleteThreadEPS_
_Z5printmcb
console_handler
GAS LISTING /tmp/cc7ZQW42.s 			page 31


