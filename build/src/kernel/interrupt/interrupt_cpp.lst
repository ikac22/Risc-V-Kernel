GAS LISTING /tmp/ccBdKcG0.s 			page 1


   1              		.file	"interrupt_cpp.cpp"
   2              		.option nopic
   3              		.option norelax
   4              		.attribute arch, "rv64i2p0_m2p0_a2p0"
   5              		.attribute unaligned_access, 0
   6              		.attribute stack_align, 16
   7              		.text
   8              	.Ltext0:
   9              		.align	2
  10              		.globl	_Z13timer_handlerv
  12              	_Z13timer_handlerv:
  13              	.LFB113:
  14              		.file 1 "src/kernel/interrupt/interrupt_cpp.cpp"
   1:src/kernel/interrupt/interrupt_cpp.cpp **** #include"../../../h/kernel_lib.h"
   2:src/kernel/interrupt/interrupt_cpp.cpp **** 
   3:src/kernel/interrupt/interrupt_cpp.cpp **** enum sysCallNum
   4:src/kernel/interrupt/interrupt_cpp.cpp **** {
   5:src/kernel/interrupt/interrupt_cpp.cpp ****     MA = 0x1, 
   6:src/kernel/interrupt/interrupt_cpp.cpp ****     MF = 0x2,
   7:src/kernel/interrupt/interrupt_cpp.cpp ****     TC = 0x11,
   8:src/kernel/interrupt/interrupt_cpp.cpp ****     TE = 0x12,
   9:src/kernel/interrupt/interrupt_cpp.cpp ****     TD = 0x13,
  10:src/kernel/interrupt/interrupt_cpp.cpp ****     SO = 0x21,
  11:src/kernel/interrupt/interrupt_cpp.cpp ****     SC = 0x22,
  12:src/kernel/interrupt/interrupt_cpp.cpp ****     SW = 0x23,
  13:src/kernel/interrupt/interrupt_cpp.cpp ****     SS = 0x24,
  14:src/kernel/interrupt/interrupt_cpp.cpp ****     DTH = 0x69,
  15:src/kernel/interrupt/interrupt_cpp.cpp ****     TS = 0x31,
  16:src/kernel/interrupt/interrupt_cpp.cpp ****     GC = 0x41,
  17:src/kernel/interrupt/interrupt_cpp.cpp ****     PC = 0x42,     
  18:src/kernel/interrupt/interrupt_cpp.cpp **** };
  19:src/kernel/interrupt/interrupt_cpp.cpp **** 
  20:src/kernel/interrupt/interrupt_cpp.cpp **** enum intNum
  21:src/kernel/interrupt/interrupt_cpp.cpp **** {
  22:src/kernel/interrupt/interrupt_cpp.cpp ****     IH = 0x8000000000000009,
  23:src/kernel/interrupt/interrupt_cpp.cpp ****     IT = 0x8000000000000001,
  24:src/kernel/interrupt/interrupt_cpp.cpp ****     IS = 9,
  25:src/kernel/interrupt/interrupt_cpp.cpp ****     IU = 8,
  26:src/kernel/interrupt/interrupt_cpp.cpp ****     II = 2,
  27:src/kernel/interrupt/interrupt_cpp.cpp ****     IR = 5,
  28:src/kernel/interrupt/interrupt_cpp.cpp ****     IW = 7,
  29:src/kernel/interrupt/interrupt_cpp.cpp ****     PFL = 13,
  30:src/kernel/interrupt/interrupt_cpp.cpp ****     PFI = 12,
  31:src/kernel/interrupt/interrupt_cpp.cpp ****     PFW = 15
  32:src/kernel/interrupt/interrupt_cpp.cpp **** };
  33:src/kernel/interrupt/interrupt_cpp.cpp **** 
  34:src/kernel/interrupt/interrupt_cpp.cpp **** void timer_handler()
  35:src/kernel/interrupt/interrupt_cpp.cpp **** {
  15              		.loc 1 35 1
  16              		.cfi_startproc
  17 0000 130101FD 		addi	sp,sp,-48
  18              		.cfi_def_cfa_offset 48
  19 0004 23341102 		sd	ra,40(sp)
  20 0008 23308102 		sd	s0,32(sp)
  21 000c 233C9100 		sd	s1,24(sp)
  22 0010 23382101 		sd	s2,16(sp)
  23              		.cfi_offset 1, -8
GAS LISTING /tmp/ccBdKcG0.s 			page 2


  24              		.cfi_offset 8, -16
  25              		.cfi_offset 9, -24
  26              		.cfi_offset 18, -32
  27 0014 13040103 		addi	s0,sp,48
  28              		.cfi_def_cfa 8, 0
  36:src/kernel/interrupt/interrupt_cpp.cpp ****     Scheduler::update_sleep();
  29              		.loc 1 36 5
  30              		.loc 1 36 28 is_stmt 0
  31 0018 97000000 		call	_ZN9Scheduler12update_sleepEv
  31      E7800000 
  32              	.LVL0:
  37:src/kernel/interrupt/interrupt_cpp.cpp **** 
  38:src/kernel/interrupt/interrupt_cpp.cpp ****     //uvecavanje vremena koriscenja procesora tekuceg thread
  39:src/kernel/interrupt/interrupt_cpp.cpp ****     TCB::timeSliceCounter++;
  33              		.loc 1 39 5 is_stmt 1
  34              		.loc 1 39 26 is_stmt 0
  35 0020 17070000 		lla	a4,_ZN3TCB16timeSliceCounterE
  35      13070700 
  36 0028 83370700 		ld	a5,0(a4)
  37 002c 93871700 		addi	a5,a5,1
  38 0030 2330F700 		sd	a5,0(a4)
  40:src/kernel/interrupt/interrupt_cpp.cpp ****     
  41:src/kernel/interrupt/interrupt_cpp.cpp ****     if(TCB::timeSliceCounter >= TCB::running->getTimeSlice())
  39              		.loc 1 41 5 is_stmt 1
  40              	.LBB122:
  41              		.loc 1 41 59 is_stmt 0
  42 0034 17070000 		lla	a4,_ZN3TCB7runningE
  42      13070700 
  43 003c 03370700 		ld	a4,0(a4)
  44              	.LVL1:
  45              	.LBB123:
  46              	.LBB124:
  47              		.file 2 "src/kernel/interrupt/../../../h/../h/tcb.hpp"
   1:src/kernel/interrupt/../../../h/../h/tcb.hpp **** #ifndef __tcb__h
   2:src/kernel/interrupt/../../../h/../h/tcb.hpp **** #define __tcb__h
   3:src/kernel/interrupt/../../../h/../h/tcb.hpp **** 
   4:src/kernel/interrupt/../../../h/../h/tcb.hpp **** #include"../h/memory_allocator.hpp"
   5:src/kernel/interrupt/../../../h/../h/tcb.hpp **** #include"../h/slab_allocator.h"
   6:src/kernel/interrupt/../../../h/../h/tcb.hpp **** #include "object_cache.h"
   7:src/kernel/interrupt/../../../h/../h/tcb.hpp **** 
   8:src/kernel/interrupt/../../../h/../h/tcb.hpp **** class KSemaphore;
   9:src/kernel/interrupt/../../../h/../h/tcb.hpp **** 
  10:src/kernel/interrupt/../../../h/../h/tcb.hpp **** /* THREAD CONTROL BLOCK */
  11:src/kernel/interrupt/../../../h/../h/tcb.hpp **** class TCB{ 
  12:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     
  13:src/kernel/interrupt/../../../h/../h/tcb.hpp **** public:
  14:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     //alokacija
  15:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     //#include"../h/kernel_operators.hpp"
  16:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     
  17:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     void* operator new(size_t sz); 
  18:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     void* operator new[](size_t sz);
  19:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     void operator delete(void* ptr);
  20:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     void operator delete[](void* ptr);
  21:src/kernel/interrupt/../../../h/../h/tcb.hpp **** 
  22:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     using Body = void (*)(void*);
  23:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     enum TCBState{
  24:src/kernel/interrupt/../../../h/../h/tcb.hpp ****         BLOCKED,
GAS LISTING /tmp/ccBdKcG0.s 			page 3


  25:src/kernel/interrupt/../../../h/../h/tcb.hpp ****         READY,
  26:src/kernel/interrupt/../../../h/../h/tcb.hpp ****         FINISHED,
  27:src/kernel/interrupt/../../../h/../h/tcb.hpp ****         SLEEPING,
  28:src/kernel/interrupt/../../../h/../h/tcb.hpp ****         PREPARING
  29:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     };
  30:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     
  31:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     ~TCB(){ 
  32:src/kernel/interrupt/../../../h/../h/tcb.hpp ****         if(isKernelThread()){
  33:src/kernel/interrupt/../../../h/../h/tcb.hpp ****             SlabAllocator::getInstance().kfree(this->stack);
  34:src/kernel/interrupt/../../../h/../h/tcb.hpp ****         }
  35:src/kernel/interrupt/../../../h/../h/tcb.hpp ****         else{
  36:src/kernel/interrupt/../../../h/../h/tcb.hpp ****             MemoryAllocator& allocator = MemoryAllocator::getInstance(); 
  37:src/kernel/interrupt/../../../h/../h/tcb.hpp ****             allocator.mem_free(this->stack);
  38:src/kernel/interrupt/../../../h/../h/tcb.hpp ****         }
  39:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     }
  40:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     
  41:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     //nestaticki metodi
  42:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     void setState(TCBState s) {state = s;}
  43:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     TCBState getState() const{ return state; }
  44:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     void finish() { state = FINISHED; }
  45:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     bool isFinished(){ return state == FINISHED; }
  46:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  48              		.loc 2 46 35 is_stmt 1
  49              		.loc 2 46 42 is_stmt 0
  50 0040 03378702 		ld	a4,40(a4)
  51              	.LVL2:
  52              	.LBE124:
  53              	.LBE123:
  54              		.loc 1 41 5
  55 0044 63F2E702 		bgeu	a5,a4,.L4
  56              	.L2:
  57              	.LBE122:
  42:src/kernel/interrupt/interrupt_cpp.cpp ****     {
  43:src/kernel/interrupt/interrupt_cpp.cpp ****         uint64 sstatus = Riscv::r_sstatus(),
  44:src/kernel/interrupt/interrupt_cpp.cpp ****         sepc = Riscv::r_sepc();
  45:src/kernel/interrupt/interrupt_cpp.cpp ****         
  46:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::timeSliceCounter = 0;
  47:src/kernel/interrupt/interrupt_cpp.cpp ****         
  48:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::yield();
  49:src/kernel/interrupt/interrupt_cpp.cpp **** 
  50:src/kernel/interrupt/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
  51:src/kernel/interrupt/interrupt_cpp.cpp ****         Riscv::w_sepc(sepc);
  52:src/kernel/interrupt/interrupt_cpp.cpp ****     } 
  53:src/kernel/interrupt/interrupt_cpp.cpp **** 
  54:src/kernel/interrupt/interrupt_cpp.cpp ****     
  55:src/kernel/interrupt/interrupt_cpp.cpp ****     Riscv::mc_sip(Riscv::SIP_SSIE);
  58              		.loc 1 55 5 is_stmt 1
  59              	.LVL3:
  60              	.LBB134:
  61              	.LBB135:
  62              		.file 3 "src/kernel/interrupt/../../../h/../h/riscv.hpp"
   1:src/kernel/interrupt/../../../h/../h/riscv.hpp **** #ifndef __riscv__
   2:src/kernel/interrupt/../../../h/../h/riscv.hpp **** #define __riscv__
   3:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
   4:src/kernel/interrupt/../../../h/../h/riscv.hpp **** #include"../lib/hw.h"
   5:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
   6:src/kernel/interrupt/../../../h/../h/riscv.hpp **** class Riscv{
GAS LISTING /tmp/ccBdKcG0.s 			page 4


   7:src/kernel/interrupt/../../../h/../h/riscv.hpp **** public:
   8:src/kernel/interrupt/../../../h/../h/riscv.hpp **** /* 
   9:src/kernel/interrupt/../../../h/../h/riscv.hpp **** --------------------SUPERVISOR REGISTERS--------------------    
  10:src/kernel/interrupt/../../../h/../h/riscv.hpp **** */
  11:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static void w_scause(uint64);
  12:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static uint64 r_scause(); 
  13:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
  14:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static void w_sepc(uint64);
  15:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static uint64 r_sepc();
  16:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static void ni_sepc();
  17:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
  18:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static void w_stvec(uint64);
  19:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static uint64 r_stvec();
  20:src/kernel/interrupt/../../../h/../h/riscv.hpp ****      
  21:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static void w_stval(uint64);
  22:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static uint64 r_stval();
  23:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
  24:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static void w_satp(uint64);
  25:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static uint64 r_satp();
  26:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     
  27:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     enum BitMaskSip{
  28:src/kernel/interrupt/../../../h/../h/riscv.hpp ****         SIP_SSIE = (1<<1),
  29:src/kernel/interrupt/../../../h/../h/riscv.hpp ****         SIP_STIE = (1<<5),
  30:src/kernel/interrupt/../../../h/../h/riscv.hpp ****         SIP_SEIE = (1<<9),
  31:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     };
  32:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
  33:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static void ms_sip(uint64);
  34:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static void mc_sip(uint64);
  35:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
  36:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static void w_sip(uint64);
  37:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static uint64 r_sip();
  38:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
  39:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static void ms_sie(uint64);
  40:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static void mc_sie(uint64);
  41:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
  42:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static void w_sie(uint64);
  43:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static uint64 r_sie();
  44:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
  45:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     enum BitMaskSstatus{
  46:src/kernel/interrupt/../../../h/../h/riscv.hpp ****         SSTATUS_SIE = (1<<1),
  47:src/kernel/interrupt/../../../h/../h/riscv.hpp ****         SSTATUS_SPIE = (1<<5),
  48:src/kernel/interrupt/../../../h/../h/riscv.hpp ****         SSTATUS_SPP = (1<<8),
  49:src/kernel/interrupt/../../../h/../h/riscv.hpp ****         SSTATUS_SUM = (1<<18),
  50:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     };
  51:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
  52:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static void ms_sstatus(uint64);
  53:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static void mc_sstatus(uint64);
  54:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
  55:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static void w_sstatus(uint64);
  56:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static uint64 r_sstatus();
  57:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
  58:src/kernel/interrupt/../../../h/../h/riscv.hpp **** /* 
  59:src/kernel/interrupt/../../../h/../h/riscv.hpp **** --------------------CLASSIC REGISTERS--------------------    
  60:src/kernel/interrupt/../../../h/../h/riscv.hpp **** */
  61:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static uint64 r_sp();
  62:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static uint64 r_a0(); /* parameter registers */
  63:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static uint64 s_a0(uint64 a0);
GAS LISTING /tmp/ccBdKcG0.s 			page 5


  64:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static uint64 r_a1();
  65:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static uint64 r_a2();
  66:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static uint64 r_a3();
  67:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static uint64 r_a4();
  68:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
  69:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static void popRegisters(); /* pop all context registers */
  70:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static void pushRegisters(); /* push all context registers */
  71:src/kernel/interrupt/../../../h/../h/riscv.hpp ****  
  72:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static void popSppSpie(); /* jump from kernel to start of thread */
  73:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
  74:src/kernel/interrupt/../../../h/../h/riscv.hpp **** /* 
  75:src/kernel/interrupt/../../../h/../h/riscv.hpp **** --------------------CONSOLE REGISTERS--------------------    
  76:src/kernel/interrupt/../../../h/../h/riscv.hpp **** */
  77:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static void mc_cstatus(uint64 mask); 
  78:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     static bool cstatus_ready(uint64 mask);
  79:src/kernel/interrupt/../../../h/../h/riscv.hpp **** };
  80:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
  81:src/kernel/interrupt/../../../h/../h/riscv.hpp **** /* 
  82:src/kernel/interrupt/../../../h/../h/riscv.hpp **** --------------------CLASSIC REGISTERS--------------------    
  83:src/kernel/interrupt/../../../h/../h/riscv.hpp **** */
  84:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
  85:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_sp(){
  86:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     uint64 a0;
  87:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("mv %0, sp" : "=r" (a0));
  88:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return a0;
  89:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
  90:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
  91:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a0(){
  92:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     uint64 a0;
  93:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("mv %0, a0" : "=r" (a0));
  94:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return a0;
  95:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
  96:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
  97:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a1(){
  98:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     uint64 a0;
  99:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("mv %0, a1" : "=r" (a0));
 100:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return a0;
 101:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 102:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 103:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a2(){
 104:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     uint64 a0;
 105:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("mv %0, a2" : "=r" (a0));
 106:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return a0;
 107:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 108:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 109:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a3(){
 110:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     uint64 a0;
 111:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("mv %0, a3" : "=r" (a0));
 112:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return a0;
 113:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 114:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 115:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a4(){
 116:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     uint64 a0;
 117:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("mv %0, a4" : "=r" (a0));
 118:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return a0;
 119:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 120:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
GAS LISTING /tmp/ccBdKcG0.s 			page 6


 121:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 122:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline uint64 Riscv::s_a0(uint64 a0){
 123:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return a0;
 124:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 125:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 126:src/kernel/interrupt/../../../h/../h/riscv.hpp **** /* 
 127:src/kernel/interrupt/../../../h/../h/riscv.hpp **** --------------------SUPERVISOR REGISTERS--------------------    
 128:src/kernel/interrupt/../../../h/../h/riscv.hpp **** */
 129:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 130:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause){
 131:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrw scause, %0" : : "r" (scause));
 132:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 133:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 134:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_scause(){
 135:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     uint64 volatile scause;
 136:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrr %0, scause" : "=r" (scause));
 137:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return scause;
 138:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 139:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 140:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc){
 141:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrw sepc, %0" : : "r" (sepc));
 142:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 143:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 144:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_sepc(){
 145:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     uint64 volatile sepc;
 146:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sepc" : "=r" (sepc));
 147:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return sepc;
 148:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 149:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 150:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec){
 151:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrw stvec, %0" : : "r" (stvec));
 152:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 153:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 154:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_stvec(){
 155:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     uint64 volatile stvec;
 156:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrr %0, stvec" : "=r" (stvec));
 157:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return stvec;
 158:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 159:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 160:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval){
 161:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrw stval, %0" : : "r" (stval));
 162:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 163:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 164:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_stval(){
 165:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     uint64 volatile stval;
 166:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrr %0, stval" : "=r" (stval));
 167:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return stval;
 168:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 169:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 170:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask){
 171:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile ("csrs sip, %0" : : "r" (mask));
 172:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 173:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 174:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask){
 175:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile ("csrc sip, %0" : : "r" (mask));
  63              		.loc 3 175 5
  64              		.loc 3 175 49 is_stmt 0
GAS LISTING /tmp/ccBdKcG0.s 			page 7


  65 0048 93072000 		li	a5,2
  66              	 #APP
  67              	# 175 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 176              	}
  68              		csrc sip, a5
  69              	# 0 "" 2
  70              	.LVL4:
  71              	 #NO_APP
  72              	.LBE135:
  73              	.LBE134:
  56:src/kernel/interrupt/interrupt_cpp.cpp **** }
  74              		.loc 1 56 1
  75 0050 83308102 		ld	ra,40(sp)
  76              		.cfi_remember_state
  77              		.cfi_restore 1
  78 0054 03340102 		ld	s0,32(sp)
  79              		.cfi_restore 8
  80              		.cfi_def_cfa 2, 48
  81 0058 83348101 		ld	s1,24(sp)
  82              		.cfi_restore 9
  83 005c 03390101 		ld	s2,16(sp)
  84              		.cfi_restore 18
  85 0060 13010103 		addi	sp,sp,48
  86              		.cfi_def_cfa_offset 0
  87 0064 67800000 		jr	ra
  88              	.L4:
  89              		.cfi_restore_state
  90              	.LBB136:
  91              	.LBB125:
  43:src/kernel/interrupt/interrupt_cpp.cpp ****         sepc = Riscv::r_sepc();
  92              		.loc 1 43 9 is_stmt 1
  93              	.LBB126:
  94              	.LBB127:
 177:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 178:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip){
 179:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrw sip, %0" : : "r" (sip));
 180:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 181:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 182:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_sip(){
 183:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     uint64 volatile sip;
 184:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sip" : "=r" (sip));
 185:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return sip;
 186:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 187:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 188:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline void Riscv::ms_sie(uint64 mask){
 189:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile ("csrs sie, %0" : : "r" (mask));
 190:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 191:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 192:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline void Riscv::mc_sie(uint64 mask){
 193:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile ("csrc sie, %0" : : "r" (mask));
 194:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 195:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 196:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline void Riscv::w_sie(uint64 sie){
 197:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrw sie, %0" : : "r" (sie));
 198:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 199:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 200:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_sie(){
GAS LISTING /tmp/ccBdKcG0.s 			page 8


 201:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     uint64 volatile sie;
 202:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sie" : "=r" (sie));
 203:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return sie;
 204:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 205:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 206:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask){
 207:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile ("csrs sstatus, %0" : : "r" (mask));
 208:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 209:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 210:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask){
 211:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile ("csrc sstatus, %0" : : "r" (mask));
 212:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 213:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 214:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus){
 215:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrw sstatus, %0" : : "r" (sstatus));
 216:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 217:src/kernel/interrupt/../../../h/../h/riscv.hpp **** 
 218:src/kernel/interrupt/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus(){
 219:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     uint64 volatile sstatus;
  95              		.loc 3 219 5
 220:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sstatus" : "=r" (sstatus));
  96              		.loc 3 220 5
  97              		.loc 3 220 54 is_stmt 0
  98              	 #APP
  99              	# 220 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 221              	    return sstatus;
 100              		csrr a5, sstatus
 101              	# 0 "" 2
 102              	 #NO_APP
 103 006c 233CF4FC 		sd	a5,-40(s0)
 104              		.loc 3 221 5 is_stmt 1
 105              		.loc 3 221 12 is_stmt 0
 106 0070 033984FD 		ld	s2,-40(s0)
 107              	.LVL5:
 108              	.LBE127:
 109              	.LBE126:
 110              	.LBB128:
 111              	.LBB129:
 145:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sepc" : "=r" (sepc));
 112              		.loc 3 145 5 is_stmt 1
 146:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return sepc;
 113              		.loc 3 146 5
 146:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return sepc;
 114              		.loc 3 146 48 is_stmt 0
 115              	 #APP
 116              	# 146 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 117              		csrr a5, sepc
 118              	# 0 "" 2
 119              	 #NO_APP
 120 0078 2338F4FC 		sd	a5,-48(s0)
 147:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 121              		.loc 3 147 5 is_stmt 1
 147:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 122              		.loc 3 147 12 is_stmt 0
 123 007c 833404FD 		ld	s1,-48(s0)
 124              	.LVL6:
 125              	.LBE129:
GAS LISTING /tmp/ccBdKcG0.s 			page 9


 126              	.LBE128:
  46:src/kernel/interrupt/interrupt_cpp.cpp ****         
 127              		.loc 1 46 9 is_stmt 1
  46:src/kernel/interrupt/interrupt_cpp.cpp ****         
 128              		.loc 1 46 31 is_stmt 0
 129 0080 97070000 		sd	zero,_ZN3TCB16timeSliceCounterE,a5
 129      23B00700 
  48:src/kernel/interrupt/interrupt_cpp.cpp **** 
 130              		.loc 1 48 9 is_stmt 1
  48:src/kernel/interrupt/interrupt_cpp.cpp **** 
 131              		.loc 1 48 19 is_stmt 0
 132 0088 97000000 		call	_ZN3TCB5yieldEv
 132      E7800000 
 133              	.LVL7:
  50:src/kernel/interrupt/interrupt_cpp.cpp ****         Riscv::w_sepc(sepc);
 134              		.loc 1 50 9 is_stmt 1
 135              	.LBB130:
 136              	.LBB131:
 215:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 137              		.loc 3 215 5
 215:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 138              		.loc 3 215 55 is_stmt 0
 139              	 #APP
 140              	# 215 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 141              		csrw sstatus, s2
 142              	# 0 "" 2
 143              	.LVL8:
 144              	 #NO_APP
 145              	.LBE131:
 146              	.LBE130:
  51:src/kernel/interrupt/interrupt_cpp.cpp ****     } 
 147              		.loc 1 51 9 is_stmt 1
 148              	.LBB132:
 149              	.LBB133:
 141:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 150              		.loc 3 141 5
 141:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 151              		.loc 3 141 49 is_stmt 0
 152              	 #APP
 153              	# 141 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 154              		csrw sepc, s1
 155              	# 0 "" 2
 156              	 #NO_APP
 157 0098 6FF01FFB 		j	.L2
 158              	.LBE133:
 159              	.LBE132:
 160              	.LBE125:
 161              	.LBE136:
 162              		.cfi_endproc
 163              	.LFE113:
 165              		.align	2
 166              		.globl	_Z8usrEcallmmmmm
 168              	_Z8usrEcallmmmmm:
 169              	.LFB114:
  57:src/kernel/interrupt/interrupt_cpp.cpp **** 
  58:src/kernel/interrupt/interrupt_cpp.cpp **** volatile uint64 usrEcall(uint64 a0, uint64 a1, uint64 a2, uint64 a3, uint64 a4)
  59:src/kernel/interrupt/interrupt_cpp.cpp **** {
GAS LISTING /tmp/ccBdKcG0.s 			page 10


 170              		.loc 1 59 1 is_stmt 1
 171              		.cfi_startproc
 172              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 173              		.cfi_lsda 0x1b,.LLSDA114
 174              	.LVL9:
 175 009c 130101FB 		addi	sp,sp,-80
 176              		.cfi_def_cfa_offset 80
 177 00a0 23341104 		sd	ra,72(sp)
 178 00a4 23308104 		sd	s0,64(sp)
 179 00a8 233C9102 		sd	s1,56(sp)
 180 00ac 23382103 		sd	s2,48(sp)
 181 00b0 23343103 		sd	s3,40(sp)
 182 00b4 23304103 		sd	s4,32(sp)
 183 00b8 233C5101 		sd	s5,24(sp)
 184 00bc 23386101 		sd	s6,16(sp)
 185              		.cfi_offset 1, -8
 186              		.cfi_offset 8, -16
 187              		.cfi_offset 9, -24
 188              		.cfi_offset 18, -32
 189              		.cfi_offset 19, -40
 190              		.cfi_offset 20, -48
 191              		.cfi_offset 21, -56
 192              		.cfi_offset 22, -64
 193 00c0 13040105 		addi	s0,sp,80
 194              		.cfi_def_cfa 8, 0
 195 00c4 138A0500 		mv	s4,a1
  60:src/kernel/interrupt/interrupt_cpp.cpp ****     uint64 sepc = Riscv::r_sepc()+4, sstatus = Riscv::r_sstatus(), ret = a0;
 196              		.loc 1 60 5
 197              	.LBB174:
 198              	.LBB175:
 145:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sepc" : "=r" (sepc));
 199              		.loc 3 145 5
 146:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return sepc;
 200              		.loc 3 146 5
 146:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return sepc;
 201              		.loc 3 146 48 is_stmt 0
 202              	 #APP
 203              	# 146 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 204              		csrr a5, sepc
 205              	# 0 "" 2
 206              	 #NO_APP
 207 00cc 233CF4FA 		sd	a5,-72(s0)
 147:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 208              		.loc 3 147 5 is_stmt 1
 147:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 209              		.loc 3 147 12 is_stmt 0
 210 00d0 033984FB 		ld	s2,-72(s0)
 211              	.LBE175:
 212              	.LBE174:
 213              		.loc 1 60 35
 214 00d4 13094900 		addi	s2,s2,4
 215              	.LVL10:
 216              	.LBB176:
 217              	.LBB177:
 219:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sstatus" : "=r" (sstatus));
 218              		.loc 3 219 5 is_stmt 1
 220:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return sstatus;
GAS LISTING /tmp/ccBdKcG0.s 			page 11


 219              		.loc 3 220 5
 220:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return sstatus;
 220              		.loc 3 220 54 is_stmt 0
 221              	 #APP
 222              	# 220 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 223              		csrr a5, sstatus
 224              	# 0 "" 2
 225              	 #NO_APP
 226 00dc 2338F4FA 		sd	a5,-80(s0)
 227              		.loc 3 221 5 is_stmt 1
 228              		.loc 3 221 12 is_stmt 0
 229 00e0 833904FB 		ld	s3,-80(s0)
 230              	.LVL11:
 231              	.LBE177:
 232              	.LBE176:
  61:src/kernel/interrupt/interrupt_cpp.cpp **** 
  62:src/kernel/interrupt/interrupt_cpp.cpp ****     if(a0 == MA){
 233              		.loc 1 62 5 is_stmt 1
 234              	.LBB178:
 235 00e4 93071000 		li	a5,1
 236 00e8 6304F50E 		beq	a0,a5,.L26
 237 00ec 93040500 		mv	s1,a0
 238 00f0 930A0600 		mv	s5,a2
 239              	.LBE178:
  63:src/kernel/interrupt/interrupt_cpp.cpp ****         //mem_alloc
  64:src/kernel/interrupt/interrupt_cpp.cpp ****         ret = (uint64)MemoryAllocator::getInstance().mem_alloc(a1);
  65:src/kernel/interrupt/interrupt_cpp.cpp ****         //KCHECKPRINT(ret);
  66:src/kernel/interrupt/interrupt_cpp.cpp ****     }
  67:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == MF)
 240              		.loc 1 67 10
 241              	.LBB252:
 242              	.LBB179:
 243 00f4 93072000 		li	a5,2
 244 00f8 6302F512 		beq	a0,a5,.L27
 245              	.LBE179:
 246              	.LBE252:
  68:src/kernel/interrupt/interrupt_cpp.cpp ****     {
  69:src/kernel/interrupt/interrupt_cpp.cpp ****         //mem_free
  70:src/kernel/interrupt/interrupt_cpp.cpp ****         // KCHECKPRINT(a1);
  71:src/kernel/interrupt/interrupt_cpp.cpp ****         // MemoryAllocator::getInstance().print_all_list();
  72:src/kernel/interrupt/interrupt_cpp.cpp ****         ret = (uint64)MemoryAllocator::getInstance().mem_free((void*)a1);
  73:src/kernel/interrupt/interrupt_cpp.cpp ****     }
  74:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == TC)
 247              		.loc 1 74 10
 248              	.LBB253:
 249              	.LBB243:
 250              	.LBB180:
 251 00fc 93071001 		li	a5,17
 252 0100 630CF512 		beq	a0,a5,.L28
 253              	.LBE180:
 254              	.LBE243:
 255              	.LBE253:
  75:src/kernel/interrupt/interrupt_cpp.cpp ****     {
  76:src/kernel/interrupt/interrupt_cpp.cpp ****         //thread_create
  77:src/kernel/interrupt/interrupt_cpp.cpp ****         uint64* t = (uint64*)a1;
  78:src/kernel/interrupt/interrupt_cpp.cpp ****         *t = (uint64)TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
  79:src/kernel/interrupt/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
GAS LISTING /tmp/ccBdKcG0.s 			page 12


  80:src/kernel/interrupt/interrupt_cpp.cpp ****         else ret = 0;
  81:src/kernel/interrupt/interrupt_cpp.cpp ****     }
  82:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == TE)
 256              		.loc 1 82 10
 257              	.LBB254:
 258              	.LBB244:
 259              	.LBB235:
 260              	.LBB181:
 261 0104 93072001 		li	a5,18
 262 0108 630EF514 		beq	a0,a5,.L29
 263              	.LBE181:
 264              	.LBE235:
 265              	.LBE244:
 266              	.LBE254:
  83:src/kernel/interrupt/interrupt_cpp.cpp ****     {
  84:src/kernel/interrupt/interrupt_cpp.cpp ****         //thread_exit
  85:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::running->finish();
  86:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::dispatch();
  87:src/kernel/interrupt/interrupt_cpp.cpp ****     }
  88:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == TD)
 267              		.loc 1 88 10
 268              	.LBB255:
 269              	.LBB245:
 270              	.LBB236:
 271              	.LBB227:
 272              	.LBB182:
 273 010c 93073001 		li	a5,19
 274 0110 630AF516 		beq	a0,a5,.L30
 275              	.LBE182:
 276              	.LBE227:
 277              	.LBE236:
 278              	.LBE245:
 279              	.LBE255:
  89:src/kernel/interrupt/interrupt_cpp.cpp ****     {
  90:src/kernel/interrupt/interrupt_cpp.cpp ****         //thread_dispatch
  91:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::timeSliceCounter = 0;
  92:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::yield();
  93:src/kernel/interrupt/interrupt_cpp.cpp ****     }
  94:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == DTH)
 280              		.loc 1 94 10
 281              	.LBB256:
 282              	.LBB246:
 283              	.LBB237:
 284              	.LBB228:
 285              	.LBB219:
 286              	.LBB183:
 287 0114 93079006 		li	a5,105
 288 0118 6300F518 		beq	a0,a5,.L31
 289              	.LBE183:
 290              	.LBE219:
 291              	.LBE228:
 292              	.LBE237:
 293              	.LBE246:
 294              	.LBE256:
  95:src/kernel/interrupt/interrupt_cpp.cpp ****     {
  96:src/kernel/interrupt/interrupt_cpp.cpp ****         //delete thread handle
  97:src/kernel/interrupt/interrupt_cpp.cpp ****         // KCHECKPRINT(a1);
GAS LISTING /tmp/ccBdKcG0.s 			page 13


  98:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::deleteThread((TCB*)a1);
  99:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 100:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == SO)
 295              		.loc 1 100 10
 296              	.LBB257:
 297              	.LBB247:
 298              	.LBB238:
 299              	.LBB229:
 300              	.LBB220:
 301              	.LBB214:
 302              	.LBB184:
 303 011c 93071002 		li	a5,33
 304 0120 6304F518 		beq	a0,a5,.L32
 305              	.LBE184:
 306              	.LBE214:
 307              	.LBE220:
 308              	.LBE229:
 309              	.LBE238:
 310              	.LBE247:
 311              	.LBE257:
 101:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 102:src/kernel/interrupt/interrupt_cpp.cpp ****         uint64* t = (uint64*)a1;
 103:src/kernel/interrupt/interrupt_cpp.cpp ****         *t = (uint64)(new KSemaphore(a2));
 104:src/kernel/interrupt/interrupt_cpp.cpp ****         if(!(*t)) ret = -2;
 105:src/kernel/interrupt/interrupt_cpp.cpp ****         else ret = 0;
 106:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 107:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == SC)
 312              		.loc 1 107 10
 313              	.LBB258:
 314              	.LBB248:
 315              	.LBB239:
 316              	.LBB230:
 317              	.LBB221:
 318              	.LBB215:
 319              	.LBB210:
 320              	.LBB185:
 321 0124 93072002 		li	a5,34
 322 0128 6306F522 		beq	a0,a5,.L33
 323              	.LBE185:
 324              	.LBE210:
 325              	.LBE215:
 326              	.LBE221:
 327              	.LBE230:
 328              	.LBE239:
 329              	.LBE248:
 330              	.LBE258:
 108:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 109:src/kernel/interrupt/interrupt_cpp.cpp ****         KSemaphore* t = (KSemaphore*)a1;
 110:src/kernel/interrupt/interrupt_cpp.cpp ****         ret = KSemaphore::close(t);
 111:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 112:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == SW)
 331              		.loc 1 112 10
 332              	.LBB259:
 333              	.LBB249:
 334              	.LBB240:
 335              	.LBB231:
 336              	.LBB222:
GAS LISTING /tmp/ccBdKcG0.s 			page 14


 337              	.LBB216:
 338              	.LBB211:
 339              	.LBB198:
 340              	.LBB186:
 341 012c 93073002 		li	a5,35
 342 0130 630CF522 		beq	a0,a5,.L34
 343              	.LBE186:
 344              	.LBE198:
 345              	.LBE211:
 346              	.LBE216:
 347              	.LBE222:
 348              	.LBE231:
 349              	.LBE240:
 350              	.LBE249:
 351              	.LBE259:
 113:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 114:src/kernel/interrupt/interrupt_cpp.cpp ****         KSemaphore* t = (KSemaphore*)a1;
 115:src/kernel/interrupt/interrupt_cpp.cpp ****         if(KSemaphore::exists(t))
 116:src/kernel/interrupt/interrupt_cpp.cpp ****             ret = t->wait();
 117:src/kernel/interrupt/interrupt_cpp.cpp ****         else
 118:src/kernel/interrupt/interrupt_cpp.cpp ****             ret = -1;
 119:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 120:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == SS)
 352              		.loc 1 120 10
 353              	.LBB260:
 354              	.LBB250:
 355              	.LBB241:
 356              	.LBB232:
 357              	.LBB223:
 358              	.LBB217:
 359              	.LBB212:
 360              	.LBB199:
 361              	.LBB195:
 362              	.LBB187:
 363 0134 93074002 		li	a5,36
 364 0138 630EF524 		beq	a0,a5,.L35
 121:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 122:src/kernel/interrupt/interrupt_cpp.cpp ****         KSemaphore* t = (KSemaphore*)a1;
 123:src/kernel/interrupt/interrupt_cpp.cpp ****         if(KSemaphore::exists(t))
 124:src/kernel/interrupt/interrupt_cpp.cpp ****             ret = t->signal();
 125:src/kernel/interrupt/interrupt_cpp.cpp ****         else
 126:src/kernel/interrupt/interrupt_cpp.cpp ****             ret = -1;
 127:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 128:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == TS)
 365              		.loc 1 128 10
 366 013c 93071003 		li	a5,49
 367 0140 6300F528 		beq	a0,a5,.L36
 129:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 130:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::sleep(a1);
 131:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 132:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == GC)
 368              		.loc 1 132 10
 369 0144 93071004 		li	a5,65
 370 0148 6304F528 		beq	a0,a5,.L37
 133:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 134:src/kernel/interrupt/interrupt_cpp.cpp ****         ret = StdIO::ibuffer->get();
 135:src/kernel/interrupt/interrupt_cpp.cpp ****     }
GAS LISTING /tmp/ccBdKcG0.s 			page 15


 136:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == PC)
 371              		.loc 1 136 10
 372 014c 93072004 		li	a5,66
 373 0150 631CF508 		bne	a0,a5,.L7
 137:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 138:src/kernel/interrupt/interrupt_cpp.cpp ****         StdIO::obuffer->put((char)a1); 
 374              		.loc 1 138 9
 375              		.loc 1 138 28 is_stmt 0
 376 0154 97070000 		lla	a5,_ZN5StdIO7obufferE
 376      93870700 
 377 015c 83BA0700 		ld	s5,0(a5)
 378 0160 13FAF50F 		andi	s4,a1,0xff
 379              	.LVL12:
 380              	.LBB188:
 381              	.LBB189:
 382              		.file 4 "src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp"
   1:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** #ifndef __shared_buffer__hpp
   2:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** #define __shared_buffer__hpp
   3:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** 
   4:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** #include"../h/ksemaphore.hpp"
   5:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** #include "object_cache.h"
   6:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** #include "slab_allocator.h"
   7:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** 
   8:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** template<typename T>
   9:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** class SharedBuffer{
  10:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** public:
  11:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     static const int BUFFER_SIZE = 1024;
  12:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** private:
  13:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     T buffer[BUFFER_SIZE];
  14:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     KSemaphore mutex, itemAvailable, spaceAvailable; 
  15:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     int head, tail;
  16:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     static ObjectCache* cache;
  17:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** public: 
  18:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     int tmpLen;
  19:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     //#include"../h/kernel_operators.hpp"
  20:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     
  21:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     __SLAB_ALLOCATION__(SharedBuffer, nullptr, nullptr);
  22:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     
  23:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     SharedBuffer():mutex(1), itemAvailable(0), 
  24:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     spaceAvailable(BUFFER_SIZE), head(0), tail(0), tmpLen(0){}
  25:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** 
  26:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     void put(T c){
  27:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         spaceAvailable.wait();
 383              		.loc 4 27 28
 384 0164 13850A45 		addi	a0,s5,1104
 385              	.LVL13:
 386              	.LEHB0:
 387 0168 97000000 		call	_ZN10KSemaphore4waitEv
 387      E7800000 
 388              	.LVL14:
  28:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         mutex.wait();
 389              		.loc 4 28 19
 390 0170 138B0A40 		addi	s6,s5,1024
 391 0174 13050B00 		mv	a0,s6
 392 0178 97000000 		call	_ZN10KSemaphore4waitEv
 392      E7800000 
 393              	.LVL15:
GAS LISTING /tmp/ccBdKcG0.s 			page 16


  29:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** 
  30:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         tmpLen++;
 394              		.loc 4 30 9
 395 0180 83A70A48 		lw	a5,1152(s5)
 396 0184 9B871700 		addiw	a5,a5,1
 397 0188 23A0FA48 		sw	a5,1152(s5)
  31:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         buffer[tail]=c;
 398              		.loc 4 31 16
 399 018c 83A7CA47 		lw	a5,1148(s5)
 400              		.loc 4 31 9
 401 0190 3387FA00 		add	a4,s5,a5
 402 0194 23004701 		sb	s4,0(a4)
  32:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         tail=(tail+1)%BUFFER_SIZE;
 403              		.loc 4 32 19
 404 0198 9B871700 		addiw	a5,a5,1
 405              		.loc 4 32 22
 406 019c 1BD7F741 		sraiw	a4,a5,31
 407 01a0 1B576701 		srliw	a4,a4,22
 408 01a4 BB87E700 		addw	a5,a5,a4
 409 01a8 93F7F73F 		andi	a5,a5,1023
 410 01ac BB87E740 		subw	a5,a5,a4
 411              		.loc 4 32 9
 412 01b0 23AEFA46 		sw	a5,1148(s5)
  33:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     
  34:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         itemAvailable.signal();
 413              		.loc 4 34 29
 414 01b4 13858A42 		addi	a0,s5,1064
 415 01b8 97000000 		call	_ZN10KSemaphore6signalEv
 415      E7800000 
 416              	.LVL16:
  35:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         mutex.signal();
 417              		.loc 4 35 21
 418 01c0 13050B00 		mv	a0,s6
 419 01c4 97000000 		call	_ZN10KSemaphore6signalEv
 419      E7800000 
 420              	.LVL17:
 421 01cc 6F00C001 		j	.L7
 422              	.LVL18:
 423              	.L26:
 424              	.LBE189:
 425              	.LBE188:
 426              	.LBE187:
 427              	.LBE195:
 428              	.LBE199:
 429              	.LBE212:
 430              	.LBE217:
 431              	.LBE223:
 432              	.LBE232:
 433              	.LBE241:
 434              	.LBE250:
  64:src/kernel/interrupt/interrupt_cpp.cpp ****         //KCHECKPRINT(ret);
 435              		.loc 1 64 9 is_stmt 1
  64:src/kernel/interrupt/interrupt_cpp.cpp ****         //KCHECKPRINT(ret);
 436              		.loc 1 64 52 is_stmt 0
 437 01d0 97000000 		call	_ZN15MemoryAllocator11getInstanceEv
 437      E7800000 
 438              	.LVL19:
GAS LISTING /tmp/ccBdKcG0.s 			page 17


  64:src/kernel/interrupt/interrupt_cpp.cpp ****         //KCHECKPRINT(ret);
 439              		.loc 1 64 63
 440 01d8 93050A00 		mv	a1,s4
 441 01dc 97000000 		call	_ZN15MemoryAllocator9mem_allocEm
 441      E7800000 
 442              	.LVL20:
 443 01e4 93040500 		mv	s1,a0
 444              	.LVL21:
 445              	.L7:
 446              	.LBE260:
 139:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 140:src/kernel/interrupt/interrupt_cpp.cpp ****     Riscv::w_sstatus(sstatus);
 447              		.loc 1 140 5 is_stmt 1
 448              	.LBB261:
 449              	.LBB262:
 215:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 450              		.loc 3 215 5
 215:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 451              		.loc 3 215 55 is_stmt 0
 452              	 #APP
 453              	# 215 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 454              		csrw sstatus, s3
 455              	# 0 "" 2
 456              	.LVL22:
 457              	 #NO_APP
 458              	.LBE262:
 459              	.LBE261:
 141:src/kernel/interrupt/interrupt_cpp.cpp ****     Riscv::w_sepc(sepc);
 460              		.loc 1 141 5 is_stmt 1
 461              	.LBB263:
 462              	.LBB264:
 141:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 463              		.loc 3 141 5
 141:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 464              		.loc 3 141 49 is_stmt 0
 465              	 #APP
 466              	# 141 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 467              		csrw sepc, s2
 468              	# 0 "" 2
 469              	.LVL23:
 470              	 #NO_APP
 471              	.LBE264:
 472              	.LBE263:
 142:src/kernel/interrupt/interrupt_cpp.cpp ****     return ret;
 473              		.loc 1 142 5 is_stmt 1
 143:src/kernel/interrupt/interrupt_cpp.cpp **** }
 474              		.loc 1 143 1 is_stmt 0
 475 01f0 13850400 		mv	a0,s1
 476 01f4 83308104 		ld	ra,72(sp)
 477              		.cfi_remember_state
 478              		.cfi_restore 1
 479 01f8 03340104 		ld	s0,64(sp)
 480              		.cfi_restore 8
 481              		.cfi_def_cfa 2, 80
 482 01fc 83348103 		ld	s1,56(sp)
 483              		.cfi_restore 9
 484              	.LVL24:
GAS LISTING /tmp/ccBdKcG0.s 			page 18


 485 0200 03390103 		ld	s2,48(sp)
 486              		.cfi_restore 18
 487              	.LVL25:
 488 0204 83398102 		ld	s3,40(sp)
 489              		.cfi_restore 19
 490              	.LVL26:
 491 0208 033A0102 		ld	s4,32(sp)
 492              		.cfi_restore 20
 493 020c 833A8101 		ld	s5,24(sp)
 494              		.cfi_restore 21
 495 0210 033B0101 		ld	s6,16(sp)
 496              		.cfi_restore 22
 497 0214 13010105 		addi	sp,sp,80
 498              		.cfi_def_cfa_offset 0
 499 0218 67800000 		jr	ra
 500              	.LVL27:
 501              	.L27:
 502              		.cfi_restore_state
 503              	.LBB265:
 504              	.LBB251:
  72:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 505              		.loc 1 72 9 is_stmt 1
  72:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 506              		.loc 1 72 52 is_stmt 0
 507 021c 97000000 		call	_ZN15MemoryAllocator11getInstanceEv
 507      E7800000 
 508              	.LVL28:
  72:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 509              		.loc 1 72 62
 510 0224 93050A00 		mv	a1,s4
 511 0228 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv
 511      E7800000 
 512              	.LVL29:
  72:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 513              		.loc 1 72 13
 514 0230 93040500 		mv	s1,a0
 515              	.LVL30:
 516 0234 6FF05FFB 		j	.L7
 517              	.LVL31:
 518              	.L28:
 519              	.LBB242:
 520              	.LBB233:
  77:src/kernel/interrupt/interrupt_cpp.cpp ****         *t = (uint64)TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 521              		.loc 1 77 9 is_stmt 1
  78:src/kernel/interrupt/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
 522              		.loc 1 78 9
  78:src/kernel/interrupt/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
 523              		.loc 1 78 39 is_stmt 0
 524 0238 13060700 		mv	a2,a4
 525              	.LVL32:
 526 023c 93850600 		mv	a1,a3
 527              	.LVL33:
 528 0240 13850A00 		mv	a0,s5
 529 0244 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm
 529      E7800000 
 530              	.LVL34:
  78:src/kernel/interrupt/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
GAS LISTING /tmp/ccBdKcG0.s 			page 19


 531              		.loc 1 78 12
 532 024c 2330AA00 		sd	a0,0(s4)
  79:src/kernel/interrupt/interrupt_cpp.cpp ****         else ret = 0;
 533              		.loc 1 79 9 is_stmt 1
 534 0250 63060500 		beq	a0,zero,.L38
  80:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 535              		.loc 1 80 18 is_stmt 0
 536 0254 93040000 		li	s1,0
 537              	.LVL35:
 538 0258 6FF01FF9 		j	.L7
 539              	.LVL36:
 540              	.L38:
  79:src/kernel/interrupt/interrupt_cpp.cpp ****         else ret = 0;
 541              		.loc 1 79 23
 542 025c 9304C0FF 		li	s1,-4
 543              	.LVL37:
 544 0260 6FF09FF8 		j	.L7
 545              	.LVL38:
 546              	.L29:
 547              	.LBE233:
 548              	.LBB234:
  85:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::dispatch();
 549              		.loc 1 85 9 is_stmt 1
  85:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::dispatch();
 550              		.loc 1 85 29 is_stmt 0
 551 0264 97070000 		lla	a5,_ZN3TCB7runningE
 551      93870700 
 552 026c 83B70700 		ld	a5,0(a5)
 553              	.LVL39:
 554              	.LBB224:
 555              	.LBB225:
  44:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     bool isFinished(){ return state == FINISHED; }
 556              		.loc 2 44 21 is_stmt 1
  44:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     bool isFinished(){ return state == FINISHED; }
 557              		.loc 2 44 27 is_stmt 0
 558 0270 13072000 		li	a4,2
 559              	.LVL40:
 560 0274 23A8E702 		sw	a4,48(a5)
 561              	.LVL41:
 562              	.LBE225:
 563              	.LBE224:
  86:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 564              		.loc 1 86 9 is_stmt 1
  86:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 565              		.loc 1 86 22 is_stmt 0
 566 0278 97000000 		call	_ZN3TCB8dispatchEv
 566      E7800000 
 567              	.LVL42:
 568 0280 6FF09FF6 		j	.L7
 569              	.LVL43:
 570              	.L30:
 571              	.LBB226:
  91:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::yield();
 572              		.loc 1 91 9 is_stmt 1
  91:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::yield();
 573              		.loc 1 91 31 is_stmt 0
 574 0284 97070000 		sd	zero,_ZN3TCB16timeSliceCounterE,a5
GAS LISTING /tmp/ccBdKcG0.s 			page 20


 574      23B00700 
  92:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 575              		.loc 1 92 9 is_stmt 1
  92:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 576              		.loc 1 92 19 is_stmt 0
 577 028c 97000000 		call	_ZN3TCB5yieldEv
 577      E7800000 
 578              	.LVL44:
 579 0294 6FF05FF5 		j	.L7
 580              	.LVL45:
 581              	.L31:
 582              	.LBB218:
  98:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 583              		.loc 1 98 9 is_stmt 1
  98:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 584              		.loc 1 98 26 is_stmt 0
 585 0298 13850500 		mv	a0,a1
 586 029c 97000000 		call	_ZN3TCB12deleteThreadEPS_
 586      E7800000 
 587              	.LVL46:
 588 02a4 6FF05FF4 		j	.L7
 589              	.LVL47:
 590              	.L32:
 591              	.LBB213:
 592              	.LBB200:
 102:src/kernel/interrupt/interrupt_cpp.cpp ****         *t = (uint64)(new KSemaphore(a2));
 593              		.loc 1 102 9 is_stmt 1
 103:src/kernel/interrupt/interrupt_cpp.cpp ****         if(!(*t)) ret = -2;
 594              		.loc 1 103 9
 595              	.LBB201:
 596              	.LBB202:
 597              		.file 5 "src/kernel/interrupt/../../../h/../h/ksemaphore.hpp"
   1:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp **** #ifndef __semaphore__
   2:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp **** #define __semaphore__
   3:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp **** 
   4:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp **** #include"../h/ptr_queue.hpp"
   5:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp **** #include "slab_allocator.h"
   6:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp **** 
   7:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp **** /* Class used to describe semaphore in kernel code */
   8:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp **** 
   9:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp **** class KSemaphore
  10:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp **** {
  11:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp ****     static ObjectCache* cache; 
  12:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp **** public:
  13:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp ****     //#include"../h/kernel_operators.hpp" /* allocation and deallocation */
  14:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp ****     
  15:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp ****     __SLAB_ALLOCATION__(KSemaphore, nullptr, nullptr)
 598              		.loc 5 15 5
 599 02a8 97070000 		lla	a5,_ZN10KSemaphore5cacheE
 599      93870700 
 600 02b0 83B70700 		ld	a5,0(a5)
 601 02b4 63840704 		beq	a5,zero,.L39
 602              	.LVL48:
 603              	.L14:
 604              		.loc 5 15 5
 605 02b8 97070000 		lla	a5,_ZN10KSemaphore5cacheE
 605      93870700 
GAS LISTING /tmp/ccBdKcG0.s 			page 21


 606 02c0 03B50700 		ld	a0,0(a5)
 607 02c4 97000000 		call	_ZN11ObjectCache9alloc_objEv
 607      E7800000 
 608              	.LVL49:
 609              	.LBE202:
 610              	.LBE201:
 611              	.LBB204:
 612              	.LBB205:
  16:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp **** 
  17:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp ****     KSemaphore(unsigned val):val(val)
 613              		.loc 5 17 37 is_stmt 0
 614 02cc 23245501 		sw	s5,8(a0)
 615              	.LVL50:
 616              	.LBB206:
 617              	.LBB207:
 618              		.file 6 "src/kernel/interrupt/../../../h/../h/ptr_queue.hpp"
   1:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp **** #ifndef _queue_h
   2:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp **** #define _queue_h
   3:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp **** 
   4:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp **** //#include"../h/tcb.hpp"
   5:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp **** //#include"../h/testing.hpp"
   6:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp **** #include"../lib/hw.h"
   7:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp **** #include"../h/memory_allocator.hpp"
   8:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp **** #include "object_cache.h"
   9:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp **** #include "slab_allocator.h"
  10:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp **** 
  11:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp **** class TCB;
  12:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp **** 
  13:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp **** class TcbQueue{
  14:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp ****        
  15:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp ****     TCB *head, *tail;
  16:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp ****     int tmpNum;
  17:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp ****     void brisi(){
  18:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp ****         while(!isEmpty())
  19:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp ****             remove();
  20:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp ****     }
  21:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp ****     static ObjectCache* cache;
  22:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp **** public:
  23:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp ****     //#include"../h/kernel_operators.hpp"
  24:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp **** 
  25:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp ****     __SLAB_ALLOCATION__(TcbQueue, nullptr, nullptr);
  26:src/kernel/interrupt/../../../h/../h/ptr_queue.hpp ****     TcbQueue():head(nullptr), tail(nullptr), tmpNum(0){}
 619              		.loc 6 26 54
 620 02d0 23380500 		sd	zero,16(a0)
 621 02d4 233C0500 		sd	zero,24(a0)
 622 02d8 23200502 		sw	zero,32(a0)
 623              	.LVL51:
 624              	.LBE207:
 625              	.LBE206:
  18:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp ****     {
  19:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp ****         /* 
  20:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp ****         *  Put semaphore on front 
  21:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp ****         *  of the list of active semaphores
  22:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp ****         */
  23:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp ****         next = activeSemaphores; 
 626              		.loc 5 23 9 is_stmt 1
 627              		.loc 5 23 14 is_stmt 0
GAS LISTING /tmp/ccBdKcG0.s 			page 22


 628 02dc 97070000 		lla	a5,_ZN10KSemaphore16activeSemaphoresE
 628      93870700 
 629 02e4 03B70700 		ld	a4,0(a5)
 630 02e8 2330E500 		sd	a4,0(a0)
  24:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp ****         activeSemaphores = this;
 631              		.loc 5 24 9 is_stmt 1
 632              		.loc 5 24 26 is_stmt 0
 633 02ec 23B0A700 		sd	a0,0(a5)
 634              	.LVL52:
 635              	.LBE205:
 636              	.LBE204:
 103:src/kernel/interrupt/interrupt_cpp.cpp ****         if(!(*t)) ret = -2;
 637              		.loc 1 103 12
 638 02f0 2330AA00 		sd	a0,0(s4)
 104:src/kernel/interrupt/interrupt_cpp.cpp ****         else ret = 0;
 639              		.loc 1 104 9 is_stmt 1
 105:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 640              		.loc 1 105 14
 641              	.LVL53:
 105:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 642              		.loc 1 105 18 is_stmt 0
 643 02f4 93040000 		li	s1,0
 644 02f8 6FF01FEF 		j	.L7
 645              	.LVL54:
 646              	.L39:
 647              	.LBB208:
 648              	.LBB203:
  15:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp **** 
 649              		.loc 5 15 5 is_stmt 1
 650 02fc 13058005 		li	a0,88
 651 0300 97000000 		call	_ZN11ObjectCachenwEm
 651      E7800000 
 652              	.LVL55:
 653              	.LEHE0:
 654 0308 93040500 		mv	s1,a0
 655              	.LVL56:
 656 030c 93070000 		li	a5,0
 657 0310 13070000 		li	a4,0
 658 0314 93060000 		li	a3,0
 659 0318 13068002 		li	a2,40
 660 031c 97050000 		lla	a1,.LC0
 660      93850500 
 661              	.LEHB1:
 662 0324 97000000 		call	_ZN11ObjectCacheC1EPKcmPFvPvES4_NS_12SlabMetaTypeE
 662      E7800000 
 663              	.LVL57:
 664              	.LEHE1:
 665 032c 97070000 		sd	s1,_ZN10KSemaphore5cacheE,a5
 665      23B09700 
 666 0334 6FF05FF8 		j	.L14
 667              	.L24:
 668 0338 13090500 		mv	s2,a0
 669              	.LVL58:
 670 033c 13850400 		mv	a0,s1
 671 0340 97000000 		call	_ZN11ObjectCachedlEPv
 671      E7800000 
 672              	.LVL59:
GAS LISTING /tmp/ccBdKcG0.s 			page 23


 673 0348 13050900 		mv	a0,s2
 674              	.LEHB2:
 675 034c 97000000 		call	_Unwind_Resume
 675      E7800000 
 676              	.LVL60:
 677              	.L33:
 678              	.LBE203:
 679              	.LBE208:
 680              	.LBE200:
 681              	.LBB209:
 682              	.LBB196:
 109:src/kernel/interrupt/interrupt_cpp.cpp ****         ret = KSemaphore::close(t);
 683              		.loc 1 109 9
 110:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 684              		.loc 1 110 9
 110:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 685              		.loc 1 110 32 is_stmt 0
 686 0354 13850500 		mv	a0,a1
 687 0358 97000000 		call	_ZN10KSemaphore5closeEPS_
 687      E7800000 
 688              	.LVL61:
 110:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 689              		.loc 1 110 13
 690 0360 93040500 		mv	s1,a0
 691              	.LVL62:
 692              	.LBE196:
 693 0364 6FF05FE8 		j	.L7
 694              	.LVL63:
 695              	.L34:
 696              	.LBB197:
 697              	.LBB193:
 114:src/kernel/interrupt/interrupt_cpp.cpp ****         if(KSemaphore::exists(t))
 698              		.loc 1 114 9 is_stmt 1
 115:src/kernel/interrupt/interrupt_cpp.cpp ****             ret = t->wait();
 699              		.loc 1 115 9
 115:src/kernel/interrupt/interrupt_cpp.cpp ****             ret = t->wait();
 700              		.loc 1 115 30 is_stmt 0
 701 0368 13850500 		mv	a0,a1
 702 036c 97000000 		call	_ZN10KSemaphore6existsEPS_
 702      E7800000 
 703              	.LVL64:
 115:src/kernel/interrupt/interrupt_cpp.cpp ****             ret = t->wait();
 704              		.loc 1 115 9
 705 0374 63160500 		bne	a0,zero,.L40
 118:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 706              		.loc 1 118 17
 707 0378 9304F0FF 		li	s1,-1
 708              	.LVL65:
 709 037c 6FF0DFE6 		j	.L7
 710              	.LVL66:
 711              	.L40:
 116:src/kernel/interrupt/interrupt_cpp.cpp ****         else
 712              		.loc 1 116 13 is_stmt 1
 116:src/kernel/interrupt/interrupt_cpp.cpp ****         else
 713              		.loc 1 116 26 is_stmt 0
 714 0380 13050A00 		mv	a0,s4
 715 0384 97000000 		call	_ZN10KSemaphore4waitEv
GAS LISTING /tmp/ccBdKcG0.s 			page 24


 715      E7800000 
 716              	.LVL67:
 116:src/kernel/interrupt/interrupt_cpp.cpp ****         else
 717              		.loc 1 116 17
 718 038c 93040500 		mv	s1,a0
 719              	.LVL68:
 720 0390 6FF09FE5 		j	.L7
 721              	.LVL69:
 722              	.L35:
 723              	.LBE193:
 724              	.LBB194:
 725              	.LBB190:
 122:src/kernel/interrupt/interrupt_cpp.cpp ****         if(KSemaphore::exists(t))
 726              		.loc 1 122 9 is_stmt 1
 123:src/kernel/interrupt/interrupt_cpp.cpp ****             ret = t->signal();
 727              		.loc 1 123 9
 123:src/kernel/interrupt/interrupt_cpp.cpp ****             ret = t->signal();
 728              		.loc 1 123 30 is_stmt 0
 729 0394 13850500 		mv	a0,a1
 730 0398 97000000 		call	_ZN10KSemaphore6existsEPS_
 730      E7800000 
 731              	.LVL70:
 123:src/kernel/interrupt/interrupt_cpp.cpp ****             ret = t->signal();
 732              		.loc 1 123 9
 733 03a0 63160500 		bne	a0,zero,.L41
 126:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 734              		.loc 1 126 17
 735 03a4 9304F0FF 		li	s1,-1
 736              	.LVL71:
 737 03a8 6FF01FE4 		j	.L7
 738              	.LVL72:
 739              	.L41:
 124:src/kernel/interrupt/interrupt_cpp.cpp ****         else
 740              		.loc 1 124 13 is_stmt 1
 124:src/kernel/interrupt/interrupt_cpp.cpp ****         else
 741              		.loc 1 124 28 is_stmt 0
 742 03ac 13050A00 		mv	a0,s4
 743 03b0 97000000 		call	_ZN10KSemaphore6signalEv
 743      E7800000 
 744              	.LVL73:
 124:src/kernel/interrupt/interrupt_cpp.cpp ****         else
 745              		.loc 1 124 17
 746 03b8 93040500 		mv	s1,a0
 747              	.LVL74:
 748 03bc 6FF0DFE2 		j	.L7
 749              	.LVL75:
 750              	.L36:
 751              	.LBE190:
 130:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 752              		.loc 1 130 9 is_stmt 1
 130:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 753              		.loc 1 130 19 is_stmt 0
 754 03c0 13850500 		mv	a0,a1
 755 03c4 97000000 		call	_ZN3TCB5sleepEm
 755      E7800000 
 756              	.LVL76:
 757 03cc 6FF0DFE1 		j	.L7
GAS LISTING /tmp/ccBdKcG0.s 			page 25


 758              	.LVL77:
 759              	.L37:
 134:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 760              		.loc 1 134 9 is_stmt 1
 134:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 761              		.loc 1 134 34 is_stmt 0
 762 03d0 97070000 		lla	a5,_ZN5StdIO7ibufferE
 762      93870700 
 763 03d8 03BA0700 		ld	s4,0(a5)
 764              	.LVL78:
 765              	.LBB191:
 766              	.LBB192:
  36:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     }
  37:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** 
  38:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     T get(){
  39:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         itemAvailable.wait();
 767              		.loc 4 39 27
 768 03dc 13058A42 		addi	a0,s4,1064
 769 03e0 97000000 		call	_ZN10KSemaphore4waitEv
 769      E7800000 
 770              	.LVL79:
  40:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         mutex.wait();
 771              		.loc 4 40 19
 772 03e8 930A0A40 		addi	s5,s4,1024
 773              	.LVL80:
 774 03ec 13850A00 		mv	a0,s5
 775 03f0 97000000 		call	_ZN10KSemaphore4waitEv
 775      E7800000 
 776              	.LVL81:
  41:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** 
  42:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         tmpLen--;
 777              		.loc 4 42 9
 778 03f8 83270A48 		lw	a5,1152(s4)
 779 03fc 9B87F7FF 		addiw	a5,a5,-1
 780 0400 2320FA48 		sw	a5,1152(s4)
  43:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         T r = buffer[head];
 781              		.loc 4 43 22
 782 0404 83278A47 		lw	a5,1144(s4)
 783              		.loc 4 43 11
 784 0408 3307FA00 		add	a4,s4,a5
 785 040c 83440700 		lbu	s1,0(a4)
 786              	.LVL82:
  44:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         head = (head+1)%BUFFER_SIZE;
 787              		.loc 4 44 21
 788 0410 9B871700 		addiw	a5,a5,1
 789              		.loc 4 44 24
 790 0414 1BD7F741 		sraiw	a4,a5,31
 791 0418 1B576701 		srliw	a4,a4,22
 792 041c BB87E700 		addw	a5,a5,a4
 793 0420 93F7F73F 		andi	a5,a5,1023
 794 0424 BB87E740 		subw	a5,a5,a4
 795              		.loc 4 44 9
 796 0428 232CFA46 		sw	a5,1144(s4)
  45:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** 
  46:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         spaceAvailable.signal();
 797              		.loc 4 46 30
 798 042c 13050A45 		addi	a0,s4,1104
GAS LISTING /tmp/ccBdKcG0.s 			page 26


 799 0430 97000000 		call	_ZN10KSemaphore6signalEv
 799      E7800000 
 800              	.LVL83:
  47:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         mutex.signal();
 801              		.loc 4 47 21
 802 0438 13850A00 		mv	a0,s5
 803 043c 97000000 		call	_ZN10KSemaphore6signalEv
 803      E7800000 
 804              	.LVL84:
 805              	.LEHE2:
 806              	.LBE192:
 807              	.LBE191:
 808 0444 6FF05FDA 		j	.L7
 809              	.LBE194:
 810              	.LBE197:
 811              	.LBE209:
 812              	.LBE213:
 813              	.LBE218:
 814              	.LBE226:
 815              	.LBE234:
 816              	.LBE242:
 817              	.LBE251:
 818              	.LBE265:
 819              		.cfi_endproc
 820              	.LFE114:
 821              		.globl	__gxx_personality_v0
 822              		.section	.gcc_except_table,"aw",@progbits
 823              	.LLSDA114:
 824 0000 FF       		.byte	0xff
 825 0001 FF       		.byte	0xff
 826 0002 03       		.byte	0x3
 827 0003 27       		.byte	0x27
 828 0004 00000000 		.4byte	.LEHB0-.LFB114
 829 0008 00000000 		.4byte	.LEHE0-.LEHB0
 830 000c 00000000 		.4byte	0
 831 0010 00       		.byte	0
 832 0011 00000000 		.4byte	.LEHB1-.LFB114
 833 0015 00000000 		.4byte	.LEHE1-.LEHB1
 834 0019 00000000 		.4byte	.L24-.LFB114
 835 001d 00       		.byte	0
 836 001e 00000000 		.4byte	.LEHB2-.LFB114
 837 0022 00000000 		.4byte	.LEHE2-.LEHB2
 838 0026 00000000 		.4byte	0
 839 002a 00       		.byte	0
 840              		.text
 842              		.align	2
 843              		.globl	_Z8sysEcallmmmmm
 845              	_Z8sysEcallmmmmm:
 846              	.LFB115:
 144:src/kernel/interrupt/interrupt_cpp.cpp **** 
 145:src/kernel/interrupt/interrupt_cpp.cpp **** uint64 sysEcall(uint64 a0, uint64 a1, uint64 a2, uint64 a3, uint64 a4)
 146:src/kernel/interrupt/interrupt_cpp.cpp **** {    
 847              		.loc 1 146 1 is_stmt 1
 848              		.cfi_startproc
 849              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 850              		.cfi_lsda 0x1b,.LLSDA115
 851              	.LVL85:
GAS LISTING /tmp/ccBdKcG0.s 			page 27


 852 0448 130101FB 		addi	sp,sp,-80
 853              		.cfi_def_cfa_offset 80
 854 044c 23341104 		sd	ra,72(sp)
 855 0450 23308104 		sd	s0,64(sp)
 856 0454 233C9102 		sd	s1,56(sp)
 857 0458 23382103 		sd	s2,48(sp)
 858 045c 23343103 		sd	s3,40(sp)
 859 0460 23304103 		sd	s4,32(sp)
 860 0464 233C5101 		sd	s5,24(sp)
 861              		.cfi_offset 1, -8
 862              		.cfi_offset 8, -16
 863              		.cfi_offset 9, -24
 864              		.cfi_offset 18, -32
 865              		.cfi_offset 19, -40
 866              		.cfi_offset 20, -48
 867              		.cfi_offset 21, -56
 868 0468 13040105 		addi	s0,sp,80
 869              		.cfi_def_cfa 8, 0
 870 046c 93890500 		mv	s3,a1
 147:src/kernel/interrupt/interrupt_cpp.cpp ****     uint64 sepc = Riscv::r_sepc()+4, sstatus = Riscv::r_sstatus(), ret = a0;
 871              		.loc 1 147 5
 872              	.LBB311:
 873              	.LBB312:
 145:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sepc" : "=r" (sepc));
 874              		.loc 3 145 5
 146:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return sepc;
 875              		.loc 3 146 5
 146:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return sepc;
 876              		.loc 3 146 48 is_stmt 0
 877              	 #APP
 878              	# 146 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 879              		csrr a5, sepc
 880              	# 0 "" 2
 881              	 #NO_APP
 882 0474 233CF4FA 		sd	a5,-72(s0)
 147:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 883              		.loc 3 147 5 is_stmt 1
 147:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 884              		.loc 3 147 12 is_stmt 0
 885 0478 033984FB 		ld	s2,-72(s0)
 886              	.LBE312:
 887              	.LBE311:
 888              		.loc 1 147 35
 889 047c 13094900 		addi	s2,s2,4
 890              	.LVL86:
 891              	.LBB313:
 892              	.LBB314:
 219:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sstatus" : "=r" (sstatus));
 893              		.loc 3 219 5 is_stmt 1
 220:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return sstatus;
 894              		.loc 3 220 5
 220:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return sstatus;
 895              		.loc 3 220 54 is_stmt 0
 896              	 #APP
 897              	# 220 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 898              		csrr a5, sstatus
 899              	# 0 "" 2
GAS LISTING /tmp/ccBdKcG0.s 			page 28


 900              	 #NO_APP
 901 0484 2338F4FA 		sd	a5,-80(s0)
 902              		.loc 3 221 5 is_stmt 1
 903              		.loc 3 221 12 is_stmt 0
 904 0488 033A04FB 		ld	s4,-80(s0)
 905              	.LVL87:
 906              	.LBE314:
 907              	.LBE313:
 148:src/kernel/interrupt/interrupt_cpp.cpp ****     
 149:src/kernel/interrupt/interrupt_cpp.cpp ****     if(a0 == MA){
 908              		.loc 1 149 5 is_stmt 1
 909              	.LBB315:
 910 048c 93071000 		li	a5,1
 911 0490 6306F50E 		beq	a0,a5,.L63
 912 0494 93040500 		mv	s1,a0
 913 0498 930A0600 		mv	s5,a2
 914              	.LBE315:
 150:src/kernel/interrupt/interrupt_cpp.cpp ****         //mem_alloc
 151:src/kernel/interrupt/interrupt_cpp.cpp ****         ret = (uint64)MemoryAllocator::getInstance().mem_alloc(a1);    
 152:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 153:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == MF)
 915              		.loc 1 153 10
 916              	.LBB443:
 917              	.LBB316:
 918 049c 93072000 		li	a5,2
 919 04a0 630CF510 		beq	a0,a5,.L64
 920              	.LBE316:
 921              	.LBE443:
 154:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 155:src/kernel/interrupt/interrupt_cpp.cpp ****         //mem_free
 156:src/kernel/interrupt/interrupt_cpp.cpp ****         ret = (uint64)MemoryAllocator::getInstance().mem_free((void*)a1);
 157:src/kernel/interrupt/interrupt_cpp.cpp ****     
 158:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 159:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == TC)
 922              		.loc 1 159 10
 923              	.LBB444:
 924              	.LBB427:
 925              	.LBB317:
 926 04a4 93071001 		li	a5,17
 927 04a8 6304F512 		beq	a0,a5,.L65
 928              	.LBE317:
 929              	.LBE427:
 930              	.LBE444:
 160:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 161:src/kernel/interrupt/interrupt_cpp.cpp ****         //thread_create
 162:src/kernel/interrupt/interrupt_cpp.cpp ****         uint64* t = (uint64*)a1;
 163:src/kernel/interrupt/interrupt_cpp.cpp ****         *t = (uint64)TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4); 
 164:src/kernel/interrupt/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
 165:src/kernel/interrupt/interrupt_cpp.cpp ****         else ret = 0;
 166:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 167:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == TE)
 931              		.loc 1 167 10
 932              	.LBB445:
 933              	.LBB428:
 934              	.LBB412:
 935              	.LBB318:
 936 04ac 93072001 		li	a5,18
GAS LISTING /tmp/ccBdKcG0.s 			page 29


 937 04b0 6306F514 		beq	a0,a5,.L66
 938              	.LBE318:
 939              	.LBE412:
 940              	.LBE428:
 941              	.LBE445:
 168:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 169:src/kernel/interrupt/interrupt_cpp.cpp ****         //thread_exit
 170:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::running->finish();
 171:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::dispatch();
 172:src/kernel/interrupt/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 173:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 174:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == TD)
 942              		.loc 1 174 10
 943              	.LBB446:
 944              	.LBB429:
 945              	.LBB413:
 946              	.LBB397:
 947              	.LBB319:
 948 04b4 93073001 		li	a5,19
 949 04b8 6306F516 		beq	a0,a5,.L67
 950              	.LBE319:
 951              	.LBE397:
 952              	.LBE413:
 953              	.LBE429:
 954              	.LBE446:
 175:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 176:src/kernel/interrupt/interrupt_cpp.cpp ****         //thread_dispatch
 177:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::timeSliceCounter = 0; 
 178:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::yield();
 179:src/kernel/interrupt/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 180:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 181:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == DTH)
 955              		.loc 1 181 10
 956              	.LBB447:
 957              	.LBB430:
 958              	.LBB414:
 959              	.LBB398:
 960              	.LBB381:
 961              	.LBB320:
 962 04bc 93079006 		li	a5,105
 963 04c0 6300F518 		beq	a0,a5,.L68
 964              	.LBE320:
 965              	.LBE381:
 966              	.LBE398:
 967              	.LBE414:
 968              	.LBE430:
 969              	.LBE447:
 182:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 183:src/kernel/interrupt/interrupt_cpp.cpp ****         //delete thread handle
 184:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::deleteThread((TCB*)a1);
 185:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 186:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == SO)
 970              		.loc 1 186 10
 971              	.LBB448:
 972              	.LBB431:
 973              	.LBB415:
 974              	.LBB399:
GAS LISTING /tmp/ccBdKcG0.s 			page 30


 975              	.LBB382:
 976              	.LBB369:
 977              	.LBB321:
 978 04c4 93071002 		li	a5,33
 979 04c8 6306F518 		beq	a0,a5,.L69
 980              	.LBE321:
 981              	.LBE369:
 982              	.LBE382:
 983              	.LBE399:
 984              	.LBE415:
 985              	.LBE431:
 986              	.LBE448:
 187:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 188:src/kernel/interrupt/interrupt_cpp.cpp ****         uint64* t = (uint64*)a1;
 189:src/kernel/interrupt/interrupt_cpp.cpp ****         *t = (uint64)(new KSemaphore(a2));
 190:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 191:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == SC)
 987              		.loc 1 191 10
 988              	.LBB449:
 989              	.LBB432:
 990              	.LBB416:
 991              	.LBB400:
 992              	.LBB383:
 993              	.LBB370:
 994              	.LBB361:
 995              	.LBB322:
 996 04cc 93072002 		li	a5,34
 997 04d0 6308F522 		beq	a0,a5,.L70
 998              	.LBE322:
 999              	.LBE361:
 1000              	.LBE370:
 1001              	.LBE383:
 1002              	.LBE400:
 1003              	.LBE416:
 1004              	.LBE432:
 1005              	.LBE449:
 192:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 193:src/kernel/interrupt/interrupt_cpp.cpp ****         KSemaphore* t = (KSemaphore*)a1;
 194:src/kernel/interrupt/interrupt_cpp.cpp ****         delete t;
 195:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 196:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == SW)
 1006              		.loc 1 196 10
 1007              	.LBB450:
 1008              	.LBB433:
 1009              	.LBB417:
 1010              	.LBB401:
 1011              	.LBB384:
 1012              	.LBB371:
 1013              	.LBB362:
 1014              	.LBB345:
 1015              	.LBB323:
 1016 04d4 93073002 		li	a5,35
 1017 04d8 630CF524 		beq	a0,a5,.L71
 1018              	.LBE323:
 1019              	.LBE345:
 1020              	.LBE362:
 1021              	.LBE371:
GAS LISTING /tmp/ccBdKcG0.s 			page 31


 1022              	.LBE384:
 1023              	.LBE401:
 1024              	.LBE417:
 1025              	.LBE433:
 1026              	.LBE450:
 197:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 198:src/kernel/interrupt/interrupt_cpp.cpp ****         KSemaphore* t = (KSemaphore*)a1;
 199:src/kernel/interrupt/interrupt_cpp.cpp ****         ret = t->wait();
 200:src/kernel/interrupt/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 201:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 202:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == SS)
 1027              		.loc 1 202 10
 1028              	.LBB451:
 1029              	.LBB434:
 1030              	.LBB418:
 1031              	.LBB402:
 1032              	.LBB385:
 1033              	.LBB372:
 1034              	.LBB363:
 1035              	.LBB346:
 1036              	.LBB338:
 1037              	.LBB324:
 1038 04dc 93074002 		li	a5,36
 1039 04e0 6302F526 		beq	a0,a5,.L72
 203:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 204:src/kernel/interrupt/interrupt_cpp.cpp ****         KSemaphore* t = (KSemaphore*)a1;
 205:src/kernel/interrupt/interrupt_cpp.cpp ****         t->signal();
 206:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 207:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == TS)
 1040              		.loc 1 207 10
 1041 04e4 93071003 		li	a5,49
 1042 04e8 6308F526 		beq	a0,a5,.L73
 208:src/kernel/interrupt/interrupt_cpp.cpp ****     {      
 209:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::sleep(a1);
 210:src/kernel/interrupt/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 211:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 212:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == GC)
 1043              		.loc 1 212 10
 1044 04ec 93071004 		li	a5,65
 1045 04f0 6300F528 		beq	a0,a5,.L74
 213:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 214:src/kernel/interrupt/interrupt_cpp.cpp ****         ret = StdIO::ibuffer->get();
 215:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 216:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(a0 == PC)
 1046              		.loc 1 216 10
 1047 04f4 93072004 		li	a5,66
 1048 04f8 631CF508 		bne	a0,a5,.L44
 217:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 218:src/kernel/interrupt/interrupt_cpp.cpp ****         StdIO::obuffer->put((char)a1);
 1049              		.loc 1 218 9
 1050              		.loc 1 218 28 is_stmt 0
 1051 04fc 97070000 		lla	a5,_ZN5StdIO7obufferE
 1051      93870700 
 1052 0504 03BA0700 		ld	s4,0(a5)
 1053              	.LVL88:
 1054 0508 93F9F50F 		andi	s3,a1,0xff
 1055              	.LVL89:
GAS LISTING /tmp/ccBdKcG0.s 			page 32


 1056              	.LBB325:
 1057              	.LBB326:
  27:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         mutex.wait();
 1058              		.loc 4 27 28
 1059 050c 13050A45 		addi	a0,s4,1104
 1060              	.LVL90:
 1061              	.LEHB3:
 1062 0510 97000000 		call	_ZN10KSemaphore4waitEv
 1062      E7800000 
 1063              	.LVL91:
  28:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** 
 1064              		.loc 4 28 19
 1065 0518 930A0A40 		addi	s5,s4,1024
 1066              	.LVL92:
 1067 051c 13850A00 		mv	a0,s5
 1068 0520 97000000 		call	_ZN10KSemaphore4waitEv
 1068      E7800000 
 1069              	.LVL93:
  30:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         buffer[tail]=c;
 1070              		.loc 4 30 9
 1071 0528 83270A48 		lw	a5,1152(s4)
 1072 052c 9B871700 		addiw	a5,a5,1
 1073 0530 2320FA48 		sw	a5,1152(s4)
  31:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         tail=(tail+1)%BUFFER_SIZE;
 1074              		.loc 4 31 16
 1075 0534 8327CA47 		lw	a5,1148(s4)
  31:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         tail=(tail+1)%BUFFER_SIZE;
 1076              		.loc 4 31 9
 1077 0538 3307FA00 		add	a4,s4,a5
 1078 053c 23003701 		sb	s3,0(a4)
  32:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     
 1079              		.loc 4 32 19
 1080 0540 9B871700 		addiw	a5,a5,1
  32:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     
 1081              		.loc 4 32 22
 1082 0544 1BD7F741 		sraiw	a4,a5,31
 1083 0548 1B576701 		srliw	a4,a4,22
 1084 054c BB87E700 		addw	a5,a5,a4
 1085 0550 93F7F73F 		andi	a5,a5,1023
 1086 0554 BB87E740 		subw	a5,a5,a4
  32:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     
 1087              		.loc 4 32 9
 1088 0558 232EFA46 		sw	a5,1148(s4)
  34:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         mutex.signal();
 1089              		.loc 4 34 29
 1090 055c 13058A42 		addi	a0,s4,1064
 1091 0560 97000000 		call	_ZN10KSemaphore6signalEv
 1091      E7800000 
 1092              	.LVL94:
  35:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****     }
 1093              		.loc 4 35 21
 1094 0568 13850A00 		mv	a0,s5
 1095 056c 97000000 		call	_ZN10KSemaphore6signalEv
 1095      E7800000 
 1096              	.LVL95:
 1097              	.LBE326:
 1098              	.LBE325:
GAS LISTING /tmp/ccBdKcG0.s 			page 33


 1099              	.LBE324:
 1100              	.LBE338:
 1101              	.LBE346:
 1102              	.LBE363:
 1103              	.LBE372:
 1104              	.LBE385:
 1105              	.LBE402:
 1106              	.LBE418:
 1107              	.LBE434:
 1108              	.LBE451:
 147:src/kernel/interrupt/interrupt_cpp.cpp ****     
 1109              		.loc 1 147 68
 1110 0574 13850400 		mv	a0,s1
 1111 0578 6F008001 		j	.L44
 1112              	.LVL96:
 1113              	.L63:
 1114              	.LBB452:
 151:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1115              		.loc 1 151 9 is_stmt 1
 151:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1116              		.loc 1 151 52 is_stmt 0
 1117 057c 97000000 		call	_ZN15MemoryAllocator11getInstanceEv
 1117      E7800000 
 1118              	.LVL97:
 151:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1119              		.loc 1 151 63
 1120 0584 93850900 		mv	a1,s3
 1121 0588 97000000 		call	_ZN15MemoryAllocator9mem_allocEm
 1121      E7800000 
 1122              	.LVL98:
 1123              	.L44:
 1124              	.LBE452:
 219:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 220:src/kernel/interrupt/interrupt_cpp.cpp ****     Riscv::w_sepc(sepc);
 1125              		.loc 1 220 5 is_stmt 1
 1126              	.LBB453:
 1127              	.LBB454:
 141:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 1128              		.loc 3 141 5
 141:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 1129              		.loc 3 141 49 is_stmt 0
 1130              	 #APP
 1131              	# 141 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 1132              		csrw sepc, s2
 1133              	# 0 "" 2
 1134              	.LVL99:
 1135              	 #NO_APP
 1136              	.LBE454:
 1137              	.LBE453:
 221:src/kernel/interrupt/interrupt_cpp.cpp ****     return ret;
 1138              		.loc 1 221 5 is_stmt 1
 222:src/kernel/interrupt/interrupt_cpp.cpp **** }
 1139              		.loc 1 222 1 is_stmt 0
 1140 0594 83308104 		ld	ra,72(sp)
 1141              		.cfi_remember_state
 1142              		.cfi_restore 1
 1143 0598 03340104 		ld	s0,64(sp)
GAS LISTING /tmp/ccBdKcG0.s 			page 34


 1144              		.cfi_restore 8
 1145              		.cfi_def_cfa 2, 80
 1146 059c 83348103 		ld	s1,56(sp)
 1147              		.cfi_restore 9
 1148 05a0 03390103 		ld	s2,48(sp)
 1149              		.cfi_restore 18
 1150              	.LVL100:
 1151 05a4 83398102 		ld	s3,40(sp)
 1152              		.cfi_restore 19
 1153 05a8 033A0102 		ld	s4,32(sp)
 1154              		.cfi_restore 20
 1155 05ac 833A8101 		ld	s5,24(sp)
 1156              		.cfi_restore 21
 1157 05b0 13010105 		addi	sp,sp,80
 1158              		.cfi_def_cfa_offset 0
 1159 05b4 67800000 		jr	ra
 1160              	.LVL101:
 1161              	.L64:
 1162              		.cfi_restore_state
 1163              	.LBB455:
 1164              	.LBB435:
 156:src/kernel/interrupt/interrupt_cpp.cpp ****     
 1165              		.loc 1 156 9 is_stmt 1
 156:src/kernel/interrupt/interrupt_cpp.cpp ****     
 1166              		.loc 1 156 52 is_stmt 0
 1167 05b8 97000000 		call	_ZN15MemoryAllocator11getInstanceEv
 1167      E7800000 
 1168              	.LVL102:
 156:src/kernel/interrupt/interrupt_cpp.cpp ****     
 1169              		.loc 1 156 62
 1170 05c0 93850900 		mv	a1,s3
 1171 05c4 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv
 1171      E7800000 
 1172              	.LVL103:
 1173 05cc 6FF05FFC 		j	.L44
 1174              	.LVL104:
 1175              	.L65:
 1176              	.LBB419:
 1177              	.LBB403:
 162:src/kernel/interrupt/interrupt_cpp.cpp ****         *t = (uint64)TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4); 
 1178              		.loc 1 162 9 is_stmt 1
 163:src/kernel/interrupt/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
 1179              		.loc 1 163 9
 163:src/kernel/interrupt/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
 1180              		.loc 1 163 39 is_stmt 0
 1181 05d0 13060700 		mv	a2,a4
 1182              	.LVL105:
 1183 05d4 93850600 		mv	a1,a3
 1184              	.LVL106:
 1185 05d8 13850A00 		mv	a0,s5
 1186 05dc 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm
 1186      E7800000 
 1187              	.LVL107:
 163:src/kernel/interrupt/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
 1188              		.loc 1 163 12
 1189 05e4 23B0A900 		sd	a0,0(s3)
 164:src/kernel/interrupt/interrupt_cpp.cpp ****         else ret = 0;
GAS LISTING /tmp/ccBdKcG0.s 			page 35


 1190              		.loc 1 164 9 is_stmt 1
 1191 05e8 63060500 		beq	a0,zero,.L75
 165:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1192              		.loc 1 165 18 is_stmt 0
 1193 05ec 13050000 		li	a0,0
 1194 05f0 6FF01FFA 		j	.L44
 1195              	.L75:
 164:src/kernel/interrupt/interrupt_cpp.cpp ****         else ret = 0;
 1196              		.loc 1 164 23
 1197 05f4 1305C0FF 		li	a0,-4
 1198 05f8 6FF09FF9 		j	.L44
 1199              	.LVL108:
 1200              	.L66:
 1201              	.LBE403:
 1202              	.LBB404:
 170:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::dispatch();
 1203              		.loc 1 170 9 is_stmt 1
 170:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::dispatch();
 1204              		.loc 1 170 29 is_stmt 0
 1205 05fc 97070000 		lla	a5,_ZN3TCB7runningE
 1205      93870700 
 1206 0604 83B70700 		ld	a5,0(a5)
 1207              	.LVL109:
 1208              	.LBB386:
 1209              	.LBB387:
  44:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     bool isFinished(){ return state == FINISHED; }
 1210              		.loc 2 44 21 is_stmt 1
  44:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     bool isFinished(){ return state == FINISHED; }
 1211              		.loc 2 44 27 is_stmt 0
 1212 0608 13072000 		li	a4,2
 1213              	.LVL110:
 1214 060c 23A8E702 		sw	a4,48(a5)
 1215              	.LVL111:
 1216              	.LBE387:
 1217              	.LBE386:
 171:src/kernel/interrupt/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 1218              		.loc 1 171 9 is_stmt 1
 171:src/kernel/interrupt/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 1219              		.loc 1 171 22 is_stmt 0
 1220 0610 97000000 		call	_ZN3TCB8dispatchEv
 1220      E7800000 
 1221              	.LVL112:
 172:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1222              		.loc 1 172 9 is_stmt 1
 1223              	.LBB388:
 1224              	.LBB389:
 215:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 1225              		.loc 3 215 5
 215:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 1226              		.loc 3 215 55 is_stmt 0
 1227              	 #APP
 1228              	# 215 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 1229              		csrw sstatus, s4
 1230              	# 0 "" 2
 1231              	 #NO_APP
 1232              	.LBE389:
 1233              	.LBE388:
GAS LISTING /tmp/ccBdKcG0.s 			page 36


 1234              	.LBE404:
 1235              	.LBE419:
 1236              	.LBE435:
 1237              	.LBE455:
 147:src/kernel/interrupt/interrupt_cpp.cpp ****     
 1238              		.loc 1 147 68
 1239 061c 13850400 		mv	a0,s1
 1240 0620 6FF01FF7 		j	.L44
 1241              	.LVL113:
 1242              	.L67:
 1243              	.LBB456:
 1244              	.LBB436:
 1245              	.LBB420:
 1246              	.LBB405:
 1247              	.LBB390:
 177:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::yield();
 1248              		.loc 1 177 9 is_stmt 1
 177:src/kernel/interrupt/interrupt_cpp.cpp ****         TCB::yield();
 1249              		.loc 1 177 31 is_stmt 0
 1250 0624 97070000 		sd	zero,_ZN3TCB16timeSliceCounterE,a5
 1250      23B00700 
 178:src/kernel/interrupt/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 1251              		.loc 1 178 9 is_stmt 1
 178:src/kernel/interrupt/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 1252              		.loc 1 178 19 is_stmt 0
 1253 062c 97000000 		call	_ZN3TCB5yieldEv
 1253      E7800000 
 1254              	.LVL114:
 179:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1255              		.loc 1 179 9 is_stmt 1
 1256              	.LBB373:
 1257              	.LBB374:
 215:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 1258              		.loc 3 215 5
 215:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 1259              		.loc 3 215 55 is_stmt 0
 1260              	 #APP
 1261              	# 215 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 1262              		csrw sstatus, s4
 1263              	# 0 "" 2
 1264              	 #NO_APP
 1265              	.LBE374:
 1266              	.LBE373:
 1267              	.LBE390:
 1268              	.LBE405:
 1269              	.LBE420:
 1270              	.LBE436:
 1271              	.LBE456:
 147:src/kernel/interrupt/interrupt_cpp.cpp ****     
 1272              		.loc 1 147 68
 1273 0638 13850400 		mv	a0,s1
 1274 063c 6FF05FF5 		j	.L44
 1275              	.LVL115:
 1276              	.L68:
 1277              	.LBB457:
 1278              	.LBB437:
 1279              	.LBB421:
GAS LISTING /tmp/ccBdKcG0.s 			page 37


 1280              	.LBB406:
 1281              	.LBB391:
 1282              	.LBB375:
 184:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1283              		.loc 1 184 9 is_stmt 1
 184:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1284              		.loc 1 184 26 is_stmt 0
 1285 0640 13850500 		mv	a0,a1
 1286 0644 97000000 		call	_ZN3TCB12deleteThreadEPS_
 1286      E7800000 
 1287              	.LVL116:
 1288              	.LBE375:
 1289              	.LBE391:
 1290              	.LBE406:
 1291              	.LBE421:
 1292              	.LBE437:
 1293              	.LBE457:
 147:src/kernel/interrupt/interrupt_cpp.cpp ****     
 1294              		.loc 1 147 68
 1295 064c 13850400 		mv	a0,s1
 1296              	.LBB458:
 1297              	.LBB438:
 1298              	.LBB422:
 1299              	.LBB407:
 1300              	.LBB392:
 1301              	.LBB376:
 1302 0650 6FF01FF4 		j	.L44
 1303              	.LVL117:
 1304              	.L69:
 1305              	.LBB364:
 1306              	.LBB347:
 188:src/kernel/interrupt/interrupt_cpp.cpp ****         *t = (uint64)(new KSemaphore(a2));
 1307              		.loc 1 188 9 is_stmt 1
 189:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1308              		.loc 1 189 9
 1309              	.LBB348:
 1310              	.LBB349:
  15:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp **** 
 1311              		.loc 5 15 5
 1312 0654 97070000 		lla	a5,_ZN10KSemaphore5cacheE
 1312      93870700 
 1313 065c 83B70700 		ld	a5,0(a5)
 1314 0660 63840704 		beq	a5,zero,.L76
 1315              	.LVL118:
 1316              	.L51:
  15:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp **** 
 1317              		.loc 5 15 5
 1318 0664 97070000 		lla	a5,_ZN10KSemaphore5cacheE
 1318      93870700 
 1319 066c 03B50700 		ld	a0,0(a5)
 1320 0670 97000000 		call	_ZN11ObjectCache9alloc_objEv
 1320      E7800000 
 1321              	.LVL119:
 1322              	.LBE349:
 1323              	.LBE348:
 1324              	.LBB351:
 1325              	.LBB352:
GAS LISTING /tmp/ccBdKcG0.s 			page 38


  17:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp ****     {
 1326              		.loc 5 17 37 is_stmt 0
 1327 0678 23245501 		sw	s5,8(a0)
 1328              	.LVL120:
 1329              	.LBB353:
 1330              	.LBB354:
 1331              		.loc 6 26 54
 1332 067c 23380500 		sd	zero,16(a0)
 1333 0680 233C0500 		sd	zero,24(a0)
 1334 0684 23200502 		sw	zero,32(a0)
 1335              	.LVL121:
 1336              	.LBE354:
 1337              	.LBE353:
  23:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp ****         activeSemaphores = this;
 1338              		.loc 5 23 9 is_stmt 1
  23:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp ****         activeSemaphores = this;
 1339              		.loc 5 23 14 is_stmt 0
 1340 0688 97070000 		lla	a5,_ZN10KSemaphore16activeSemaphoresE
 1340      93870700 
 1341 0690 03B70700 		ld	a4,0(a5)
 1342 0694 2330E500 		sd	a4,0(a0)
 1343              		.loc 5 24 9 is_stmt 1
 1344              		.loc 5 24 26 is_stmt 0
 1345 0698 23B0A700 		sd	a0,0(a5)
 1346              	.LVL122:
 1347              	.LBE352:
 1348              	.LBE351:
 189:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1349              		.loc 1 189 12
 1350 069c 23B0A900 		sd	a0,0(s3)
 1351              	.LBE347:
 1352              	.LBE364:
 1353              	.LBE376:
 1354              	.LBE392:
 1355              	.LBE407:
 1356              	.LBE422:
 1357              	.LBE438:
 1358              	.LBE458:
 147:src/kernel/interrupt/interrupt_cpp.cpp ****     
 1359              		.loc 1 147 68
 1360 06a0 13850400 		mv	a0,s1
 1361              	.LBB459:
 1362              	.LBB439:
 1363              	.LBB423:
 1364              	.LBB408:
 1365              	.LBB393:
 1366              	.LBB377:
 1367              	.LBB365:
 1368 06a4 6FF0DFEE 		j	.L44
 1369              	.LVL123:
 1370              	.L76:
 1371              	.LBB356:
 1372              	.LBB355:
 1373              	.LBB350:
  15:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp **** 
 1374              		.loc 5 15 5 is_stmt 1
 1375 06a8 13058005 		li	a0,88
GAS LISTING /tmp/ccBdKcG0.s 			page 39


 1376 06ac 97000000 		call	_ZN11ObjectCachenwEm
 1376      E7800000 
 1377              	.LVL124:
 1378              	.LEHE3:
 1379 06b4 130A0500 		mv	s4,a0
 1380              	.LVL125:
 1381 06b8 93070000 		li	a5,0
 1382 06bc 13070000 		li	a4,0
 1383 06c0 93060000 		li	a3,0
 1384 06c4 13068002 		li	a2,40
 1385 06c8 97050000 		lla	a1,.LC0
 1385      93850500 
 1386              	.LEHB4:
 1387 06d0 97000000 		call	_ZN11ObjectCacheC1EPKcmPFvPvES4_NS_12SlabMetaTypeE
 1387      E7800000 
 1388              	.LVL126:
 1389              	.LEHE4:
 1390 06d8 97070000 		sd	s4,_ZN10KSemaphore5cacheE,a5
 1390      23B04701 
 1391 06e0 6FF05FF8 		j	.L51
 1392              	.L61:
 1393 06e4 93040500 		mv	s1,a0
 1394              	.LVL127:
 1395 06e8 13050A00 		mv	a0,s4
 1396 06ec 97000000 		call	_ZN11ObjectCachedlEPv
 1396      E7800000 
 1397              	.LVL128:
 1398 06f4 13850400 		mv	a0,s1
 1399              	.LEHB5:
 1400 06f8 97000000 		call	_Unwind_Resume
 1400      E7800000 
 1401              	.LVL129:
 1402              	.L70:
 1403              	.LBE350:
 1404              	.LBE355:
 1405              	.LBE356:
 1406              	.LBB357:
 1407              	.LBB339:
 193:src/kernel/interrupt/interrupt_cpp.cpp ****         delete t;
 1408              		.loc 1 193 9
 194:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1409              		.loc 1 194 9
 194:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1410              		.loc 1 194 17 is_stmt 0
 1411 0700 E38805E8 		beq	a1,zero,.L44
 194:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1412              		.loc 1 194 16 discriminator 1
 1413 0704 13850500 		mv	a0,a1
 1414 0708 97000000 		call	_ZN10KSemaphoreD1Ev
 1414      E7800000 
 1415              	.LVL130:
 1416              	.LBB340:
 1417              	.LBB341:
  15:src/kernel/interrupt/../../../h/../h/ksemaphore.hpp **** 
 1418              		.loc 5 15 5 is_stmt 1 discriminator 1
 1419 0710 93850900 		mv	a1,s3
 1420 0714 97070000 		lla	a5,_ZN10KSemaphore5cacheE
GAS LISTING /tmp/ccBdKcG0.s 			page 40


 1420      93870700 
 1421 071c 03B50700 		ld	a0,0(a5)
 1422 0720 97000000 		call	_ZN11ObjectCache8free_objEPv
 1422      E7800000 
 1423              	.LVL131:
 1424              	.LBE341:
 1425              	.LBE340:
 1426              	.LBE339:
 1427              	.LBE357:
 1428              	.LBE365:
 1429              	.LBE377:
 1430              	.LBE393:
 1431              	.LBE408:
 1432              	.LBE423:
 1433              	.LBE439:
 1434              	.LBE459:
 147:src/kernel/interrupt/interrupt_cpp.cpp ****     
 1435              		.loc 1 147 68 is_stmt 0 discriminator 1
 1436 0728 13850400 		mv	a0,s1
 1437 072c 6FF05FE6 		j	.L44
 1438              	.LVL132:
 1439              	.L71:
 1440              	.LBB460:
 1441              	.LBB440:
 1442              	.LBB424:
 1443              	.LBB409:
 1444              	.LBB394:
 1445              	.LBB378:
 1446              	.LBB366:
 1447              	.LBB358:
 1448              	.LBB342:
 1449              	.LBB332:
 198:src/kernel/interrupt/interrupt_cpp.cpp ****         ret = t->wait();
 1450              		.loc 1 198 9 is_stmt 1
 199:src/kernel/interrupt/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 1451              		.loc 1 199 9
 199:src/kernel/interrupt/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 1452              		.loc 1 199 22 is_stmt 0
 1453 0730 13850500 		mv	a0,a1
 1454 0734 97000000 		call	_ZN10KSemaphore4waitEv
 1454      E7800000 
 1455              	.LVL133:
 200:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1456              		.loc 1 200 9 is_stmt 1
 1457              	.LBB333:
 1458              	.LBB334:
 215:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 1459              		.loc 3 215 5
 215:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 1460              		.loc 3 215 55 is_stmt 0
 1461              	 #APP
 1462              	# 215 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 1463              		csrw sstatus, s4
 1464              	# 0 "" 2
 1465              	 #NO_APP
 1466 0740 6FF01FE5 		j	.L44
 1467              	.LVL134:
GAS LISTING /tmp/ccBdKcG0.s 			page 41


 1468              	.L72:
 1469              	.LBE334:
 1470              	.LBE333:
 1471              	.LBE332:
 1472              	.LBB335:
 1473              	.LBB327:
 204:src/kernel/interrupt/interrupt_cpp.cpp ****         t->signal();
 1474              		.loc 1 204 9 is_stmt 1
 205:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1475              		.loc 1 205 9
 205:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1476              		.loc 1 205 18 is_stmt 0
 1477 0744 13850500 		mv	a0,a1
 1478 0748 97000000 		call	_ZN10KSemaphore6signalEv
 1478      E7800000 
 1479              	.LVL135:
 1480              	.LBE327:
 1481              	.LBE335:
 1482              	.LBE342:
 1483              	.LBE358:
 1484              	.LBE366:
 1485              	.LBE378:
 1486              	.LBE394:
 1487              	.LBE409:
 1488              	.LBE424:
 1489              	.LBE440:
 1490              	.LBE460:
 147:src/kernel/interrupt/interrupt_cpp.cpp ****     
 1491              		.loc 1 147 68
 1492 0750 13850400 		mv	a0,s1
 1493              	.LBB461:
 1494              	.LBB441:
 1495              	.LBB425:
 1496              	.LBB410:
 1497              	.LBB395:
 1498              	.LBB379:
 1499              	.LBB367:
 1500              	.LBB359:
 1501              	.LBB343:
 1502              	.LBB336:
 1503 0754 6FF0DFE3 		j	.L44
 1504              	.LVL136:
 1505              	.L73:
 209:src/kernel/interrupt/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 1506              		.loc 1 209 9 is_stmt 1
 209:src/kernel/interrupt/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 1507              		.loc 1 209 19 is_stmt 0
 1508 0758 13850500 		mv	a0,a1
 1509 075c 97000000 		call	_ZN3TCB5sleepEm
 1509      E7800000 
 1510              	.LVL137:
 210:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1511              		.loc 1 210 9 is_stmt 1
 1512              	.LBB328:
 1513              	.LBB329:
 215:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 1514              		.loc 3 215 5
GAS LISTING /tmp/ccBdKcG0.s 			page 42


 215:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 1515              		.loc 3 215 55 is_stmt 0
 1516              	 #APP
 1517              	# 215 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 1518              		csrw sstatus, s4
 1519              	# 0 "" 2
 1520              	 #NO_APP
 1521              	.LBE329:
 1522              	.LBE328:
 1523              	.LBE336:
 1524              	.LBE343:
 1525              	.LBE359:
 1526              	.LBE367:
 1527              	.LBE379:
 1528              	.LBE395:
 1529              	.LBE410:
 1530              	.LBE425:
 1531              	.LBE441:
 1532              	.LBE461:
 147:src/kernel/interrupt/interrupt_cpp.cpp ****     
 1533              		.loc 1 147 68
 1534 0768 13850400 		mv	a0,s1
 1535 076c 6FF05FE2 		j	.L44
 1536              	.LVL138:
 1537              	.L74:
 1538              	.LBB462:
 1539              	.LBB442:
 1540              	.LBB426:
 1541              	.LBB411:
 1542              	.LBB396:
 1543              	.LBB380:
 1544              	.LBB368:
 1545              	.LBB360:
 1546              	.LBB344:
 1547              	.LBB337:
 214:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1548              		.loc 1 214 9 is_stmt 1
 214:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1549              		.loc 1 214 34 is_stmt 0
 1550 0770 97070000 		lla	a5,_ZN5StdIO7ibufferE
 1550      93870700 
 1551 0778 83B90700 		ld	s3,0(a5)
 1552              	.LVL139:
 1553              	.LBB330:
 1554              	.LBB331:
  39:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         mutex.wait();
 1555              		.loc 4 39 27
 1556 077c 13858942 		addi	a0,s3,1064
 1557 0780 97000000 		call	_ZN10KSemaphore4waitEv
 1557      E7800000 
 1558              	.LVL140:
  40:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** 
 1559              		.loc 4 40 19
 1560 0788 138A0940 		addi	s4,s3,1024
 1561              	.LVL141:
 1562 078c 13050A00 		mv	a0,s4
 1563 0790 97000000 		call	_ZN10KSemaphore4waitEv
GAS LISTING /tmp/ccBdKcG0.s 			page 43


 1563      E7800000 
 1564              	.LVL142:
  42:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         T r = buffer[head];
 1565              		.loc 4 42 9
 1566 0798 83A70948 		lw	a5,1152(s3)
 1567 079c 9B87F7FF 		addiw	a5,a5,-1
 1568 07a0 23A0F948 		sw	a5,1152(s3)
  43:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         head = (head+1)%BUFFER_SIZE;
 1569              		.loc 4 43 22
 1570 07a4 83A78947 		lw	a5,1144(s3)
  43:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         head = (head+1)%BUFFER_SIZE;
 1571              		.loc 4 43 11
 1572 07a8 3387F900 		add	a4,s3,a5
 1573 07ac 83440700 		lbu	s1,0(a4)
 1574              	.LVL143:
  44:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** 
 1575              		.loc 4 44 21
 1576 07b0 9B871700 		addiw	a5,a5,1
  44:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** 
 1577              		.loc 4 44 24
 1578 07b4 1BD7F741 		sraiw	a4,a5,31
 1579 07b8 1B576701 		srliw	a4,a4,22
 1580 07bc BB87E700 		addw	a5,a5,a4
 1581 07c0 93F7F73F 		andi	a5,a5,1023
 1582 07c4 BB87E740 		subw	a5,a5,a4
  44:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp **** 
 1583              		.loc 4 44 9
 1584 07c8 23ACF946 		sw	a5,1144(s3)
  46:src/kernel/interrupt/../../../h/../h/../h/shared_buffer.hpp ****         mutex.signal();
 1585              		.loc 4 46 30
 1586 07cc 13850945 		addi	a0,s3,1104
 1587 07d0 97000000 		call	_ZN10KSemaphore6signalEv
 1587      E7800000 
 1588              	.LVL144:
 1589              		.loc 4 47 21
 1590 07d8 13050A00 		mv	a0,s4
 1591 07dc 97000000 		call	_ZN10KSemaphore6signalEv
 1591      E7800000 
 1592              	.LVL145:
 1593              	.LEHE5:
 1594              	.LBE331:
 1595              	.LBE330:
 214:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 1596              		.loc 1 214 13
 1597 07e4 13850400 		mv	a0,s1
 1598              	.LVL146:
 1599 07e8 6FF09FDA 		j	.L44
 1600              	.LBE337:
 1601              	.LBE344:
 1602              	.LBE360:
 1603              	.LBE368:
 1604              	.LBE380:
 1605              	.LBE396:
 1606              	.LBE411:
 1607              	.LBE426:
 1608              	.LBE442:
 1609              	.LBE462:
GAS LISTING /tmp/ccBdKcG0.s 			page 44


 1610              		.cfi_endproc
 1611              	.LFE115:
 1612              		.section	.gcc_except_table
 1613              	.LLSDA115:
 1614 002b FF       		.byte	0xff
 1615 002c FF       		.byte	0xff
 1616 002d 03       		.byte	0x3
 1617 002e 27       		.byte	0x27
 1618 002f 00000000 		.4byte	.LEHB3-.LFB115
 1619 0033 00000000 		.4byte	.LEHE3-.LEHB3
 1620 0037 00000000 		.4byte	0
 1621 003b 00       		.byte	0
 1622 003c 00000000 		.4byte	.LEHB4-.LFB115
 1623 0040 00000000 		.4byte	.LEHE4-.LEHB4
 1624 0044 00000000 		.4byte	.L61-.LFB115
 1625 0048 00       		.byte	0
 1626 0049 00000000 		.4byte	.LEHB5-.LFB115
 1627 004d 00000000 		.4byte	.LEHE5-.LEHB5
 1628 0051 00000000 		.4byte	0
 1629 0055 00       		.byte	0
 1630              		.text
 1632              		.align	2
 1633              		.globl	interrupt
 1635              	interrupt:
 1636              	.LFB116:
 223:src/kernel/interrupt/interrupt_cpp.cpp **** 
 224:src/kernel/interrupt/interrupt_cpp.cpp **** extern "C" volatile  void interrupt(uint64 a0, uint64 a1, uint64 a2, uint64 a3, uint64 a4)
 225:src/kernel/interrupt/interrupt_cpp.cpp **** {
 1637              		.loc 1 225 1 is_stmt 1
 1638              		.cfi_startproc
 1639              	.LVL147:
 1640 07ec 130101FA 		addi	sp,sp,-96
 1641              		.cfi_def_cfa_offset 96
 1642 07f0 233C1104 		sd	ra,88(sp)
 1643 07f4 23388104 		sd	s0,80(sp)
 1644 07f8 23349104 		sd	s1,72(sp)
 1645 07fc 23302105 		sd	s2,64(sp)
 1646 0800 233C3103 		sd	s3,56(sp)
 1647 0804 23384103 		sd	s4,48(sp)
 1648              		.cfi_offset 1, -8
 1649              		.cfi_offset 8, -16
 1650              		.cfi_offset 9, -24
 1651              		.cfi_offset 18, -32
 1652              		.cfi_offset 19, -40
 1653              		.cfi_offset 20, -48
 1654 0808 13040106 		addi	s0,sp,96
 1655              		.cfi_def_cfa 8, 0
 226:src/kernel/interrupt/interrupt_cpp.cpp ****     uint64 scause = Riscv::r_scause();
 1656              		.loc 1 226 5
 1657              	.LBB463:
 1658              	.LBB464:
 135:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrr %0, scause" : "=r" (scause));
 1659              		.loc 3 135 5
 136:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return scause;
 1660              		.loc 3 136 5
 136:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return scause;
 1661              		.loc 3 136 52 is_stmt 0
GAS LISTING /tmp/ccBdKcG0.s 			page 45


 1662              	 #APP
 1663              	# 136 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 1664              		csrr a5, scause
 1665              	# 0 "" 2
 1666              	 #NO_APP
 1667 0810 2334F4FA 		sd	a5,-88(s0)
 137:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 1668              		.loc 3 137 5 is_stmt 1
 137:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 1669              		.loc 3 137 12 is_stmt 0
 1670 0814 833484FA 		ld	s1,-88(s0)
 1671              	.LVL148:
 1672              	.LBE464:
 1673              	.LBE463:
 227:src/kernel/interrupt/interrupt_cpp.cpp ****     //static bool panic = 0;
 228:src/kernel/interrupt/interrupt_cpp.cpp ****     //KCHECKPRINT(scause);
 229:src/kernel/interrupt/interrupt_cpp.cpp ****     if(scause == IS)
 1674              		.loc 1 229 5 is_stmt 1
 1675              	.LBB465:
 1676 0818 93079000 		li	a5,9
 1677 081c 6384F414 		beq	s1,a5,.L95
 1678              	.LBE465:
 230:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 231:src/kernel/interrupt/interrupt_cpp.cpp ****         //ecall iz sistemskog rezima
 232:src/kernel/interrupt/interrupt_cpp.cpp ****         a0 = sysEcall(a0, a1, a2, a3, a4);
 233:src/kernel/interrupt/interrupt_cpp.cpp ****         asm volatile("sd %0, 10 * 8(s0)" :: "r" (a0));
 234:src/kernel/interrupt/interrupt_cpp.cpp ****     
 235:src/kernel/interrupt/interrupt_cpp.cpp ****     } 
 236:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(scause == IU)
 1679              		.loc 1 236 10
 1680              	.LBB526:
 1681              	.LBB466:
 1682 0820 93078000 		li	a5,8
 1683 0824 6386F416 		beq	s1,a5,.L96
 1684              	.LBE466:
 1685              	.LBE526:
 237:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 238:src/kernel/interrupt/interrupt_cpp.cpp ****         //ecall iz korisnickog rezima
 239:src/kernel/interrupt/interrupt_cpp.cpp ****         a0 = usrEcall(a0, a1, a2, a3, a4);
 240:src/kernel/interrupt/interrupt_cpp.cpp ****         asm volatile("sd %0, 10 * 8(s0)" :: "r" (a0));
 241:src/kernel/interrupt/interrupt_cpp.cpp ****         
 242:src/kernel/interrupt/interrupt_cpp.cpp ****     } 
 243:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(scause == IH)
 1686              		.loc 1 243 10
 1687              	.LBB527:
 1688              	.LBB519:
 1689              	.LBB467:
 1690 0828 9307F0FF 		li	a5,-1
 1691 082c 9397F703 		slli	a5,a5,63
 1692 0830 93879700 		addi	a5,a5,9
 1693 0834 6386F416 		beq	s1,a5,.L97
 1694              	.LBE467:
 1695              	.LBE519:
 1696              	.LBE527:
 244:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 245:src/kernel/interrupt/interrupt_cpp.cpp ****         //hardverski prekid
 246:src/kernel/interrupt/interrupt_cpp.cpp ****        StdIO::console_handler();
GAS LISTING /tmp/ccBdKcG0.s 			page 46


 247:src/kernel/interrupt/interrupt_cpp.cpp ****     
 248:src/kernel/interrupt/interrupt_cpp.cpp ****     } 
 249:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(scause == IT)
 1697              		.loc 1 249 10
 1698              	.LBB528:
 1699              	.LBB520:
 1700              	.LBB513:
 1701              	.LBB468:
 1702 0838 9307F0FF 		li	a5,-1
 1703 083c 9397F703 		slli	a5,a5,63
 1704 0840 93871700 		addi	a5,a5,1
 1705 0844 6384F416 		beq	s1,a5,.L98
 1706              	.LBE468:
 1707              	.LBE513:
 1708              	.LBE520:
 1709              	.LBE528:
 250:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 251:src/kernel/interrupt/interrupt_cpp.cpp ****         //prekid od timera
 252:src/kernel/interrupt/interrupt_cpp.cpp ****         timer_handler();      
 253:src/kernel/interrupt/interrupt_cpp.cpp ****     
 254:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 255:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(scause == PFI){
 1710              		.loc 1 255 10
 1711              	.LBB529:
 1712              	.LBB521:
 1713              	.LBB514:
 1714              	.LBB508:
 1715              	.LBB469:
 1716 0848 9307C000 		li	a5,12
 1717 084c 6386F416 		beq	s1,a5,.L99
 1718              	.LBE469:
 1719              	.LBE508:
 1720              	.LBE514:
 1721              	.LBE521:
 1722              	.LBE529:
 256:src/kernel/interrupt/interrupt_cpp.cpp ****         if(TCB::running->getState() == TCB::TCBState::PREPARING){
 257:src/kernel/interrupt/interrupt_cpp.cpp ****             TCB::running->setState(TCB::TCBState::READY);
 258:src/kernel/interrupt/interrupt_cpp.cpp ****             asm volatile("sd %0, 1 * 8(s0)" :: "r" (thread_exit));
 259:src/kernel/interrupt/interrupt_cpp.cpp ****             Riscv::mc_sstatus(Riscv::BitMaskSstatus::SSTATUS_SPP);
 260:src/kernel/interrupt/interrupt_cpp.cpp ****         }
 261:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 262:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(scause == PFL || scause == PFW){
 1723              		.loc 1 262 10
 1724              	.LBB530:
 1725              	.LBB522:
 1726              	.LBB515:
 1727              	.LBB509:
 1728              	.LBB504:
 1729              	.LBB470:
 1730 0850 9307D000 		li	a5,13
 1731 0854 638EF418 		beq	s1,a5,.L84
 1732              		.loc 1 262 27 is_stmt 0 discriminator 1
 1733 0858 9307F000 		li	a5,15
 1734 085c 638AF418 		beq	s1,a5,.L84
 1735              	.LBE470:
 1736              	.LBE504:
 1737              	.LBE509:
GAS LISTING /tmp/ccBdKcG0.s 			page 47


 1738              	.LBE515:
 1739              	.LBE522:
 1740              	.LBE530:
 263:src/kernel/interrupt/interrupt_cpp.cpp ****         uint64 stval = Riscv::r_stval(), sepc = Riscv::r_sepc(),
 264:src/kernel/interrupt/interrupt_cpp.cpp ****             sstatus = Riscv::r_sstatus();
 265:src/kernel/interrupt/interrupt_cpp.cpp ****         if(sstatus & Riscv::BitMaskSstatus::SSTATUS_SPP){
 266:src/kernel/interrupt/interrupt_cpp.cpp ****             KCHECKPRINT(scause);
 267:src/kernel/interrupt/interrupt_cpp.cpp ****             KCHECKPRINT(sepc);
 268:src/kernel/interrupt/interrupt_cpp.cpp ****             KCHECKPRINT(stval);
 269:src/kernel/interrupt/interrupt_cpp.cpp ****             kprintString("PAGE FAULT\n");
 270:src/kernel/interrupt/interrupt_cpp.cpp ****             while(true);
 271:src/kernel/interrupt/interrupt_cpp.cpp ****         }
 272:src/kernel/interrupt/interrupt_cpp.cpp ****         else{
 273:src/kernel/interrupt/interrupt_cpp.cpp ****             MemoryAllocator& allocator = MemoryAllocator::getInstance();
 274:src/kernel/interrupt/interrupt_cpp.cpp ****             FreeSegment* fs = allocator.getFreeSegmentMeta((void*)stval);
 275:src/kernel/interrupt/interrupt_cpp.cpp ****             
 276:src/kernel/interrupt/interrupt_cpp.cpp ****             if(fs){
 277:src/kernel/interrupt/interrupt_cpp.cpp ****                 Pager::getInstance().id_map(
 278:src/kernel/interrupt/interrupt_cpp.cpp ****                     fs->addr, 
 279:src/kernel/interrupt/interrupt_cpp.cpp ****                     (char*)fs->addr+fs->size, 
 280:src/kernel/interrupt/interrupt_cpp.cpp ****                     (PMTEntryBits)(PMTEntryBits::read | PMTEntryBits::write | PMTEntryBits::user)
 281:src/kernel/interrupt/interrupt_cpp.cpp ****                 );
 282:src/kernel/interrupt/interrupt_cpp.cpp ****             }
 283:src/kernel/interrupt/interrupt_cpp.cpp ****             else{
 284:src/kernel/interrupt/interrupt_cpp.cpp ****                 KCHECKPRINT(scause);
 285:src/kernel/interrupt/interrupt_cpp.cpp ****                 KCHECKPRINT(sepc);
 286:src/kernel/interrupt/interrupt_cpp.cpp ****                 KCHECKPRINT(stval);
 287:src/kernel/interrupt/interrupt_cpp.cpp ****                 while(true);
 288:src/kernel/interrupt/interrupt_cpp.cpp ****                 
 289:src/kernel/interrupt/interrupt_cpp.cpp ****             }
 290:src/kernel/interrupt/interrupt_cpp.cpp ****         }
 291:src/kernel/interrupt/interrupt_cpp.cpp ****         
 292:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 293:src/kernel/interrupt/interrupt_cpp.cpp ****     else if(scause == II || scause == IR || scause == IW)
 1741              		.loc 1 293 10 is_stmt 1
 1742              	.LBB531:
 1743              	.LBB523:
 1744              	.LBB516:
 1745              	.LBB510:
 1746              	.LBB505:
 1747              	.LBB495:
 1748              	.LBB471:
 1749 0860 93072000 		li	a5,2
 1750 0864 638AF400 		beq	s1,a5,.L90
 1751              		.loc 1 293 26 is_stmt 0 discriminator 1
 1752 0868 93075000 		li	a5,5
 1753 086c 6386F400 		beq	s1,a5,.L90
 1754              		.loc 1 293 42 discriminator 2
 1755 0870 93077000 		li	a5,7
 1756 0874 639AF434 		bne	s1,a5,.L91
 1757              	.L90:
 1758              	.LBE471:
 1759              	.LBE495:
 1760              	.LBE505:
 1761              	.LBE510:
 1762              	.LBE516:
 1763              	.LBE523:
GAS LISTING /tmp/ccBdKcG0.s 			page 48


 1764              	.LBE531:
 294:src/kernel/interrupt/interrupt_cpp.cpp ****     {
 295:src/kernel/interrupt/interrupt_cpp.cpp ****         //ilegalna instrukcija
 296:src/kernel/interrupt/interrupt_cpp.cpp ****         if(!TCB::running->isKernelThread())
 1765              		.loc 1 296 9 is_stmt 1
 1766              	.LBB532:
 1767              	.LBB524:
 1768              	.LBB517:
 1769              	.LBB511:
 1770              	.LBB506:
 1771              	.LBB496:
 1772              	.LBB481:
 1773              	.LBB472:
 1774              		.loc 1 296 41 is_stmt 0
 1775 0878 97070000 		lla	a5,_ZN3TCB7runningE
 1775      93870700 
 1776 0880 83B70700 		ld	a5,0(a5)
 1777              	.LVL149:
 1778              	.LBB473:
 1779              	.LBB474:
  47:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     bool isSuspended(){return state == BLOCKED || state == SLEEPING;}
  48:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     void setKernelMode() { userMode = false; }
  49:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     void setKernelLocked() { locked = true; }
  50:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     bool isKernelThread() { return !userMode; } 
 1780              		.loc 2 50 29 is_stmt 1
 1781              		.loc 2 50 37 is_stmt 0
 1782 0884 83C75703 		lbu	a5,53(a5)
 1783              	.LVL150:
 1784              	.LBE474:
 1785              	.LBE473:
 1786              		.loc 1 296 9
 1787 0888 63820732 		beq	a5,zero,.L92
 1788              	.LBB475:
 297:src/kernel/interrupt/interrupt_cpp.cpp ****         {
 298:src/kernel/interrupt/interrupt_cpp.cpp ****             uint64 stval;
 1789              		.loc 1 298 13 is_stmt 1
 299:src/kernel/interrupt/interrupt_cpp.cpp ****             asm volatile("csrr %0, stval" : "=r" (stval));
 1790              		.loc 1 299 13
 1791              		.loc 1 299 58 is_stmt 0
 1792              	 #APP
 1793              	# 299 "src/kernel/interrupt/interrupt_cpp.cpp" 1
 300              	            kprintString("\nERROR: Thread stopped due to unauthorised access!!\n");
 1794              		csrr s2, stval
 1795              	# 0 "" 2
 1796              	.LVL151:
 1797              		.loc 1 300 13 is_stmt 1
 1798              		.loc 1 300 25 is_stmt 0
 1799              	 #NO_APP
 1800 0890 17050000 		lla	a0,.LC6
 1800      13050500 
 1801              	.LVL152:
 1802 0898 97000000 		call	_Z12kprintStringPKc
 1802      E7800000 
 1803              	.LVL153:
 301:src/kernel/interrupt/interrupt_cpp.cpp ****             kprintString("SCAUSE: "); kprintInt(scause, 16); kprintString("\n"); 
 1804              		.loc 1 301 13 is_stmt 1
 1805              		.loc 1 301 25 is_stmt 0
GAS LISTING /tmp/ccBdKcG0.s 			page 49


 1806 08a0 17050000 		lla	a0,.LC7
 1806      13050500 
 1807 08a8 97000000 		call	_Z12kprintStringPKc
 1807      E7800000 
 1808              	.LVL154:
 1809              		.loc 1 301 39 is_stmt 1
 1810              		.loc 1 301 48 is_stmt 0
 1811 08b0 13060000 		li	a2,0
 1812 08b4 93050001 		li	a1,16
 1813 08b8 13850400 		mv	a0,s1
 1814 08bc 97000000 		call	_Z9kprintIntmib
 1814      E7800000 
 1815              	.LVL155:
 1816              		.loc 1 301 62 is_stmt 1
 1817              		.loc 1 301 74 is_stmt 0
 1818 08c4 17050000 		lla	a0,.LC2
 1818      13050500 
 1819 08cc 97000000 		call	_Z12kprintStringPKc
 1819      E7800000 
 1820              	.LVL156:
 302:src/kernel/interrupt/interrupt_cpp.cpp ****             kprintString("SEPC: "); kprintInt(Riscv::r_sepc(),16); kprintString("\n");
 1821              		.loc 1 302 13 is_stmt 1
 1822              		.loc 1 302 25 is_stmt 0
 1823 08d4 17050000 		lla	a0,.LC8
 1823      13050500 
 1824 08dc 97000000 		call	_Z12kprintStringPKc
 1824      E7800000 
 1825              	.LVL157:
 1826              		.loc 1 302 37 is_stmt 1
 1827              	.LBB476:
 1828              	.LBB477:
 145:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sepc" : "=r" (sepc));
 1829              		.loc 3 145 5
 146:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return sepc;
 1830              		.loc 3 146 5
 146:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return sepc;
 1831              		.loc 3 146 48 is_stmt 0
 1832              	 #APP
 1833              	# 146 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 1834              		csrr a5, sepc
 1835              	# 0 "" 2
 1836              	 #NO_APP
 1837 08e8 2334F4FC 		sd	a5,-56(s0)
 147:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 1838              		.loc 3 147 5 is_stmt 1
 147:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 1839              		.loc 3 147 12 is_stmt 0
 1840 08ec 033584FC 		ld	a0,-56(s0)
 1841              	.LBE477:
 1842              	.LBE476:
 1843              		.loc 1 302 46
 1844 08f0 13060000 		li	a2,0
 1845 08f4 93050001 		li	a1,16
 1846 08f8 97000000 		call	_Z9kprintIntmib
 1846      E7800000 
 1847              	.LVL158:
 1848              		.loc 1 302 68 is_stmt 1
GAS LISTING /tmp/ccBdKcG0.s 			page 50


 1849              		.loc 1 302 80 is_stmt 0
 1850 0900 17050000 		lla	a0,.LC2
 1850      13050500 
 1851 0908 97000000 		call	_Z12kprintStringPKc
 1851      E7800000 
 1852              	.LVL159:
 303:src/kernel/interrupt/interrupt_cpp.cpp ****             kprintString("STVAL: "); kprintInt(stval, 16); kprintString("\n\n");
 1853              		.loc 1 303 13 is_stmt 1
 1854              		.loc 1 303 25 is_stmt 0
 1855 0910 17050000 		lla	a0,.LC9
 1855      13050500 
 1856 0918 97000000 		call	_Z12kprintStringPKc
 1856      E7800000 
 1857              	.LVL160:
 1858              		.loc 1 303 38 is_stmt 1
 1859              		.loc 1 303 47 is_stmt 0
 1860 0920 13060000 		li	a2,0
 1861 0924 93050001 		li	a1,16
 1862 0928 13050900 		mv	a0,s2
 1863 092c 97000000 		call	_Z9kprintIntmib
 1863      E7800000 
 1864              	.LVL161:
 1865              		.loc 1 303 60 is_stmt 1
 1866              		.loc 1 303 72 is_stmt 0
 1867 0934 17050000 		lla	a0,.LC10
 1867      13050500 
 1868 093c 97000000 		call	_Z12kprintStringPKc
 1868      E7800000 
 1869              	.LVL162:
 304:src/kernel/interrupt/interrupt_cpp.cpp ****             TCB::running->finish();
 1870              		.loc 1 304 13 is_stmt 1
 1871              		.loc 1 304 33 is_stmt 0
 1872 0944 97070000 		lla	a5,_ZN3TCB7runningE
 1872      93870700 
 1873 094c 83B70700 		ld	a5,0(a5)
 1874              	.LVL163:
 1875              	.LBB478:
 1876              	.LBB479:
  44:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     bool isFinished(){ return state == FINISHED; }
 1877              		.loc 2 44 21 is_stmt 1
  44:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     bool isFinished(){ return state == FINISHED; }
 1878              		.loc 2 44 27 is_stmt 0
 1879 0950 13072000 		li	a4,2
 1880 0954 23A8E702 		sw	a4,48(a5)
 1881              	.LVL164:
 1882              	.LBE479:
 1883              	.LBE478:
 305:src/kernel/interrupt/interrupt_cpp.cpp ****             TCB::dispatch();
 1884              		.loc 1 305 13 is_stmt 1
 1885              		.loc 1 305 26 is_stmt 0
 1886 0958 97000000 		call	_ZN3TCB8dispatchEv
 1886      E7800000 
 1887              	.LVL165:
 1888              	.LBE475:
 1889 0960 6F000001 		j	.L77
 1890              	.LVL166:
 1891              	.L95:
GAS LISTING /tmp/ccBdKcG0.s 			page 51


 1892              	.LBE472:
 1893              	.LBE481:
 1894              	.LBE496:
 1895              	.LBE506:
 1896              	.LBE511:
 1897              	.LBE517:
 1898              	.LBE524:
 232:src/kernel/interrupt/interrupt_cpp.cpp ****         asm volatile("sd %0, 10 * 8(s0)" :: "r" (a0));
 1899              		.loc 1 232 9 is_stmt 1
 232:src/kernel/interrupt/interrupt_cpp.cpp ****         asm volatile("sd %0, 10 * 8(s0)" :: "r" (a0));
 1900              		.loc 1 232 22 is_stmt 0
 1901 0964 97000000 		call	_Z8sysEcallmmmmm
 1901      E7800000 
 1902              	.LVL167:
 233:src/kernel/interrupt/interrupt_cpp.cpp ****     
 1903              		.loc 1 233 9 is_stmt 1
 233:src/kernel/interrupt/interrupt_cpp.cpp ****     
 1904              		.loc 1 233 54 is_stmt 0
 1905              	 #APP
 1906              	# 233 "src/kernel/interrupt/interrupt_cpp.cpp" 1
 1907              		sd a0, 10 * 8(s0)
 1908              	# 0 "" 2
 1909              	.LVL168:
 1910              	 #NO_APP
 1911              	.L77:
 1912              	.LBE532:
 306:src/kernel/interrupt/interrupt_cpp.cpp ****         }
 307:src/kernel/interrupt/interrupt_cpp.cpp ****         else
 308:src/kernel/interrupt/interrupt_cpp.cpp ****         {
 309:src/kernel/interrupt/interrupt_cpp.cpp ****             kprintString("\nFATAL KERNEL ERROR: unauthorised access prompted!!\n");
 310:src/kernel/interrupt/interrupt_cpp.cpp ****             TCB::panicDispatch();
 311:src/kernel/interrupt/interrupt_cpp.cpp ****         }
 312:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 313:src/kernel/interrupt/interrupt_cpp.cpp ****     else{
 314:src/kernel/interrupt/interrupt_cpp.cpp ****         KCHECKPRINT(scause);
 315:src/kernel/interrupt/interrupt_cpp.cpp ****         kprintString("GRESKA\n");
 316:src/kernel/interrupt/interrupt_cpp.cpp ****         while(1);
 317:src/kernel/interrupt/interrupt_cpp.cpp **** 
 318:src/kernel/interrupt/interrupt_cpp.cpp ****     }
 319:src/kernel/interrupt/interrupt_cpp.cpp ****                     
 320:src/kernel/interrupt/interrupt_cpp.cpp ****     
 321:src/kernel/interrupt/interrupt_cpp.cpp ****     //print(a4);
 322:src/kernel/interrupt/interrupt_cpp.cpp **** }...
 1913              		.loc 1 322 1
 1914 0970 83308105 		ld	ra,88(sp)
 1915              		.cfi_remember_state
 1916              		.cfi_restore 1
 1917 0974 03340105 		ld	s0,80(sp)
 1918              		.cfi_restore 8
 1919              		.cfi_def_cfa 2, 96
 1920 0978 83348104 		ld	s1,72(sp)
 1921              		.cfi_restore 9
 1922              	.LVL169:
 1923 097c 03390104 		ld	s2,64(sp)
 1924              		.cfi_restore 18
 1925 0980 83398103 		ld	s3,56(sp)
 1926              		.cfi_restore 19
GAS LISTING /tmp/ccBdKcG0.s 			page 52


 1927 0984 033A0103 		ld	s4,48(sp)
 1928              		.cfi_restore 20
 1929 0988 13010106 		addi	sp,sp,96
 1930              		.cfi_def_cfa_offset 0
 1931 098c 67800000 		jr	ra
 1932              	.LVL170:
 1933              	.L96:
 1934              		.cfi_restore_state
 1935              	.LBB533:
 1936              	.LBB525:
 239:src/kernel/interrupt/interrupt_cpp.cpp ****         a0 = usrEcall(a0, a1, a2, a3, a4);
 1937              		.loc 1 239 9 is_stmt 1
 239:src/kernel/interrupt/interrupt_cpp.cpp ****         a0 = usrEcall(a0, a1, a2, a3, a4);
 1938              		.loc 1 239 22 is_stmt 0
 1939 0990 97000000 		call	_Z8usrEcallmmmmm
 1939      E7800000 
 1940              	.LVL171:
 240:src/kernel/interrupt/interrupt_cpp.cpp ****         asm volatile("sd %0, 10 * 8(s0)" :: "r" (a0));
 1941              		.loc 1 240 9 is_stmt 1
 240:src/kernel/interrupt/interrupt_cpp.cpp ****         asm volatile("sd %0, 10 * 8(s0)" :: "r" (a0));
 1942              		.loc 1 240 54 is_stmt 0
 1943              	 #APP
 1944              	# 240 "src/kernel/interrupt/interrupt_cpp.cpp" 1
 1945              		sd a0, 10 * 8(s0)
 1946              	# 0 "" 2
 1947              	 #NO_APP
 1948 099c 6FF05FFD 		j	.L77
 1949              	.LVL172:
 1950              	.L97:
 1951              	.LBB518:
 246:src/kernel/interrupt/interrupt_cpp.cpp ****        StdIO::console_handler();
 1952              		.loc 1 246 8 is_stmt 1
 246:src/kernel/interrupt/interrupt_cpp.cpp ****        StdIO::console_handler();
 1953              		.loc 1 246 30 is_stmt 0
 1954 09a0 97000000 		call	_ZN5StdIO15console_handlerEv
 1954      E7800000 
 1955              	.LVL173:
 1956 09a8 6FF09FFC 		j	.L77
 1957              	.LVL174:
 1958              	.L98:
 1959              	.LBB512:
 252:src/kernel/interrupt/interrupt_cpp.cpp ****         timer_handler();      
 1960              		.loc 1 252 9 is_stmt 1
 252:src/kernel/interrupt/interrupt_cpp.cpp ****         timer_handler();      
 1961              		.loc 1 252 22 is_stmt 0
 1962 09ac 97000000 		call	_Z13timer_handlerv
 1962      E7800000 
 1963              	.LVL175:
 1964 09b4 6FF0DFFB 		j	.L77
 1965              	.LVL176:
 1966              	.L99:
 1967              	.LBB507:
 256:src/kernel/interrupt/interrupt_cpp.cpp ****         if(TCB::running->getState() == TCB::TCBState::PREPARING){
 1968              		.loc 1 256 9 is_stmt 1
 256:src/kernel/interrupt/interrupt_cpp.cpp ****         if(TCB::running->getState() == TCB::TCBState::PREPARING){
 1969              		.loc 1 256 34 is_stmt 0
 1970 09b8 97070000 		lla	a5,_ZN3TCB7runningE
GAS LISTING /tmp/ccBdKcG0.s 			page 53


 1970      93870700 
 1971 09c0 83B70700 		ld	a5,0(a5)
 1972              	.LVL177:
 1973              	.LBB497:
 1974              	.LBB498:
  43:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     void finish() { state = FINISHED; }
 1975              		.loc 2 43 32 is_stmt 1
  43:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     void finish() { state = FINISHED; }
 1976              		.loc 2 43 39 is_stmt 0
 1977 09c4 83A60703 		lw	a3,48(a5)
 1978              	.LVL178:
 1979              	.LBE498:
 1980              	.LBE497:
 256:src/kernel/interrupt/interrupt_cpp.cpp ****         if(TCB::running->getState() == TCB::TCBState::PREPARING){
 1981              		.loc 1 256 9
 1982 09c8 13074000 		li	a4,4
 1983              	.LVL179:
 1984 09cc E392E6FA 		bne	a3,a4,.L77
 257:src/kernel/interrupt/interrupt_cpp.cpp ****             TCB::running->setState(TCB::TCBState::READY);
 1985              		.loc 1 257 13 is_stmt 1
 1986              	.LVL180:
 1987              	.LBB499:
 1988              	.LBB500:
  42:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     TCBState getState() const{ return state; }
 1989              		.loc 2 42 32
  42:src/kernel/interrupt/../../../h/../h/tcb.hpp ****     TCBState getState() const{ return state; }
 1990              		.loc 2 42 38 is_stmt 0
 1991 09d0 13071000 		li	a4,1
 1992 09d4 23A8E702 		sw	a4,48(a5)
 1993              	.LVL181:
 1994              	.LBE500:
 1995              	.LBE499:
 258:src/kernel/interrupt/interrupt_cpp.cpp ****             asm volatile("sd %0, 1 * 8(s0)" :: "r" (thread_exit));
 1996              		.loc 1 258 13 is_stmt 1
 258:src/kernel/interrupt/interrupt_cpp.cpp ****             asm volatile("sd %0, 1 * 8(s0)" :: "r" (thread_exit));
 1997              		.loc 1 258 66 is_stmt 0
 1998 09d8 97070000 		lla	a5,thread_exit
 1998      93870700 
 1999              	 #APP
 2000              	# 258 "src/kernel/interrupt/interrupt_cpp.cpp" 1
 259:src/kernel/interrupt/interrupt_cpp.cpp ****             Riscv::mc_sstatus(Riscv::BitMaskSstatus::SSTATUS_SPP);
 2001              		sd a5, 1 * 8(s0)
 2002              	# 0 "" 2
 2003              		.loc 1 259 13 is_stmt 1
 2004              	.LVL182:
 2005              	 #NO_APP
 2006              	.LBB501:
 2007              	.LBB502:
 211:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 2008              		.loc 3 211 5
 211:src/kernel/interrupt/../../../h/../h/riscv.hpp **** }
 2009              		.loc 3 211 53 is_stmt 0
 2010 09e4 93070010 		li	a5,256
 2011              	 #APP
 2012              	# 211 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 2013              		csrc sstatus, a5
 2014              	# 0 "" 2
GAS LISTING /tmp/ccBdKcG0.s 			page 54


 2015              	 #NO_APP
 2016 09ec 6FF05FF8 		j	.L77
 2017              	.LVL183:
 2018              	.L84:
 2019              	.LBE502:
 2020              	.LBE501:
 2021              	.LBB503:
 2022              	.LBB482:
 263:src/kernel/interrupt/interrupt_cpp.cpp ****         uint64 stval = Riscv::r_stval(), sepc = Riscv::r_sepc(),
 2023              		.loc 1 263 9 is_stmt 1
 2024              	.LBB483:
 2025              	.LBB484:
 165:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrr %0, stval" : "=r" (stval));
 2026              		.loc 3 165 5
 166:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return stval;
 2027              		.loc 3 166 5
 166:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return stval;
 2028              		.loc 3 166 50 is_stmt 0
 2029              	 #APP
 2030              	# 166 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 2031              		csrr a5, stval
 2032              	# 0 "" 2
 2033              	 #NO_APP
 2034 09f4 2330F4FC 		sd	a5,-64(s0)
 167:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 2035              		.loc 3 167 5 is_stmt 1
 167:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 2036              		.loc 3 167 12 is_stmt 0
 2037 09f8 833904FC 		ld	s3,-64(s0)
 2038              	.LVL184:
 2039              	.LBE484:
 2040              	.LBE483:
 2041              	.LBB485:
 2042              	.LBB486:
 145:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sepc" : "=r" (sepc));
 2043              		.loc 3 145 5 is_stmt 1
 146:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return sepc;
 2044              		.loc 3 146 5
 146:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return sepc;
 2045              		.loc 3 146 48 is_stmt 0
 2046              	 #APP
 2047              	# 146 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 2048              		csrr a5, sepc
 2049              	# 0 "" 2
 2050              	 #NO_APP
 2051 0a00 233CF4FA 		sd	a5,-72(s0)
 147:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 2052              		.loc 3 147 5 is_stmt 1
 147:src/kernel/interrupt/../../../h/../h/riscv.hpp **** } 
 2053              		.loc 3 147 12 is_stmt 0
 2054 0a04 033A84FB 		ld	s4,-72(s0)
 2055              	.LVL185:
 2056              	.LBE486:
 2057              	.LBE485:
 2058              	.LBB487:
 2059              	.LBB488:
 219:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sstatus" : "=r" (sstatus));
GAS LISTING /tmp/ccBdKcG0.s 			page 55


 2060              		.loc 3 219 5 is_stmt 1
 220:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return sstatus;
 2061              		.loc 3 220 5
 220:src/kernel/interrupt/../../../h/../h/riscv.hpp ****     return sstatus;
 2062              		.loc 3 220 54 is_stmt 0
 2063              	 #APP
 2064              	# 220 "src/kernel/interrupt/../../../h/../h/riscv.hpp" 1
 2065              		csrr a5, sstatus
 2066              	# 0 "" 2
 2067              	 #NO_APP
 2068 0a0c 2338F4FA 		sd	a5,-80(s0)
 2069              		.loc 3 221 5 is_stmt 1
 2070              		.loc 3 221 12 is_stmt 0
 2071 0a10 833704FB 		ld	a5,-80(s0)
 2072              	.LVL186:
 2073              	.LBE488:
 2074              	.LBE487:
 265:src/kernel/interrupt/interrupt_cpp.cpp ****         if(sstatus & Riscv::BitMaskSstatus::SSTATUS_SPP){
 2075              		.loc 1 265 9 is_stmt 1
 2076              	.LBB489:
 265:src/kernel/interrupt/interrupt_cpp.cpp ****         if(sstatus & Riscv::BitMaskSstatus::SSTATUS_SPP){
 2077              		.loc 1 265 20 is_stmt 0
 2078 0a14 93F70710 		andi	a5,a5,256
 2079              	.LVL187:
 265:src/kernel/interrupt/interrupt_cpp.cpp ****         if(sstatus & Riscv::BitMaskSstatus::SSTATUS_SPP){
 2080              		.loc 1 265 9
 2081 0a18 638A070A 		beq	a5,zero,.L86
 266:src/kernel/interrupt/interrupt_cpp.cpp ****             KCHECKPRINT(scause);
 2082              		.loc 1 266 13 is_stmt 1
 2083 0a1c 17050000 		lla	a0,.LC1
 2083      13050500 
 2084              	.LVL188:
 2085 0a24 97000000 		call	_Z12kprintStringPKc
 2085      E7800000 
 2086              	.LVL189:
 266:src/kernel/interrupt/interrupt_cpp.cpp ****             KCHECKPRINT(scause);
 2087              		.loc 1 266 13
 2088 0a2c 13060000 		li	a2,0
 2089 0a30 93050001 		li	a1,16
 2090 0a34 13850400 		mv	a0,s1
 2091 0a38 97000000 		call	_Z9kprintIntmib
 2091      E7800000 
 2092              	.LVL190:
 266:src/kernel/interrupt/interrupt_cpp.cpp ****             KCHECKPRINT(scause);
 2093              		.loc 1 266 13
 2094 0a40 17050000 		lla	a0,.LC2
 2094      13050500 
 2095 0a48 97000000 		call	_Z12kprintStringPKc
 2095      E7800000 
 2096              	.LVL191:
 267:src/kernel/interrupt/interrupt_cpp.cpp ****             KCHECKPRINT(sepc);
 2097              		.loc 1 267 13
 2098 0a50 17050000 		lla	a0,.LC3
 2098      13050500 
 2099 0a58 97000000 		call	_Z12kprintStringPKc
 2099      E7800000 
 2100              	.LVL192:
GAS LISTING /tmp/ccBdKcG0.s 			page 56


 267:src/kernel/interrupt/interrupt_cpp.cpp ****             KCHECKPRINT(sepc);
 2101              		.loc 1 267 13
 2102 0a60 13060000 		li	a2,0
 2103 0a64 93050001 		li	a1,16
 2104 0a68 13050A00 		mv	a0,s4
 2105 0a6c 97000000 		call	_Z9kprintIntmib
 2105      E7800000 
 2106              	.LVL193:
 267:src/kernel/interrupt/interrupt_cpp.cpp ****             KCHECKPRINT(sepc);
 2107              		.loc 1 267 13
 2108 0a74 17050000 		lla	a0,.LC2
 2108      13050500 
 2109 0a7c 97000000 		call	_Z12kprintStringPKc
 2109      E7800000 
 2110              	.LVL194:
 268:src/kernel/interrupt/interrupt_cpp.cpp ****             KCHECKPRINT(stval);
 2111              		.loc 1 268 13
 2112 0a84 17050000 		lla	a0,.LC4
 2112      13050500 
 2113 0a8c 97000000 		call	_Z12kprintStringPKc
 2113      E7800000 
 2114              	.LVL195:
 268:src/kernel/interrupt/interrupt_cpp.cpp ****             KCHECKPRINT(stval);
 2115              		.loc 1 268 13
 2116 0a94 13060000 		li	a2,0
 2117 0a98 93050001 		li	a1,16
 2118 0a9c 13850900 		mv	a0,s3
 2119 0aa0 97000000 		call	_Z9kprintIntmib
 2119      E7800000 
 2120              	.LVL196:
 268:src/kernel/interrupt/interrupt_cpp.cpp ****             KCHECKPRINT(stval);
 2121              		.loc 1 268 13
 2122 0aa8 17050000 		lla	a0,.LC2
 2122      13050500 
 2123 0ab0 97000000 		call	_Z12kprintStringPKc
 2123      E7800000 
 2124              	.LVL197:
 269:src/kernel/interrupt/interrupt_cpp.cpp ****             kprintString("PAGE FAULT\n");
 2125              		.loc 1 269 13
 269:src/kernel/interrupt/interrupt_cpp.cpp ****             kprintString("PAGE FAULT\n");
 2126              		.loc 1 269 25 is_stmt 0
 2127 0ab8 17050000 		lla	a0,.LC5
 2127      13050500 
 2128 0ac0 97000000 		call	_Z12kprintStringPKc
 2128      E7800000 
 2129              	.LVL198:
 2130              	.L87:
 270:src/kernel/interrupt/interrupt_cpp.cpp ****             while(true);
 2131              		.loc 1 270 13 is_stmt 1 discriminator 1
 2132 0ac8 6F000000 		j	.L87
 2133              	.LVL199:
 2134              	.L86:
 2135              	.LBB490:
 273:src/kernel/interrupt/interrupt_cpp.cpp ****             MemoryAllocator& allocator = MemoryAllocator::getInstance();
 2136              		.loc 1 273 13
 273:src/kernel/interrupt/interrupt_cpp.cpp ****             MemoryAllocator& allocator = MemoryAllocator::getInstance();
 2137              		.loc 1 273 71 is_stmt 0
GAS LISTING /tmp/ccBdKcG0.s 			page 57


 2138 0acc 97000000 		call	_ZN15MemoryAllocator11getInstanceEv
 2138      E7800000 
 2139              	.LVL200:
 274:src/kernel/interrupt/interrupt_cpp.cpp ****             FreeSegment* fs = allocator.getFreeSegmentMeta((void*)stval);
 2140              		.loc 1 274 13 is_stmt 1
 274:src/kernel/interrupt/interrupt_cpp.cpp ****             FreeSegment* fs = allocator.getFreeSegmentMeta((void*)stval);
 2141              		.loc 1 274 59 is_stmt 0
 2142 0ad4 93850900 		mv	a1,s3
 2143 0ad8 97000000 		call	_ZN15MemoryAllocator18getFreeSegmentMetaEPv
 2143      E7800000 
 2144              	.LVL201:
 2145 0ae0 13090500 		mv	s2,a0
 2146              	.LVL202:
 276:src/kernel/interrupt/interrupt_cpp.cpp ****             if(fs){
 2147              		.loc 1 276 13 is_stmt 1
 2148 0ae4 63040502 		beq	a0,zero,.L88
 277:src/kernel/interrupt/interrupt_cpp.cpp ****                 Pager::getInstance().id_map(
 2149              		.loc 1 277 17
 277:src/kernel/interrupt/interrupt_cpp.cpp ****                 Pager::getInstance().id_map(
 2150              		.loc 1 277 36 is_stmt 0
 2151 0ae8 97000000 		call	_ZN5Pager11getInstanceEv
 2151      E7800000 
 2152              	.LVL203:
 277:src/kernel/interrupt/interrupt_cpp.cpp ****                 Pager::getInstance().id_map(
 2153              		.loc 1 277 44
 2154 0af0 83350901 		ld	a1,16(s2)
 279:src/kernel/interrupt/interrupt_cpp.cpp ****                     (char*)fs->addr+fs->size, 
 2155              		.loc 1 279 41
 2156 0af4 03368900 		ld	a2,8(s2)
 277:src/kernel/interrupt/interrupt_cpp.cpp ****                 Pager::getInstance().id_map(
 2157              		.loc 1 277 44
 2158 0af8 93066001 		li	a3,22
 2159 0afc 3386C500 		add	a2,a1,a2
 2160 0b00 97000000 		call	_ZN5Pager6id_mapEPvS0_12PMTEntryBits
 2160      E7800000 
 2161              	.LVL204:
 2162              	.LBE490:
 2163              	.LBE489:
 2164              	.LBE482:
 290:src/kernel/interrupt/interrupt_cpp.cpp ****         }
 2165              		.loc 1 290 9
 2166 0b08 6FF09FE6 		j	.L77
 2167              	.LVL205:
 2168              	.L88:
 2169              	.LBB493:
 2170              	.LBB492:
 2171              	.LBB491:
 284:src/kernel/interrupt/interrupt_cpp.cpp ****                 KCHECKPRINT(scause);
 2172              		.loc 1 284 17 is_stmt 1
 2173 0b0c 17050000 		lla	a0,.LC1
 2173      13050500 
 2174              	.LVL206:
 2175 0b14 97000000 		call	_Z12kprintStringPKc
 2175      E7800000 
 2176              	.LVL207:
 284:src/kernel/interrupt/interrupt_cpp.cpp ****                 KCHECKPRINT(scause);
 2177              		.loc 1 284 17
GAS LISTING /tmp/ccBdKcG0.s 			page 58


 2178 0b1c 13060000 		li	a2,0
 2179 0b20 93050001 		li	a1,16
 2180 0b24 13850400 		mv	a0,s1
 2181 0b28 97000000 		call	_Z9kprintIntmib
 2181      E7800000 
 2182              	.LVL208:
 284:src/kernel/interrupt/interrupt_cpp.cpp ****                 KCHECKPRINT(scause);
 2183              		.loc 1 284 17
 2184 0b30 17050000 		lla	a0,.LC2
 2184      13050500 
 2185 0b38 97000000 		call	_Z12kprintStringPKc
 2185      E7800000 
 2186              	.LVL209:
 285:src/kernel/interrupt/interrupt_cpp.cpp ****                 KCHECKPRINT(sepc);
 2187              		.loc 1 285 17
 2188 0b40 17050000 		lla	a0,.LC3
 2188      13050500 
 2189 0b48 97000000 		call	_Z12kprintStringPKc
 2189      E7800000 
 2190              	.LVL210:
 285:src/kernel/interrupt/interrupt_cpp.cpp ****                 KCHECKPRINT(sepc);
 2191              		.loc 1 285 17
 2192 0b50 13060000 		li	a2,0
 2193 0b54 93050001 		li	a1,16
 2194 0b58 13050A00 		mv	a0,s4
 2195 0b5c 97000000 		call	_Z9kprintIntmib
 2195      E7800000 
 2196              	.LVL211:
 285:src/kernel/interrupt/interrupt_cpp.cpp ****                 KCHECKPRINT(sepc);
 2197              		.loc 1 285 17
 2198 0b64 17050000 		lla	a0,.LC2
 2198      13050500 
 2199 0b6c 97000000 		call	_Z12kprintStringPKc
 2199      E7800000 
 2200              	.LVL212:
 286:src/kernel/interrupt/interrupt_cpp.cpp ****                 KCHECKPRINT(stval);
 2201              		.loc 1 286 17
 2202 0b74 17050000 		lla	a0,.LC4
 2202      13050500 
 2203 0b7c 97000000 		call	_Z12kprintStringPKc
 2203      E7800000 
 2204              	.LVL213:
 286:src/kernel/interrupt/interrupt_cpp.cpp ****                 KCHECKPRINT(stval);
 2205              		.loc 1 286 17
 2206 0b84 13060000 		li	a2,0
 2207 0b88 93050001 		li	a1,16
 2208 0b8c 13850900 		mv	a0,s3
 2209 0b90 97000000 		call	_Z9kprintIntmib
 2209      E7800000 
 2210              	.LVL214:
 286:src/kernel/interrupt/interrupt_cpp.cpp ****                 KCHECKPRINT(stval);
 2211              		.loc 1 286 17
 2212 0b98 17050000 		lla	a0,.LC2
 2212      13050500 
 2213 0ba0 97000000 		call	_Z12kprintStringPKc
 2213      E7800000 
 2214              	.LVL215:
GAS LISTING /tmp/ccBdKcG0.s 			page 59


 2215              	.L89:
 287:src/kernel/interrupt/interrupt_cpp.cpp ****                 while(true);
 2216              		.loc 1 287 17 discriminator 2
 2217 0ba8 6F000000 		j	.L89
 2218              	.LVL216:
 2219              	.L92:
 2220              	.LBE491:
 2221              	.LBE492:
 2222              	.LBE493:
 2223              	.LBB494:
 2224              	.LBB480:
 309:src/kernel/interrupt/interrupt_cpp.cpp ****             kprintString("\nFATAL KERNEL ERROR: unauthorised access prompted!!\n");
 2225              		.loc 1 309 13
 309:src/kernel/interrupt/interrupt_cpp.cpp ****             kprintString("\nFATAL KERNEL ERROR: unauthorised access prompted!!\n");
 2226              		.loc 1 309 25 is_stmt 0
 2227 0bac 17050000 		lla	a0,.LC11
 2227      13050500 
 2228              	.LVL217:
 2229 0bb4 97000000 		call	_Z12kprintStringPKc
 2229      E7800000 
 2230              	.LVL218:
 310:src/kernel/interrupt/interrupt_cpp.cpp ****             TCB::panicDispatch();
 2231              		.loc 1 310 13 is_stmt 1
 310:src/kernel/interrupt/interrupt_cpp.cpp ****             TCB::panicDispatch();
 2232              		.loc 1 310 31 is_stmt 0
 2233 0bbc 97000000 		call	_ZN3TCB13panicDispatchEv
 2233      E7800000 
 2234              	.LVL219:
 2235 0bc4 6FF0DFDA 		j	.L77
 2236              	.LVL220:
 2237              	.L91:
 2238              	.LBE480:
 314:src/kernel/interrupt/interrupt_cpp.cpp ****         KCHECKPRINT(scause);
 2239              		.loc 1 314 9 is_stmt 1
 2240 0bc8 17050000 		lla	a0,.LC1
 2240      13050500 
 2241              	.LVL221:
 2242 0bd0 97000000 		call	_Z12kprintStringPKc
 2242      E7800000 
 2243              	.LVL222:
 314:src/kernel/interrupt/interrupt_cpp.cpp ****         KCHECKPRINT(scause);
 2244              		.loc 1 314 9
 2245 0bd8 13060000 		li	a2,0
 2246 0bdc 93050001 		li	a1,16
 2247 0be0 13850400 		mv	a0,s1
 2248 0be4 97000000 		call	_Z9kprintIntmib
 2248      E7800000 
 2249              	.LVL223:
 314:src/kernel/interrupt/interrupt_cpp.cpp ****         KCHECKPRINT(scause);
 2250              		.loc 1 314 9
 2251 0bec 17050000 		lla	a0,.LC2
 2251      13050500 
 2252 0bf4 97000000 		call	_Z12kprintStringPKc
 2252      E7800000 
 2253              	.LVL224:
 315:src/kernel/interrupt/interrupt_cpp.cpp ****         kprintString("GRESKA\n");
 2254              		.loc 1 315 9
GAS LISTING /tmp/ccBdKcG0.s 			page 60


 315:src/kernel/interrupt/interrupt_cpp.cpp ****         kprintString("GRESKA\n");
 2255              		.loc 1 315 21 is_stmt 0
 2256 0bfc 17050000 		lla	a0,.LC12
 2256      13050500 
 2257 0c04 97000000 		call	_Z12kprintStringPKc
 2257      E7800000 
 2258              	.LVL225:
 2259              	.L93:
 316:src/kernel/interrupt/interrupt_cpp.cpp ****         while(1);
 2260              		.loc 1 316 9 is_stmt 1 discriminator 3
 2261 0c0c 6F000000 		j	.L93
 2262              	.LBE494:
 2263              	.LBE503:
 2264              	.LBE507:
 2265              	.LBE512:
 2266              	.LBE518:
 2267              	.LBE525:
 2268              	.LBE533:
 2269              		.cfi_endproc
 2270              	.LFE116:
 2272              		.section	.rodata.str1.8,"aMS",@progbits,1
 2273              		.align	3
 2274              	.LC0:
 2275 0000 4B53656D 		.string	"KSemaphore_cache"
 2275      6170686F 
 2275      72655F63 
 2275      61636865 
 2275      00
 2276 0011 00000000 		.zero	7
 2276      000000
 2277              	.LC1:
 2278 0018 73636175 		.string	"scause: "
 2278      73653A20 
 2278      00
 2279 0021 00000000 		.zero	7
 2279      000000
 2280              	.LC2:
 2281 0028 0A00     		.string	"\n"
 2282 002a 00000000 		.zero	6
 2282      0000
 2283              	.LC3:
 2284 0030 73657063 		.string	"sepc: "
 2284      3A2000
 2285 0037 00       		.zero	1
 2286              	.LC4:
 2287 0038 73747661 		.string	"stval: "
 2287      6C3A2000 
 2288              	.LC5:
 2289 0040 50414745 		.string	"PAGE FAULT\n"
 2289      20464155 
 2289      4C540A00 
 2290 004c 00000000 		.zero	4
 2291              	.LC6:
 2292 0050 0A455252 		.string	"\nERROR: Thread stopped due to unauthorised access!!\n"
 2292      4F523A20 
 2292      54687265 
 2292      61642073 
GAS LISTING /tmp/ccBdKcG0.s 			page 61


 2292      746F7070 
 2293 0085 000000   		.zero	3
 2294              	.LC7:
 2295 0088 53434155 		.string	"SCAUSE: "
 2295      53453A20 
 2295      00
 2296 0091 00000000 		.zero	7
 2296      000000
 2297              	.LC8:
 2298 0098 53455043 		.string	"SEPC: "
 2298      3A2000
 2299 009f 00       		.zero	1
 2300              	.LC9:
 2301 00a0 53545641 		.string	"STVAL: "
 2301      4C3A2000 
 2302              	.LC10:
 2303 00a8 0A0A00   		.string	"\n\n"
 2304 00ab 00000000 		.zero	5
 2304      00
 2305              	.LC11:
 2306 00b0 0A464154 		.string	"\nFATAL KERNEL ERROR: unauthorised access prompted!!\n"
 2306      414C204B 
 2306      45524E45 
 2306      4C204552 
 2306      524F523A 
 2307 00e5 000000   		.zero	3
 2308              	.LC12:
 2309 00e8 47524553 		.string	"GRESKA\n"
 2309      4B410A00 
 2310              		.text
 2311              	.Letext0:
 2312              		.file 7 "src/kernel/interrupt/../../../h/../h/../lib/hw.h"
 2313              		.file 8 "src/kernel/interrupt/../../../h/../h/../h/../h/list.h"
 2314              		.file 9 "src/kernel/interrupt/../../../h/../h/../h/object_cache.h"
 2315              		.file 10 "src/kernel/interrupt/../../../h/../h/slab_allocator.h"
 2316              		.file 11 "src/kernel/interrupt/../../../h/../h/../h/memory_allocator.hpp"
 2317              		.file 12 "src/kernel/interrupt/../../../h/../h/stdio.hpp"
 2318              		.file 13 "src/kernel/interrupt/../../../h/../h/scheduler.hpp"
 2319              		.file 14 "src/kernel/interrupt/../../../h/../h/pmt.h"
 2320              		.file 15 "src/kernel/interrupt/../../../h/../h/pager.h"
 2321              		.file 16 "src/kernel/interrupt/../../../h/kernel_lib.h"
 2322              		.file 17 "src/kernel/interrupt/../../../h/../h/kernel_funs.h"
 13460              		.align	3
 13463              	DW.ref.__gxx_personality_v0:
 13464 0000 00000000 		.dword	__gxx_personality_v0
 13464      00000000 
 13465              		.ident	"GCC: () 8.3.0"
GAS LISTING /tmp/ccBdKcG0.s 			page 62


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interrupt_cpp.cpp
     /tmp/ccBdKcG0.s:12     .text:0000000000000000 _Z13timer_handlerv
     /tmp/ccBdKcG0.s:16     .text:0000000000000000 .L0 
     /tmp/ccBdKcG0.s:17     .text:0000000000000000 .L0 
     /tmp/ccBdKcG0.s:18     .text:0000000000000004 .L0 
     /tmp/ccBdKcG0.s:23     .text:0000000000000014 .L0 
     /tmp/ccBdKcG0.s:24     .text:0000000000000014 .L0 
     /tmp/ccBdKcG0.s:25     .text:0000000000000014 .L0 
     /tmp/ccBdKcG0.s:26     .text:0000000000000014 .L0 
     /tmp/ccBdKcG0.s:28     .text:0000000000000018 .L0 
     /tmp/ccBdKcG0.s:30     .text:0000000000000018 .L0 
     /tmp/ccBdKcG0.s:31     .text:0000000000000018 .L0 
     /tmp/ccBdKcG0.s:34     .text:0000000000000020 .L0 
     /tmp/ccBdKcG0.s:35     .text:0000000000000020 .L0 
     /tmp/ccBdKcG0.s:41     .text:0000000000000034 .L0 
     /tmp/ccBdKcG0.s:42     .text:0000000000000034 .L0 
     /tmp/ccBdKcG0.s:49     .text:0000000000000040 .L0 
     /tmp/ccBdKcG0.s:50     .text:0000000000000040 .L0 
     /tmp/ccBdKcG0.s:55     .text:0000000000000044 .L0 
     /tmp/ccBdKcG0.s:63     .text:0000000000000048 .L0 
     /tmp/ccBdKcG0.s:64     .text:0000000000000048 .L0 
     /tmp/ccBdKcG0.s:65     .text:0000000000000048 .L0 
     /tmp/ccBdKcG0.s:75     .text:0000000000000050 .L0 
     /tmp/ccBdKcG0.s:76     .text:0000000000000054 .L0 
     /tmp/ccBdKcG0.s:77     .text:0000000000000054 .L0 
     /tmp/ccBdKcG0.s:79     .text:0000000000000058 .L0 
     /tmp/ccBdKcG0.s:80     .text:0000000000000058 .L0 
     /tmp/ccBdKcG0.s:82     .text:000000000000005c .L0 
     /tmp/ccBdKcG0.s:84     .text:0000000000000060 .L0 
     /tmp/ccBdKcG0.s:86     .text:0000000000000064 .L0 
     /tmp/ccBdKcG0.s:89     .text:0000000000000068 .L0 
     /tmp/ccBdKcG0.s:95     .text:0000000000000068 .L0 
     /tmp/ccBdKcG0.s:96     .text:0000000000000068 .L0 
     /tmp/ccBdKcG0.s:97     .text:0000000000000068 .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:220    .text:0000000000000068 .L0 
     /tmp/ccBdKcG0.s:105    .text:0000000000000070 .L0 
     /tmp/ccBdKcG0.s:106    .text:0000000000000070 .L0 
     /tmp/ccBdKcG0.s:113    .text:0000000000000074 .L0 
     /tmp/ccBdKcG0.s:114    .text:0000000000000074 .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:146    .text:0000000000000074 .L0 
     /tmp/ccBdKcG0.s:122    .text:000000000000007c .L0 
     /tmp/ccBdKcG0.s:123    .text:000000000000007c .L0 
     /tmp/ccBdKcG0.s:128    .text:0000000000000080 .L0 
     /tmp/ccBdKcG0.s:129    .text:0000000000000080 .L0 
     /tmp/ccBdKcG0.s:131    .text:0000000000000088 .L0 
     /tmp/ccBdKcG0.s:132    .text:0000000000000088 .L0 
     /tmp/ccBdKcG0.s:137    .text:0000000000000090 .L0 
     /tmp/ccBdKcG0.s:138    .text:0000000000000090 .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:215    .text:0000000000000090 .L0 
     /tmp/ccBdKcG0.s:150    .text:0000000000000094 .L0 
     /tmp/ccBdKcG0.s:151    .text:0000000000000094 .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:141    .text:0000000000000094 .L0 
     /tmp/ccBdKcG0.s:162    .text:000000000000009c .L0 
     /tmp/ccBdKcG0.s:168    .text:000000000000009c _Z8usrEcallmmmmm
     /tmp/ccBdKcG0.s:171    .text:000000000000009c .L0 
     /tmp/ccBdKcG0.s:13463  .sdata.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
GAS LISTING /tmp/ccBdKcG0.s 			page 63


     /tmp/ccBdKcG0.s:175    .text:000000000000009c .L0 
     /tmp/ccBdKcG0.s:176    .text:00000000000000a0 .L0 
     /tmp/ccBdKcG0.s:185    .text:00000000000000c0 .L0 
     /tmp/ccBdKcG0.s:186    .text:00000000000000c0 .L0 
     /tmp/ccBdKcG0.s:187    .text:00000000000000c0 .L0 
     /tmp/ccBdKcG0.s:188    .text:00000000000000c0 .L0 
     /tmp/ccBdKcG0.s:189    .text:00000000000000c0 .L0 
     /tmp/ccBdKcG0.s:190    .text:00000000000000c0 .L0 
     /tmp/ccBdKcG0.s:191    .text:00000000000000c0 .L0 
     /tmp/ccBdKcG0.s:192    .text:00000000000000c0 .L0 
     /tmp/ccBdKcG0.s:194    .text:00000000000000c4 .L0 
     /tmp/ccBdKcG0.s:199    .text:00000000000000c8 .L0 
     /tmp/ccBdKcG0.s:200    .text:00000000000000c8 .L0 
     /tmp/ccBdKcG0.s:201    .text:00000000000000c8 .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:146    .text:00000000000000c8 .L0 
     /tmp/ccBdKcG0.s:209    .text:00000000000000d0 .L0 
     /tmp/ccBdKcG0.s:210    .text:00000000000000d0 .L0 
     /tmp/ccBdKcG0.s:214    .text:00000000000000d4 .L0 
     /tmp/ccBdKcG0.s:219    .text:00000000000000d8 .L0 
     /tmp/ccBdKcG0.s:220    .text:00000000000000d8 .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:220    .text:00000000000000d8 .L0 
     /tmp/ccBdKcG0.s:228    .text:00000000000000e0 .L0 
     /tmp/ccBdKcG0.s:229    .text:00000000000000e0 .L0 
     /tmp/ccBdKcG0.s:235    .text:00000000000000e4 .L0 
     /tmp/ccBdKcG0.s:243    .text:00000000000000f4 .L0 
     /tmp/ccBdKcG0.s:251    .text:00000000000000fc .L0 
     /tmp/ccBdKcG0.s:261    .text:0000000000000104 .L0 
     /tmp/ccBdKcG0.s:273    .text:000000000000010c .L0 
     /tmp/ccBdKcG0.s:287    .text:0000000000000114 .L0 
     /tmp/ccBdKcG0.s:303    .text:000000000000011c .L0 
     /tmp/ccBdKcG0.s:321    .text:0000000000000124 .L0 
     /tmp/ccBdKcG0.s:341    .text:000000000000012c .L0 
     /tmp/ccBdKcG0.s:363    .text:0000000000000134 .L0 
     /tmp/ccBdKcG0.s:366    .text:000000000000013c .L0 
     /tmp/ccBdKcG0.s:369    .text:0000000000000144 .L0 
     /tmp/ccBdKcG0.s:372    .text:000000000000014c .L0 
     /tmp/ccBdKcG0.s:375    .text:0000000000000154 .L0 
     /tmp/ccBdKcG0.s:376    .text:0000000000000154 .L0 
     /tmp/ccBdKcG0.s:384    .text:0000000000000164 .L0 
     /tmp/ccBdKcG0.s:390    .text:0000000000000170 .L0 
     /tmp/ccBdKcG0.s:395    .text:0000000000000180 .L0 
     /tmp/ccBdKcG0.s:399    .text:000000000000018c .L0 
     /tmp/ccBdKcG0.s:401    .text:0000000000000190 .L0 
     /tmp/ccBdKcG0.s:404    .text:0000000000000198 .L0 
     /tmp/ccBdKcG0.s:406    .text:000000000000019c .L0 
     /tmp/ccBdKcG0.s:412    .text:00000000000001b0 .L0 
     /tmp/ccBdKcG0.s:414    .text:00000000000001b4 .L0 
     /tmp/ccBdKcG0.s:418    .text:00000000000001c0 .L0 
     /tmp/ccBdKcG0.s:436    .text:00000000000001d0 .L0 
     /tmp/ccBdKcG0.s:437    .text:00000000000001d0 .L0 
     /tmp/ccBdKcG0.s:440    .text:00000000000001d8 .L0 
     /tmp/ccBdKcG0.s:450    .text:00000000000001e8 .L0 
     /tmp/ccBdKcG0.s:451    .text:00000000000001e8 .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:215    .text:00000000000001e8 .L0 
     /tmp/ccBdKcG0.s:463    .text:00000000000001ec .L0 
     /tmp/ccBdKcG0.s:464    .text:00000000000001ec .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:141    .text:00000000000001ec .L0 
GAS LISTING /tmp/ccBdKcG0.s 			page 64


     /tmp/ccBdKcG0.s:474    .text:00000000000001f0 .L0 
     /tmp/ccBdKcG0.s:475    .text:00000000000001f0 .L0 
     /tmp/ccBdKcG0.s:477    .text:00000000000001f8 .L0 
     /tmp/ccBdKcG0.s:478    .text:00000000000001f8 .L0 
     /tmp/ccBdKcG0.s:480    .text:00000000000001fc .L0 
     /tmp/ccBdKcG0.s:481    .text:00000000000001fc .L0 
     /tmp/ccBdKcG0.s:483    .text:0000000000000200 .L0 
     /tmp/ccBdKcG0.s:486    .text:0000000000000204 .L0 
     /tmp/ccBdKcG0.s:489    .text:0000000000000208 .L0 
     /tmp/ccBdKcG0.s:492    .text:000000000000020c .L0 
     /tmp/ccBdKcG0.s:494    .text:0000000000000210 .L0 
     /tmp/ccBdKcG0.s:496    .text:0000000000000214 .L0 
     /tmp/ccBdKcG0.s:498    .text:0000000000000218 .L0 
     /tmp/ccBdKcG0.s:502    .text:000000000000021c .L0 
     /tmp/ccBdKcG0.s:506    .text:000000000000021c .L0 
     /tmp/ccBdKcG0.s:507    .text:000000000000021c .L0 
     /tmp/ccBdKcG0.s:510    .text:0000000000000224 .L0 
     /tmp/ccBdKcG0.s:514    .text:0000000000000230 .L0 
     /tmp/ccBdKcG0.s:522    .text:0000000000000238 .L0 
     /tmp/ccBdKcG0.s:523    .text:0000000000000238 .L0 
     /tmp/ccBdKcG0.s:524    .text:0000000000000238 .L0 
     /tmp/ccBdKcG0.s:532    .text:000000000000024c .L0 
     /tmp/ccBdKcG0.s:534    .text:0000000000000250 .L0 
     /tmp/ccBdKcG0.s:536    .text:0000000000000254 .L0 
     /tmp/ccBdKcG0.s:542    .text:000000000000025c .L0 
     /tmp/ccBdKcG0.s:550    .text:0000000000000264 .L0 
     /tmp/ccBdKcG0.s:551    .text:0000000000000264 .L0 
     /tmp/ccBdKcG0.s:557    .text:0000000000000270 .L0 
     /tmp/ccBdKcG0.s:558    .text:0000000000000270 .L0 
     /tmp/ccBdKcG0.s:565    .text:0000000000000278 .L0 
     /tmp/ccBdKcG0.s:566    .text:0000000000000278 .L0 
     /tmp/ccBdKcG0.s:573    .text:0000000000000284 .L0 
     /tmp/ccBdKcG0.s:574    .text:0000000000000284 .L0 
     /tmp/ccBdKcG0.s:576    .text:000000000000028c .L0 
     /tmp/ccBdKcG0.s:577    .text:000000000000028c .L0 
     /tmp/ccBdKcG0.s:584    .text:0000000000000298 .L0 
     /tmp/ccBdKcG0.s:585    .text:0000000000000298 .L0 
     /tmp/ccBdKcG0.s:594    .text:00000000000002a8 .L0 
     /tmp/ccBdKcG0.s:598    .text:00000000000002a8 .L0 
     /tmp/ccBdKcG0.s:599    .text:00000000000002a8 .L0 
     /tmp/ccBdKcG0.s:605    .text:00000000000002b8 .L0 
     /tmp/ccBdKcG0.s:614    .text:00000000000002cc .L0 
     /tmp/ccBdKcG0.s:620    .text:00000000000002d0 .L0 
     /tmp/ccBdKcG0.s:627    .text:00000000000002dc .L0 
     /tmp/ccBdKcG0.s:628    .text:00000000000002dc .L0 
     /tmp/ccBdKcG0.s:632    .text:00000000000002ec .L0 
     /tmp/ccBdKcG0.s:633    .text:00000000000002ec .L0 
     /tmp/ccBdKcG0.s:638    .text:00000000000002f0 .L0 
     /tmp/ccBdKcG0.s:640    .text:00000000000002f4 .L0 
     /tmp/ccBdKcG0.s:642    .text:00000000000002f4 .L0 
     /tmp/ccBdKcG0.s:643    .text:00000000000002f4 .L0 
     /tmp/ccBdKcG0.s:650    .text:00000000000002fc .L0 
     /tmp/ccBdKcG0.s:684    .text:0000000000000354 .L0 
     /tmp/ccBdKcG0.s:685    .text:0000000000000354 .L0 
     /tmp/ccBdKcG0.s:686    .text:0000000000000354 .L0 
     /tmp/ccBdKcG0.s:690    .text:0000000000000360 .L0 
     /tmp/ccBdKcG0.s:699    .text:0000000000000368 .L0 
GAS LISTING /tmp/ccBdKcG0.s 			page 65


     /tmp/ccBdKcG0.s:700    .text:0000000000000368 .L0 
     /tmp/ccBdKcG0.s:701    .text:0000000000000368 .L0 
     /tmp/ccBdKcG0.s:705    .text:0000000000000374 .L0 
     /tmp/ccBdKcG0.s:707    .text:0000000000000378 .L0 
     /tmp/ccBdKcG0.s:713    .text:0000000000000380 .L0 
     /tmp/ccBdKcG0.s:714    .text:0000000000000380 .L0 
     /tmp/ccBdKcG0.s:718    .text:000000000000038c .L0 
     /tmp/ccBdKcG0.s:727    .text:0000000000000394 .L0 
     /tmp/ccBdKcG0.s:728    .text:0000000000000394 .L0 
     /tmp/ccBdKcG0.s:729    .text:0000000000000394 .L0 
     /tmp/ccBdKcG0.s:733    .text:00000000000003a0 .L0 
     /tmp/ccBdKcG0.s:735    .text:00000000000003a4 .L0 
     /tmp/ccBdKcG0.s:741    .text:00000000000003ac .L0 
     /tmp/ccBdKcG0.s:742    .text:00000000000003ac .L0 
     /tmp/ccBdKcG0.s:746    .text:00000000000003b8 .L0 
     /tmp/ccBdKcG0.s:753    .text:00000000000003c0 .L0 
     /tmp/ccBdKcG0.s:754    .text:00000000000003c0 .L0 
     /tmp/ccBdKcG0.s:761    .text:00000000000003d0 .L0 
     /tmp/ccBdKcG0.s:762    .text:00000000000003d0 .L0 
     /tmp/ccBdKcG0.s:768    .text:00000000000003dc .L0 
     /tmp/ccBdKcG0.s:772    .text:00000000000003e8 .L0 
     /tmp/ccBdKcG0.s:778    .text:00000000000003f8 .L0 
     /tmp/ccBdKcG0.s:782    .text:0000000000000404 .L0 
     /tmp/ccBdKcG0.s:784    .text:0000000000000408 .L0 
     /tmp/ccBdKcG0.s:788    .text:0000000000000410 .L0 
     /tmp/ccBdKcG0.s:790    .text:0000000000000414 .L0 
     /tmp/ccBdKcG0.s:796    .text:0000000000000428 .L0 
     /tmp/ccBdKcG0.s:798    .text:000000000000042c .L0 
     /tmp/ccBdKcG0.s:802    .text:0000000000000438 .L0 
     /tmp/ccBdKcG0.s:819    .text:0000000000000448 .L0 
     /tmp/ccBdKcG0.s:845    .text:0000000000000448 _Z8sysEcallmmmmm
     /tmp/ccBdKcG0.s:848    .text:0000000000000448 .L0 
     /tmp/ccBdKcG0.s:852    .text:0000000000000448 .L0 
     /tmp/ccBdKcG0.s:853    .text:000000000000044c .L0 
     /tmp/ccBdKcG0.s:861    .text:0000000000000468 .L0 
     /tmp/ccBdKcG0.s:862    .text:0000000000000468 .L0 
     /tmp/ccBdKcG0.s:863    .text:0000000000000468 .L0 
     /tmp/ccBdKcG0.s:864    .text:0000000000000468 .L0 
     /tmp/ccBdKcG0.s:865    .text:0000000000000468 .L0 
     /tmp/ccBdKcG0.s:866    .text:0000000000000468 .L0 
     /tmp/ccBdKcG0.s:867    .text:0000000000000468 .L0 
     /tmp/ccBdKcG0.s:869    .text:000000000000046c .L0 
     /tmp/ccBdKcG0.s:874    .text:0000000000000470 .L0 
     /tmp/ccBdKcG0.s:875    .text:0000000000000470 .L0 
     /tmp/ccBdKcG0.s:876    .text:0000000000000470 .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:146    .text:0000000000000470 .L0 
     /tmp/ccBdKcG0.s:884    .text:0000000000000478 .L0 
     /tmp/ccBdKcG0.s:885    .text:0000000000000478 .L0 
     /tmp/ccBdKcG0.s:889    .text:000000000000047c .L0 
     /tmp/ccBdKcG0.s:894    .text:0000000000000480 .L0 
     /tmp/ccBdKcG0.s:895    .text:0000000000000480 .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:220    .text:0000000000000480 .L0 
     /tmp/ccBdKcG0.s:903    .text:0000000000000488 .L0 
     /tmp/ccBdKcG0.s:904    .text:0000000000000488 .L0 
     /tmp/ccBdKcG0.s:910    .text:000000000000048c .L0 
     /tmp/ccBdKcG0.s:918    .text:000000000000049c .L0 
     /tmp/ccBdKcG0.s:926    .text:00000000000004a4 .L0 
GAS LISTING /tmp/ccBdKcG0.s 			page 66


     /tmp/ccBdKcG0.s:936    .text:00000000000004ac .L0 
     /tmp/ccBdKcG0.s:948    .text:00000000000004b4 .L0 
     /tmp/ccBdKcG0.s:962    .text:00000000000004bc .L0 
     /tmp/ccBdKcG0.s:978    .text:00000000000004c4 .L0 
     /tmp/ccBdKcG0.s:996    .text:00000000000004cc .L0 
     /tmp/ccBdKcG0.s:1016   .text:00000000000004d4 .L0 
     /tmp/ccBdKcG0.s:1038   .text:00000000000004dc .L0 
     /tmp/ccBdKcG0.s:1041   .text:00000000000004e4 .L0 
     /tmp/ccBdKcG0.s:1044   .text:00000000000004ec .L0 
     /tmp/ccBdKcG0.s:1047   .text:00000000000004f4 .L0 
     /tmp/ccBdKcG0.s:1050   .text:00000000000004fc .L0 
     /tmp/ccBdKcG0.s:1051   .text:00000000000004fc .L0 
     /tmp/ccBdKcG0.s:1059   .text:000000000000050c .L0 
     /tmp/ccBdKcG0.s:1065   .text:0000000000000518 .L0 
     /tmp/ccBdKcG0.s:1071   .text:0000000000000528 .L0 
     /tmp/ccBdKcG0.s:1075   .text:0000000000000534 .L0 
     /tmp/ccBdKcG0.s:1077   .text:0000000000000538 .L0 
     /tmp/ccBdKcG0.s:1080   .text:0000000000000540 .L0 
     /tmp/ccBdKcG0.s:1082   .text:0000000000000544 .L0 
     /tmp/ccBdKcG0.s:1088   .text:0000000000000558 .L0 
     /tmp/ccBdKcG0.s:1090   .text:000000000000055c .L0 
     /tmp/ccBdKcG0.s:1094   .text:0000000000000568 .L0 
     /tmp/ccBdKcG0.s:1110   .text:0000000000000574 .L0 
     /tmp/ccBdKcG0.s:1116   .text:000000000000057c .L0 
     /tmp/ccBdKcG0.s:1117   .text:000000000000057c .L0 
     /tmp/ccBdKcG0.s:1120   .text:0000000000000584 .L0 
     /tmp/ccBdKcG0.s:1128   .text:0000000000000590 .L0 
     /tmp/ccBdKcG0.s:1129   .text:0000000000000590 .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:141    .text:0000000000000590 .L0 
     /tmp/ccBdKcG0.s:1139   .text:0000000000000594 .L0 
     /tmp/ccBdKcG0.s:1140   .text:0000000000000594 .L0 
     /tmp/ccBdKcG0.s:1141   .text:0000000000000598 .L0 
     /tmp/ccBdKcG0.s:1142   .text:0000000000000598 .L0 
     /tmp/ccBdKcG0.s:1144   .text:000000000000059c .L0 
     /tmp/ccBdKcG0.s:1145   .text:000000000000059c .L0 
     /tmp/ccBdKcG0.s:1147   .text:00000000000005a0 .L0 
     /tmp/ccBdKcG0.s:1149   .text:00000000000005a4 .L0 
     /tmp/ccBdKcG0.s:1152   .text:00000000000005a8 .L0 
     /tmp/ccBdKcG0.s:1154   .text:00000000000005ac .L0 
     /tmp/ccBdKcG0.s:1156   .text:00000000000005b0 .L0 
     /tmp/ccBdKcG0.s:1158   .text:00000000000005b4 .L0 
     /tmp/ccBdKcG0.s:1162   .text:00000000000005b8 .L0 
     /tmp/ccBdKcG0.s:1166   .text:00000000000005b8 .L0 
     /tmp/ccBdKcG0.s:1167   .text:00000000000005b8 .L0 
     /tmp/ccBdKcG0.s:1170   .text:00000000000005c0 .L0 
     /tmp/ccBdKcG0.s:1179   .text:00000000000005d0 .L0 
     /tmp/ccBdKcG0.s:1180   .text:00000000000005d0 .L0 
     /tmp/ccBdKcG0.s:1181   .text:00000000000005d0 .L0 
     /tmp/ccBdKcG0.s:1189   .text:00000000000005e4 .L0 
     /tmp/ccBdKcG0.s:1191   .text:00000000000005e8 .L0 
     /tmp/ccBdKcG0.s:1193   .text:00000000000005ec .L0 
     /tmp/ccBdKcG0.s:1197   .text:00000000000005f4 .L0 
     /tmp/ccBdKcG0.s:1204   .text:00000000000005fc .L0 
     /tmp/ccBdKcG0.s:1205   .text:00000000000005fc .L0 
     /tmp/ccBdKcG0.s:1211   .text:0000000000000608 .L0 
     /tmp/ccBdKcG0.s:1212   .text:0000000000000608 .L0 
     /tmp/ccBdKcG0.s:1219   .text:0000000000000610 .L0 
GAS LISTING /tmp/ccBdKcG0.s 			page 67


     /tmp/ccBdKcG0.s:1220   .text:0000000000000610 .L0 
     /tmp/ccBdKcG0.s:1225   .text:0000000000000618 .L0 
     /tmp/ccBdKcG0.s:1226   .text:0000000000000618 .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:215    .text:0000000000000618 .L0 
     /tmp/ccBdKcG0.s:1239   .text:000000000000061c .L0 
     /tmp/ccBdKcG0.s:1249   .text:0000000000000624 .L0 
     /tmp/ccBdKcG0.s:1250   .text:0000000000000624 .L0 
     /tmp/ccBdKcG0.s:1252   .text:000000000000062c .L0 
     /tmp/ccBdKcG0.s:1253   .text:000000000000062c .L0 
     /tmp/ccBdKcG0.s:1258   .text:0000000000000634 .L0 
     /tmp/ccBdKcG0.s:1259   .text:0000000000000634 .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:215    .text:0000000000000634 .L0 
     /tmp/ccBdKcG0.s:1273   .text:0000000000000638 .L0 
     /tmp/ccBdKcG0.s:1284   .text:0000000000000640 .L0 
     /tmp/ccBdKcG0.s:1285   .text:0000000000000640 .L0 
     /tmp/ccBdKcG0.s:1295   .text:000000000000064c .L0 
     /tmp/ccBdKcG0.s:1308   .text:0000000000000654 .L0 
     /tmp/ccBdKcG0.s:1311   .text:0000000000000654 .L0 
     /tmp/ccBdKcG0.s:1312   .text:0000000000000654 .L0 
     /tmp/ccBdKcG0.s:1318   .text:0000000000000664 .L0 
     /tmp/ccBdKcG0.s:1327   .text:0000000000000678 .L0 
     /tmp/ccBdKcG0.s:1332   .text:000000000000067c .L0 
     /tmp/ccBdKcG0.s:1339   .text:0000000000000688 .L0 
     /tmp/ccBdKcG0.s:1340   .text:0000000000000688 .L0 
     /tmp/ccBdKcG0.s:1344   .text:0000000000000698 .L0 
     /tmp/ccBdKcG0.s:1345   .text:0000000000000698 .L0 
     /tmp/ccBdKcG0.s:1350   .text:000000000000069c .L0 
     /tmp/ccBdKcG0.s:1360   .text:00000000000006a0 .L0 
     /tmp/ccBdKcG0.s:1375   .text:00000000000006a8 .L0 
     /tmp/ccBdKcG0.s:1409   .text:0000000000000700 .L0 
     /tmp/ccBdKcG0.s:1410   .text:0000000000000700 .L0 
     /tmp/ccBdKcG0.s:1411   .text:0000000000000700 .L0 
     /tmp/ccBdKcG0.s:1413   .text:0000000000000704 .L0 
     /tmp/ccBdKcG0.s:1419   .text:0000000000000710 .L0 
     /tmp/ccBdKcG0.s:1436   .text:0000000000000728 .L0 
     /tmp/ccBdKcG0.s:1451   .text:0000000000000730 .L0 
     /tmp/ccBdKcG0.s:1452   .text:0000000000000730 .L0 
     /tmp/ccBdKcG0.s:1453   .text:0000000000000730 .L0 
     /tmp/ccBdKcG0.s:1459   .text:000000000000073c .L0 
     /tmp/ccBdKcG0.s:1460   .text:000000000000073c .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:215    .text:000000000000073c .L0 
     /tmp/ccBdKcG0.s:1475   .text:0000000000000744 .L0 
     /tmp/ccBdKcG0.s:1476   .text:0000000000000744 .L0 
     /tmp/ccBdKcG0.s:1477   .text:0000000000000744 .L0 
     /tmp/ccBdKcG0.s:1492   .text:0000000000000750 .L0 
     /tmp/ccBdKcG0.s:1507   .text:0000000000000758 .L0 
     /tmp/ccBdKcG0.s:1508   .text:0000000000000758 .L0 
     /tmp/ccBdKcG0.s:1514   .text:0000000000000764 .L0 
     /tmp/ccBdKcG0.s:1515   .text:0000000000000764 .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:215    .text:0000000000000764 .L0 
     /tmp/ccBdKcG0.s:1534   .text:0000000000000768 .L0 
     /tmp/ccBdKcG0.s:1549   .text:0000000000000770 .L0 
     /tmp/ccBdKcG0.s:1550   .text:0000000000000770 .L0 
     /tmp/ccBdKcG0.s:1556   .text:000000000000077c .L0 
     /tmp/ccBdKcG0.s:1560   .text:0000000000000788 .L0 
     /tmp/ccBdKcG0.s:1566   .text:0000000000000798 .L0 
     /tmp/ccBdKcG0.s:1570   .text:00000000000007a4 .L0 
GAS LISTING /tmp/ccBdKcG0.s 			page 68


     /tmp/ccBdKcG0.s:1572   .text:00000000000007a8 .L0 
     /tmp/ccBdKcG0.s:1576   .text:00000000000007b0 .L0 
     /tmp/ccBdKcG0.s:1578   .text:00000000000007b4 .L0 
     /tmp/ccBdKcG0.s:1584   .text:00000000000007c8 .L0 
     /tmp/ccBdKcG0.s:1586   .text:00000000000007cc .L0 
     /tmp/ccBdKcG0.s:1590   .text:00000000000007d8 .L0 
     /tmp/ccBdKcG0.s:1597   .text:00000000000007e4 .L0 
     /tmp/ccBdKcG0.s:1610   .text:00000000000007ec .L0 
     /tmp/ccBdKcG0.s:1635   .text:00000000000007ec interrupt
     /tmp/ccBdKcG0.s:1638   .text:00000000000007ec .L0 
     /tmp/ccBdKcG0.s:1640   .text:00000000000007ec .L0 
     /tmp/ccBdKcG0.s:1641   .text:00000000000007f0 .L0 
     /tmp/ccBdKcG0.s:1648   .text:0000000000000808 .L0 
     /tmp/ccBdKcG0.s:1649   .text:0000000000000808 .L0 
     /tmp/ccBdKcG0.s:1650   .text:0000000000000808 .L0 
     /tmp/ccBdKcG0.s:1651   .text:0000000000000808 .L0 
     /tmp/ccBdKcG0.s:1652   .text:0000000000000808 .L0 
     /tmp/ccBdKcG0.s:1653   .text:0000000000000808 .L0 
     /tmp/ccBdKcG0.s:1655   .text:000000000000080c .L0 
     /tmp/ccBdKcG0.s:1659   .text:000000000000080c .L0 
     /tmp/ccBdKcG0.s:1660   .text:000000000000080c .L0 
     /tmp/ccBdKcG0.s:1661   .text:000000000000080c .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:136    .text:000000000000080c .L0 
     /tmp/ccBdKcG0.s:1669   .text:0000000000000814 .L0 
     /tmp/ccBdKcG0.s:1670   .text:0000000000000814 .L0 
     /tmp/ccBdKcG0.s:1676   .text:0000000000000818 .L0 
     /tmp/ccBdKcG0.s:1682   .text:0000000000000820 .L0 
     /tmp/ccBdKcG0.s:1690   .text:0000000000000828 .L0 
     /tmp/ccBdKcG0.s:1702   .text:0000000000000838 .L0 
     /tmp/ccBdKcG0.s:1716   .text:0000000000000848 .L0 
     /tmp/ccBdKcG0.s:1730   .text:0000000000000850 .L0 
     /tmp/ccBdKcG0.s:1733   .text:0000000000000858 .L0 
     /tmp/ccBdKcG0.s:1749   .text:0000000000000860 .L0 
     /tmp/ccBdKcG0.s:1752   .text:0000000000000868 .L0 
     /tmp/ccBdKcG0.s:1755   .text:0000000000000870 .L0 
     /tmp/ccBdKcG0.s:1774   .text:0000000000000878 .L0 
     /tmp/ccBdKcG0.s:1775   .text:0000000000000878 .L0 
     /tmp/ccBdKcG0.s:1781   .text:0000000000000884 .L0 
     /tmp/ccBdKcG0.s:1782   .text:0000000000000884 .L0 
     /tmp/ccBdKcG0.s:1787   .text:0000000000000888 .L0 
     /tmp/ccBdKcG0.s:1790   .text:000000000000088c .L0 
     /tmp/ccBdKcG0.s:1791   .text:000000000000088c .L0 
src/kernel/interrupt/interrupt_cpp.cpp:299    .text:000000000000088c .L0 
     /tmp/ccBdKcG0.s:1798   .text:0000000000000890 .L0 
     /tmp/ccBdKcG0.s:1800   .text:0000000000000890 .L0 
     /tmp/ccBdKcG0.s:1805   .text:00000000000008a0 .L0 
     /tmp/ccBdKcG0.s:1806   .text:00000000000008a0 .L0 
     /tmp/ccBdKcG0.s:1810   .text:00000000000008b0 .L0 
     /tmp/ccBdKcG0.s:1811   .text:00000000000008b0 .L0 
     /tmp/ccBdKcG0.s:1817   .text:00000000000008c4 .L0 
     /tmp/ccBdKcG0.s:1818   .text:00000000000008c4 .L0 
     /tmp/ccBdKcG0.s:1822   .text:00000000000008d4 .L0 
     /tmp/ccBdKcG0.s:1823   .text:00000000000008d4 .L0 
     /tmp/ccBdKcG0.s:1829   .text:00000000000008e4 .L0 
     /tmp/ccBdKcG0.s:1830   .text:00000000000008e4 .L0 
     /tmp/ccBdKcG0.s:1831   .text:00000000000008e4 .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:146    .text:00000000000008e4 .L0 
GAS LISTING /tmp/ccBdKcG0.s 			page 69


     /tmp/ccBdKcG0.s:1839   .text:00000000000008ec .L0 
     /tmp/ccBdKcG0.s:1840   .text:00000000000008ec .L0 
     /tmp/ccBdKcG0.s:1844   .text:00000000000008f0 .L0 
     /tmp/ccBdKcG0.s:1849   .text:0000000000000900 .L0 
     /tmp/ccBdKcG0.s:1850   .text:0000000000000900 .L0 
     /tmp/ccBdKcG0.s:1854   .text:0000000000000910 .L0 
     /tmp/ccBdKcG0.s:1855   .text:0000000000000910 .L0 
     /tmp/ccBdKcG0.s:1859   .text:0000000000000920 .L0 
     /tmp/ccBdKcG0.s:1860   .text:0000000000000920 .L0 
     /tmp/ccBdKcG0.s:1866   .text:0000000000000934 .L0 
     /tmp/ccBdKcG0.s:1867   .text:0000000000000934 .L0 
     /tmp/ccBdKcG0.s:1871   .text:0000000000000944 .L0 
     /tmp/ccBdKcG0.s:1872   .text:0000000000000944 .L0 
     /tmp/ccBdKcG0.s:1878   .text:0000000000000950 .L0 
     /tmp/ccBdKcG0.s:1879   .text:0000000000000950 .L0 
     /tmp/ccBdKcG0.s:1885   .text:0000000000000958 .L0 
     /tmp/ccBdKcG0.s:1886   .text:0000000000000958 .L0 
     /tmp/ccBdKcG0.s:1900   .text:0000000000000964 .L0 
     /tmp/ccBdKcG0.s:1901   .text:0000000000000964 .L0 
     /tmp/ccBdKcG0.s:1904   .text:000000000000096c .L0 
src/kernel/interrupt/interrupt_cpp.cpp:233    .text:000000000000096c .L0 
     /tmp/ccBdKcG0.s:1914   .text:0000000000000970 .L0 
     /tmp/ccBdKcG0.s:1915   .text:0000000000000974 .L0 
     /tmp/ccBdKcG0.s:1916   .text:0000000000000974 .L0 
     /tmp/ccBdKcG0.s:1918   .text:0000000000000978 .L0 
     /tmp/ccBdKcG0.s:1919   .text:0000000000000978 .L0 
     /tmp/ccBdKcG0.s:1921   .text:000000000000097c .L0 
     /tmp/ccBdKcG0.s:1924   .text:0000000000000980 .L0 
     /tmp/ccBdKcG0.s:1926   .text:0000000000000984 .L0 
     /tmp/ccBdKcG0.s:1928   .text:0000000000000988 .L0 
     /tmp/ccBdKcG0.s:1930   .text:000000000000098c .L0 
     /tmp/ccBdKcG0.s:1934   .text:0000000000000990 .L0 
     /tmp/ccBdKcG0.s:1938   .text:0000000000000990 .L0 
     /tmp/ccBdKcG0.s:1939   .text:0000000000000990 .L0 
     /tmp/ccBdKcG0.s:1942   .text:0000000000000998 .L0 
src/kernel/interrupt/interrupt_cpp.cpp:240    .text:0000000000000998 .L0 
     /tmp/ccBdKcG0.s:1953   .text:00000000000009a0 .L0 
     /tmp/ccBdKcG0.s:1954   .text:00000000000009a0 .L0 
     /tmp/ccBdKcG0.s:1961   .text:00000000000009ac .L0 
     /tmp/ccBdKcG0.s:1962   .text:00000000000009ac .L0 
     /tmp/ccBdKcG0.s:1969   .text:00000000000009b8 .L0 
     /tmp/ccBdKcG0.s:1970   .text:00000000000009b8 .L0 
     /tmp/ccBdKcG0.s:1976   .text:00000000000009c4 .L0 
     /tmp/ccBdKcG0.s:1977   .text:00000000000009c4 .L0 
     /tmp/ccBdKcG0.s:1982   .text:00000000000009c8 .L0 
     /tmp/ccBdKcG0.s:1989   .text:00000000000009d0 .L0 
     /tmp/ccBdKcG0.s:1990   .text:00000000000009d0 .L0 
     /tmp/ccBdKcG0.s:1991   .text:00000000000009d0 .L0 
     /tmp/ccBdKcG0.s:1997   .text:00000000000009d8 .L0 
     /tmp/ccBdKcG0.s:1998   .text:00000000000009d8 .L0 
     /tmp/ccBdKcG0.s:2008   .text:00000000000009e4 .L0 
     /tmp/ccBdKcG0.s:2009   .text:00000000000009e4 .L0 
     /tmp/ccBdKcG0.s:2010   .text:00000000000009e4 .L0 
     /tmp/ccBdKcG0.s:2026   .text:00000000000009f0 .L0 
     /tmp/ccBdKcG0.s:2027   .text:00000000000009f0 .L0 
     /tmp/ccBdKcG0.s:2028   .text:00000000000009f0 .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:166    .text:00000000000009f0 .L0 
GAS LISTING /tmp/ccBdKcG0.s 			page 70


     /tmp/ccBdKcG0.s:2036   .text:00000000000009f8 .L0 
     /tmp/ccBdKcG0.s:2037   .text:00000000000009f8 .L0 
     /tmp/ccBdKcG0.s:2044   .text:00000000000009fc .L0 
     /tmp/ccBdKcG0.s:2045   .text:00000000000009fc .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:146    .text:00000000000009fc .L0 
     /tmp/ccBdKcG0.s:2053   .text:0000000000000a04 .L0 
     /tmp/ccBdKcG0.s:2054   .text:0000000000000a04 .L0 
     /tmp/ccBdKcG0.s:2061   .text:0000000000000a08 .L0 
     /tmp/ccBdKcG0.s:2062   .text:0000000000000a08 .L0 
src/kernel/interrupt/../../../h/../h/riscv.hpp:220    .text:0000000000000a08 .L0 
     /tmp/ccBdKcG0.s:2070   .text:0000000000000a10 .L0 
     /tmp/ccBdKcG0.s:2071   .text:0000000000000a10 .L0 
     /tmp/ccBdKcG0.s:2077   .text:0000000000000a14 .L0 
     /tmp/ccBdKcG0.s:2078   .text:0000000000000a14 .L0 
     /tmp/ccBdKcG0.s:2081   .text:0000000000000a18 .L0 
     /tmp/ccBdKcG0.s:2083   .text:0000000000000a1c .L0 
     /tmp/ccBdKcG0.s:2088   .text:0000000000000a2c .L0 
     /tmp/ccBdKcG0.s:2094   .text:0000000000000a40 .L0 
     /tmp/ccBdKcG0.s:2098   .text:0000000000000a50 .L0 
     /tmp/ccBdKcG0.s:2102   .text:0000000000000a60 .L0 
     /tmp/ccBdKcG0.s:2108   .text:0000000000000a74 .L0 
     /tmp/ccBdKcG0.s:2112   .text:0000000000000a84 .L0 
     /tmp/ccBdKcG0.s:2116   .text:0000000000000a94 .L0 
     /tmp/ccBdKcG0.s:2122   .text:0000000000000aa8 .L0 
     /tmp/ccBdKcG0.s:2126   .text:0000000000000ab8 .L0 
     /tmp/ccBdKcG0.s:2127   .text:0000000000000ab8 .L0 
     /tmp/ccBdKcG0.s:2132   .text:0000000000000ac8 .L0 
     /tmp/ccBdKcG0.s:2137   .text:0000000000000acc .L0 
     /tmp/ccBdKcG0.s:2138   .text:0000000000000acc .L0 
     /tmp/ccBdKcG0.s:2141   .text:0000000000000ad4 .L0 
     /tmp/ccBdKcG0.s:2142   .text:0000000000000ad4 .L0 
     /tmp/ccBdKcG0.s:2148   .text:0000000000000ae4 .L0 
     /tmp/ccBdKcG0.s:2150   .text:0000000000000ae8 .L0 
     /tmp/ccBdKcG0.s:2151   .text:0000000000000ae8 .L0 
     /tmp/ccBdKcG0.s:2154   .text:0000000000000af0 .L0 
     /tmp/ccBdKcG0.s:2156   .text:0000000000000af4 .L0 
     /tmp/ccBdKcG0.s:2158   .text:0000000000000af8 .L0 
     /tmp/ccBdKcG0.s:2166   .text:0000000000000b08 .L0 
     /tmp/ccBdKcG0.s:2173   .text:0000000000000b0c .L0 
     /tmp/ccBdKcG0.s:2178   .text:0000000000000b1c .L0 
     /tmp/ccBdKcG0.s:2184   .text:0000000000000b30 .L0 
     /tmp/ccBdKcG0.s:2188   .text:0000000000000b40 .L0 
     /tmp/ccBdKcG0.s:2192   .text:0000000000000b50 .L0 
     /tmp/ccBdKcG0.s:2198   .text:0000000000000b64 .L0 
     /tmp/ccBdKcG0.s:2202   .text:0000000000000b74 .L0 
     /tmp/ccBdKcG0.s:2206   .text:0000000000000b84 .L0 
     /tmp/ccBdKcG0.s:2212   .text:0000000000000b98 .L0 
     /tmp/ccBdKcG0.s:2217   .text:0000000000000ba8 .L0 
     /tmp/ccBdKcG0.s:2226   .text:0000000000000bac .L0 
     /tmp/ccBdKcG0.s:2227   .text:0000000000000bac .L0 
     /tmp/ccBdKcG0.s:2232   .text:0000000000000bbc .L0 
     /tmp/ccBdKcG0.s:2233   .text:0000000000000bbc .L0 
     /tmp/ccBdKcG0.s:2240   .text:0000000000000bc8 .L0 
     /tmp/ccBdKcG0.s:2245   .text:0000000000000bd8 .L0 
     /tmp/ccBdKcG0.s:2251   .text:0000000000000bec .L0 
     /tmp/ccBdKcG0.s:2255   .text:0000000000000bfc .L0 
     /tmp/ccBdKcG0.s:2256   .text:0000000000000bfc .L0 
GAS LISTING /tmp/ccBdKcG0.s 			page 71


     /tmp/ccBdKcG0.s:2261   .text:0000000000000c0c .L0 
     /tmp/ccBdKcG0.s:2269   .text:0000000000000c10 .L0 
     /tmp/ccBdKcG0.s:2323   .text:0000000000000c10 .L0 
     /tmp/ccBdKcG0.s:35     .text:0000000000000020 .L0 
     /tmp/ccBdKcG0.s:42     .text:0000000000000034 .L0 
     /tmp/ccBdKcG0.s:129    .text:0000000000000080 .L0 
     /tmp/ccBdKcG0.s:376    .text:0000000000000154 .L0 
     /tmp/ccBdKcG0.s:551    .text:0000000000000264 .L0 
     /tmp/ccBdKcG0.s:574    .text:0000000000000284 .L0 
     /tmp/ccBdKcG0.s:599    .text:00000000000002a8 .L0 
     /tmp/ccBdKcG0.s:605    .text:00000000000002b8 .L0 
     /tmp/ccBdKcG0.s:628    .text:00000000000002dc .L0 
     /tmp/ccBdKcG0.s:2274   .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccBdKcG0.s:660    .text:000000000000031c .L0 
     /tmp/ccBdKcG0.s:665    .text:000000000000032c .L0 
     /tmp/ccBdKcG0.s:762    .text:00000000000003d0 .L0 
     /tmp/ccBdKcG0.s:1051   .text:00000000000004fc .L0 
     /tmp/ccBdKcG0.s:1205   .text:00000000000005fc .L0 
     /tmp/ccBdKcG0.s:1250   .text:0000000000000624 .L0 
     /tmp/ccBdKcG0.s:1312   .text:0000000000000654 .L0 
     /tmp/ccBdKcG0.s:1318   .text:0000000000000664 .L0 
     /tmp/ccBdKcG0.s:1340   .text:0000000000000688 .L0 
     /tmp/ccBdKcG0.s:1385   .text:00000000000006c8 .L0 
     /tmp/ccBdKcG0.s:1390   .text:00000000000006d8 .L0 
     /tmp/ccBdKcG0.s:1420   .text:0000000000000714 .L0 
     /tmp/ccBdKcG0.s:1550   .text:0000000000000770 .L0 
     /tmp/ccBdKcG0.s:1775   .text:0000000000000878 .L0 
     /tmp/ccBdKcG0.s:2291   .rodata.str1.8:0000000000000050 .LC6
     /tmp/ccBdKcG0.s:1800   .text:0000000000000890 .L0 
     /tmp/ccBdKcG0.s:2294   .rodata.str1.8:0000000000000088 .LC7
     /tmp/ccBdKcG0.s:1806   .text:00000000000008a0 .L0 
     /tmp/ccBdKcG0.s:2280   .rodata.str1.8:0000000000000028 .LC2
     /tmp/ccBdKcG0.s:1818   .text:00000000000008c4 .L0 
     /tmp/ccBdKcG0.s:2297   .rodata.str1.8:0000000000000098 .LC8
     /tmp/ccBdKcG0.s:1823   .text:00000000000008d4 .L0 
     /tmp/ccBdKcG0.s:1850   .text:0000000000000900 .L0 
     /tmp/ccBdKcG0.s:2300   .rodata.str1.8:00000000000000a0 .LC9
     /tmp/ccBdKcG0.s:1855   .text:0000000000000910 .L0 
     /tmp/ccBdKcG0.s:2302   .rodata.str1.8:00000000000000a8 .LC10
     /tmp/ccBdKcG0.s:1867   .text:0000000000000934 .L0 
     /tmp/ccBdKcG0.s:1872   .text:0000000000000944 .L0 
     /tmp/ccBdKcG0.s:1970   .text:00000000000009b8 .L0 
     /tmp/ccBdKcG0.s:1998   .text:00000000000009d8 .L0 
     /tmp/ccBdKcG0.s:2277   .rodata.str1.8:0000000000000018 .LC1
     /tmp/ccBdKcG0.s:2083   .text:0000000000000a1c .L0 
     /tmp/ccBdKcG0.s:2094   .text:0000000000000a40 .L0 
     /tmp/ccBdKcG0.s:2283   .rodata.str1.8:0000000000000030 .LC3
     /tmp/ccBdKcG0.s:2098   .text:0000000000000a50 .L0 
     /tmp/ccBdKcG0.s:2108   .text:0000000000000a74 .L0 
     /tmp/ccBdKcG0.s:2286   .rodata.str1.8:0000000000000038 .LC4
     /tmp/ccBdKcG0.s:2112   .text:0000000000000a84 .L0 
     /tmp/ccBdKcG0.s:2122   .text:0000000000000aa8 .L0 
     /tmp/ccBdKcG0.s:2288   .rodata.str1.8:0000000000000040 .LC5
     /tmp/ccBdKcG0.s:2127   .text:0000000000000ab8 .L0 
     /tmp/ccBdKcG0.s:2173   .text:0000000000000b0c .L0 
     /tmp/ccBdKcG0.s:2184   .text:0000000000000b30 .L0 
     /tmp/ccBdKcG0.s:2188   .text:0000000000000b40 .L0 
GAS LISTING /tmp/ccBdKcG0.s 			page 72


     /tmp/ccBdKcG0.s:2198   .text:0000000000000b64 .L0 
     /tmp/ccBdKcG0.s:2202   .text:0000000000000b74 .L0 
     /tmp/ccBdKcG0.s:2212   .text:0000000000000b98 .L0 
     /tmp/ccBdKcG0.s:2305   .rodata.str1.8:00000000000000b0 .LC11
     /tmp/ccBdKcG0.s:2227   .text:0000000000000bac .L0 
     /tmp/ccBdKcG0.s:2240   .text:0000000000000bc8 .L0 
     /tmp/ccBdKcG0.s:2251   .text:0000000000000bec .L0 
     /tmp/ccBdKcG0.s:2308   .rodata.str1.8:00000000000000e8 .LC12
     /tmp/ccBdKcG0.s:2256   .text:0000000000000bfc .L0 
     /tmp/ccBdKcG0.s:88     .text:0000000000000068 .L4
     /tmp/ccBdKcG0.s:56     .text:0000000000000048 .L2
     /tmp/ccBdKcG0.s:423    .text:00000000000001d0 .L26
     /tmp/ccBdKcG0.s:501    .text:000000000000021c .L27
     /tmp/ccBdKcG0.s:518    .text:0000000000000238 .L28
     /tmp/ccBdKcG0.s:546    .text:0000000000000264 .L29
     /tmp/ccBdKcG0.s:570    .text:0000000000000284 .L30
     /tmp/ccBdKcG0.s:581    .text:0000000000000298 .L31
     /tmp/ccBdKcG0.s:590    .text:00000000000002a8 .L32
     /tmp/ccBdKcG0.s:677    .text:0000000000000354 .L33
     /tmp/ccBdKcG0.s:695    .text:0000000000000368 .L34
     /tmp/ccBdKcG0.s:722    .text:0000000000000394 .L35
     /tmp/ccBdKcG0.s:750    .text:00000000000003c0 .L36
     /tmp/ccBdKcG0.s:759    .text:00000000000003d0 .L37
     /tmp/ccBdKcG0.s:445    .text:00000000000001e8 .L7
     /tmp/ccBdKcG0.s:540    .text:000000000000025c .L38
     /tmp/ccBdKcG0.s:646    .text:00000000000002fc .L39
     /tmp/ccBdKcG0.s:603    .text:00000000000002b8 .L14
     /tmp/ccBdKcG0.s:711    .text:0000000000000380 .L40
     /tmp/ccBdKcG0.s:739    .text:00000000000003ac .L41
     /tmp/ccBdKcG0.s:1113   .text:000000000000057c .L63
     /tmp/ccBdKcG0.s:1161   .text:00000000000005b8 .L64
     /tmp/ccBdKcG0.s:1175   .text:00000000000005d0 .L65
     /tmp/ccBdKcG0.s:1200   .text:00000000000005fc .L66
     /tmp/ccBdKcG0.s:1242   .text:0000000000000624 .L67
     /tmp/ccBdKcG0.s:1276   .text:0000000000000640 .L68
     /tmp/ccBdKcG0.s:1304   .text:0000000000000654 .L69
     /tmp/ccBdKcG0.s:1402   .text:0000000000000700 .L70
     /tmp/ccBdKcG0.s:1439   .text:0000000000000730 .L71
     /tmp/ccBdKcG0.s:1468   .text:0000000000000744 .L72
     /tmp/ccBdKcG0.s:1505   .text:0000000000000758 .L73
     /tmp/ccBdKcG0.s:1537   .text:0000000000000770 .L74
     /tmp/ccBdKcG0.s:1123   .text:0000000000000590 .L44
     /tmp/ccBdKcG0.s:1195   .text:00000000000005f4 .L75
     /tmp/ccBdKcG0.s:1370   .text:00000000000006a8 .L76
     /tmp/ccBdKcG0.s:1316   .text:0000000000000664 .L51
     /tmp/ccBdKcG0.s:1891   .text:0000000000000964 .L95
     /tmp/ccBdKcG0.s:1933   .text:0000000000000990 .L96
     /tmp/ccBdKcG0.s:1950   .text:00000000000009a0 .L97
     /tmp/ccBdKcG0.s:1958   .text:00000000000009ac .L98
     /tmp/ccBdKcG0.s:1966   .text:00000000000009b8 .L99
     /tmp/ccBdKcG0.s:2018   .text:00000000000009f0 .L84
     /tmp/ccBdKcG0.s:1757   .text:0000000000000878 .L90
     /tmp/ccBdKcG0.s:2237   .text:0000000000000bc8 .L91
     /tmp/ccBdKcG0.s:2219   .text:0000000000000bac .L92
     /tmp/ccBdKcG0.s:1911   .text:0000000000000970 .L77
     /tmp/ccBdKcG0.s:2134   .text:0000000000000acc .L86
     /tmp/ccBdKcG0.s:2130   .text:0000000000000ac8 .L87
GAS LISTING /tmp/ccBdKcG0.s 			page 73


     /tmp/ccBdKcG0.s:2168   .text:0000000000000b0c .L88
     /tmp/ccBdKcG0.s:2215   .text:0000000000000ba8 .L89
     /tmp/ccBdKcG0.s:2259   .text:0000000000000c0c .L93
     /tmp/ccBdKcG0.s:386    .text:0000000000000168 .LEHB0
     /tmp/ccBdKcG0.s:169    .text:000000000000009c .LFB114
     /tmp/ccBdKcG0.s:653    .text:0000000000000308 .LEHE0
     /tmp/ccBdKcG0.s:661    .text:0000000000000324 .LEHB1
     /tmp/ccBdKcG0.s:664    .text:000000000000032c .LEHE1
     /tmp/ccBdKcG0.s:667    .text:0000000000000338 .L24
     /tmp/ccBdKcG0.s:674    .text:000000000000034c .LEHB2
     /tmp/ccBdKcG0.s:805    .text:0000000000000444 .LEHE2
     /tmp/ccBdKcG0.s:1061   .text:0000000000000510 .LEHB3
     /tmp/ccBdKcG0.s:846    .text:0000000000000448 .LFB115
     /tmp/ccBdKcG0.s:1378   .text:00000000000006b4 .LEHE3
     /tmp/ccBdKcG0.s:1386   .text:00000000000006d0 .LEHB4
     /tmp/ccBdKcG0.s:1389   .text:00000000000006d8 .LEHE4
     /tmp/ccBdKcG0.s:1392   .text:00000000000006e4 .L61
     /tmp/ccBdKcG0.s:1399   .text:00000000000006f8 .LEHB5
     /tmp/ccBdKcG0.s:1593   .text:00000000000007e4 .LEHE5
     /tmp/ccBdKcG0.s:8047   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccBdKcG0.s:12837  .debug_str:0000000000000a84 .LASF474
     /tmp/ccBdKcG0.s:13297  .debug_str:0000000000001963 .LASF475
     /tmp/ccBdKcG0.s:13217  .debug_str:00000000000016f6 .LASF476
     /tmp/ccBdKcG0.s:8      .text:0000000000000000 .Ltext0
     /tmp/ccBdKcG0.s:2311   .text:0000000000000c10 .Letext0
     /tmp/ccBdKcG0.s:12489  .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccBdKcG0.s:12553  .debug_str:0000000000000178 .LASF0
     /tmp/ccBdKcG0.s:13375  .debug_str:0000000000001ba5 .LASF1
     /tmp/ccBdKcG0.s:13365  .debug_str:0000000000001b4c .LASF3
     /tmp/ccBdKcG0.s:13285  .debug_str:00000000000018f5 .LASF2
     /tmp/ccBdKcG0.s:13231  .debug_str:0000000000001752 .LASF4
     /tmp/ccBdKcG0.s:13243  .debug_str:000000000000179f .LASF5
     /tmp/ccBdKcG0.s:12767  .debug_str:0000000000000897 .LASF6
     /tmp/ccBdKcG0.s:12923  .debug_str:0000000000000e3e .LASF7
     /tmp/ccBdKcG0.s:12879  .debug_str:0000000000000cac .LASF8
     /tmp/ccBdKcG0.s:13147  .debug_str:00000000000014f8 .LASF9
     /tmp/ccBdKcG0.s:12607  .debug_str:0000000000000311 .LASF10
     /tmp/ccBdKcG0.s:13349  .debug_str:0000000000001ae3 .LASF11
     /tmp/ccBdKcG0.s:12777  .debug_str:00000000000008c4 .LASF12
     /tmp/ccBdKcG0.s:12661  .debug_str:00000000000004f3 .LASF13
     /tmp/ccBdKcG0.s:12927  .debug_str:0000000000000e5a .LASF14
     /tmp/ccBdKcG0.s:12789  .debug_str:0000000000000908 .LASF15
     /tmp/ccBdKcG0.s:13213  .debug_str:00000000000016e5 .LASF16
     /tmp/ccBdKcG0.s:12797  .debug_str:000000000000094b .LASF17
     /tmp/ccBdKcG0.s:12733  .debug_str:0000000000000779 .LASF18
     /tmp/ccBdKcG0.s:13431  .debug_str:0000000000001d7f .LASF65
     /tmp/ccBdKcG0.s:12555  .debug_str:0000000000000185 .LASF19
     /tmp/ccBdKcG0.s:12617  .debug_str:0000000000000359 .LASF20
     /tmp/ccBdKcG0.s:12625  .debug_str:00000000000003c5 .LASF67
     /tmp/ccBdKcG0.s:13175  .debug_str:00000000000015cd .LASF26
     /tmp/ccBdKcG0.s:12829  .debug_str:0000000000000a59 .LASF161
     /tmp/ccBdKcG0.s:12565  .debug_str:00000000000001c9 .LASF21
     /tmp/ccBdKcG0.s:13301  .debug_str:0000000000001991 .LASF22
     /tmp/ccBdKcG0.s:13407  .debug_str:0000000000001ca2 .LASF23
     /tmp/ccBdKcG0.s:12525  .debug_str:00000000000000eb .LASF24
     /tmp/ccBdKcG0.s:12965  .debug_str:0000000000000f51 .LASF25
     /tmp/ccBdKcG0.s:12719  .debug_str:00000000000006ea .LASF31
GAS LISTING /tmp/ccBdKcG0.s 			page 74


     /tmp/ccBdKcG0.s:12623  .debug_str:0000000000000392 .LASF28
     /tmp/ccBdKcG0.s:13091  .debug_str:000000000000139c .LASF27
     /tmp/ccBdKcG0.s:13109  .debug_str:0000000000001415 .LASF29
     /tmp/ccBdKcG0.s:13085  .debug_str:0000000000001372 .LASF39
     /tmp/ccBdKcG0.s:12805  .debug_str:00000000000009b8 .LASF41
     /tmp/ccBdKcG0.s:12819  .debug_str:0000000000000a1c .LASF30
     /tmp/ccBdKcG0.s:12855  .debug_str:0000000000000bf9 .LASF32
     /tmp/ccBdKcG0.s:12887  .debug_str:0000000000000ced .LASF33
     /tmp/ccBdKcG0.s:13063  .debug_str:000000000000129c .LASF34
     /tmp/ccBdKcG0.s:13087  .debug_str:0000000000001382 .LASF35
     /tmp/ccBdKcG0.s:12987  .debug_str:0000000000000fe8 .LASF36
     /tmp/ccBdKcG0.s:13291  .debug_str:000000000000192f .LASF37
     /tmp/ccBdKcG0.s:13075  .debug_str:0000000000001320 .LASF38
     /tmp/ccBdKcG0.s:13343  .debug_str:0000000000001ac8 .LASF40
     /tmp/ccBdKcG0.s:13069  .debug_str:00000000000012db .LASF42
     /tmp/ccBdKcG0.s:12517  .debug_str:00000000000000bb .LASF43
     /tmp/ccBdKcG0.s:13071  .debug_str:00000000000012fd .LASF44
     /tmp/ccBdKcG0.s:13221  .debug_str:0000000000001722 .LASF45
     /tmp/ccBdKcG0.s:12609  .debug_str:0000000000000321 .LASF46
     /tmp/ccBdKcG0.s:13275  .debug_str:00000000000018bc .LASF47
     /tmp/ccBdKcG0.s:13281  .debug_str:00000000000018dd .LASF48
     /tmp/ccBdKcG0.s:13035  .debug_str:00000000000011a8 .LASF49
     /tmp/ccBdKcG0.s:13019  .debug_str:0000000000001123 .LASF50
     /tmp/ccBdKcG0.s:13257  .debug_str:0000000000001811 .LASF51
     /tmp/ccBdKcG0.s:13181  .debug_str:00000000000015eb .LASF52
     /tmp/ccBdKcG0.s:12567  .debug_str:00000000000001ce .LASF53
     /tmp/ccBdKcG0.s:13137  .debug_str:00000000000014d0 .LASF54
     /tmp/ccBdKcG0.s:13317  .debug_str:0000000000001a09 .LASF55
     /tmp/ccBdKcG0.s:13061  .debug_str:0000000000001276 .LASF56
     /tmp/ccBdKcG0.s:13041  .debug_str:00000000000011c2 .LASF57
     /tmp/ccBdKcG0.s:13207  .debug_str:00000000000016a5 .LASF58
     /tmp/ccBdKcG0.s:12807  .debug_str:00000000000009ce .LASF59
     /tmp/ccBdKcG0.s:12619  .debug_str:000000000000035e .LASF60
     /tmp/ccBdKcG0.s:13255  .debug_str:0000000000001803 .LASF61
     /tmp/ccBdKcG0.s:12803  .debug_str:0000000000000995 .LASF62
     /tmp/ccBdKcG0.s:13361  .debug_str:0000000000001b2c .LASF63
     /tmp/ccBdKcG0.s:12725  .debug_str:0000000000000719 .LASF64
     /tmp/ccBdKcG0.s:13323  .debug_str:0000000000001a1e .LASF66
     /tmp/ccBdKcG0.s:12799  .debug_str:0000000000000961 .LASF68
     /tmp/ccBdKcG0.s:12867  .debug_str:0000000000000c4b .LASF69
     /tmp/ccBdKcG0.s:13215  .debug_str:00000000000016f1 .LASF70
     /tmp/ccBdKcG0.s:13455  .debug_str:0000000000001e53 .LASF212
     /tmp/ccBdKcG0.s:13139  .debug_str:00000000000014d5 .LASF71
     /tmp/ccBdKcG0.s:12591  .debug_str:0000000000000289 .LASF72
     /tmp/ccBdKcG0.s:12995  .debug_str:000000000000103d .LASF73
     /tmp/ccBdKcG0.s:13233  .debug_str:0000000000001759 .LASF74
     /tmp/ccBdKcG0.s:12677  .debug_str:000000000000057f .LASF75
     /tmp/ccBdKcG0.s:13003  .debug_str:000000000000106e .LASF76
     /tmp/ccBdKcG0.s:13445  .debug_str:0000000000001e00 .LASF77
     /tmp/ccBdKcG0.s:13405  .debug_str:0000000000001c8f .LASF78
     /tmp/ccBdKcG0.s:13125  .debug_str:0000000000001482 .LASF79
     /tmp/ccBdKcG0.s:12911  .debug_str:0000000000000dd3 .LASF80
     /tmp/ccBdKcG0.s:12771  .debug_str:00000000000008a7 .LASF81
     /tmp/ccBdKcG0.s:13089  .debug_str:0000000000001389 .LASF82
     /tmp/ccBdKcG0.s:12701  .debug_str:0000000000000637 .LASF83
     /tmp/ccBdKcG0.s:13017  .debug_str:0000000000001119 .LASF113
     /tmp/ccBdKcG0.s:12659  .debug_str:00000000000004e3 .LASF115
GAS LISTING /tmp/ccBdKcG0.s 			page 75


     /tmp/ccBdKcG0.s:12499  .debug_str:0000000000000037 .LASF84
     /tmp/ccBdKcG0.s:13435  .debug_str:0000000000001d94 .LASF85
     /tmp/ccBdKcG0.s:13141  .debug_str:00000000000014dc .LASF86
     /tmp/ccBdKcG0.s:13101  .debug_str:00000000000013e2 .LASF87
     /tmp/ccBdKcG0.s:12507  .debug_str:000000000000005f .LASF88
     /tmp/ccBdKcG0.s:13439  .debug_str:0000000000001dd2 .LASF89
     /tmp/ccBdKcG0.s:12817  .debug_str:0000000000000a17 .LASF90
     /tmp/ccBdKcG0.s:12671  .debug_str:0000000000000545 .LASF91
     /tmp/ccBdKcG0.s:12611  .debug_str:0000000000000327 .LASF92
     /tmp/ccBdKcG0.s:12713  .debug_str:00000000000006b3 .LASF93
     /tmp/ccBdKcG0.s:12835  .debug_str:0000000000000a7b .LASF94
     /tmp/ccBdKcG0.s:12917  .debug_str:0000000000000e04 .LASF95
     /tmp/ccBdKcG0.s:13203  .debug_str:000000000000168c .LASF96
     /tmp/ccBdKcG0.s:12665  .debug_str:0000000000000524 .LASF97
     /tmp/ccBdKcG0.s:13021  .debug_str:000000000000112d .LASF98
     /tmp/ccBdKcG0.s:13319  .debug_str:0000000000001a13 .LASF99
     /tmp/ccBdKcG0.s:13425  .debug_str:0000000000001d4c .LASF100
     /tmp/ccBdKcG0.s:13239  .debug_str:0000000000001794 .LASF101
     /tmp/ccBdKcG0.s:13065  .debug_str:00000000000012b9 .LASF102
     /tmp/ccBdKcG0.s:12975  .debug_str:0000000000000fa2 .LASF103
     /tmp/ccBdKcG0.s:12491  .debug_str:0000000000000000 .LASF104
     /tmp/ccBdKcG0.s:12509  .debug_str:0000000000000064 .LASF136
     /tmp/ccBdKcG0.s:12629  .debug_str:00000000000003f2 .LASF105
     /tmp/ccBdKcG0.s:13083  .debug_str:0000000000001360 .LASF106
     /tmp/ccBdKcG0.s:13437  .debug_str:0000000000001da7 .LASF107
     /tmp/ccBdKcG0.s:13311  .debug_str:00000000000019de .LASF108
     /tmp/ccBdKcG0.s:12841  .debug_str:0000000000000b54 .LASF109
     /tmp/ccBdKcG0.s:12939  .debug_str:0000000000000ea0 .LASF110
     /tmp/ccBdKcG0.s:13015  .debug_str:00000000000010e6 .LASF111
     /tmp/ccBdKcG0.s:13427  .debug_str:0000000000001d5c .LASF112
     /tmp/ccBdKcG0.s:13039  .debug_str:00000000000011b7 .LASF114
     /tmp/ccBdKcG0.s:13237  .debug_str:0000000000001778 .LASF116
     /tmp/ccBdKcG0.s:12881  .debug_str:0000000000000cbf .LASF117
     /tmp/ccBdKcG0.s:12645  .debug_str:000000000000046d .LASF118
     /tmp/ccBdKcG0.s:12579  .debug_str:000000000000020f .LASF119
     /tmp/ccBdKcG0.s:12783  .debug_str:00000000000008e5 .LASF120
     /tmp/ccBdKcG0.s:12905  .debug_str:0000000000000d95 .LASF121
     /tmp/ccBdKcG0.s:12601  .debug_str:00000000000002dc .LASF202
     /tmp/ccBdKcG0.s:13415  .debug_str:0000000000001ce7 .LASF204
     /tmp/ccBdKcG0.s:12503  .debug_str:000000000000004f .LASF122
     /tmp/ccBdKcG0.s:13099  .debug_str:00000000000013c1 .LASF123
     /tmp/ccBdKcG0.s:12513  .debug_str:0000000000000087 .LASF124
     /tmp/ccBdKcG0.s:12613  .debug_str:0000000000000332 .LASF125
     /tmp/ccBdKcG0.s:13201  .debug_str:0000000000001681 .LASF126
     /tmp/ccBdKcG0.s:12751  .debug_str:0000000000000828 .LASF127
     /tmp/ccBdKcG0.s:12993  .debug_str:000000000000102e .LASF128
     /tmp/ccBdKcG0.s:13259  .debug_str:000000000000181b .LASF129
     /tmp/ccBdKcG0.s:13131  .debug_str:00000000000014b3 .LASF130
     /tmp/ccBdKcG0.s:12571  .debug_str:00000000000001dd .LASF131
     /tmp/ccBdKcG0.s:13305  .debug_str:00000000000019b5 .LASF132
     /tmp/ccBdKcG0.s:12589  .debug_str:0000000000000282 .LASF133
     /tmp/ccBdKcG0.s:13315  .debug_str:0000000000001a03 .LASF134
     /tmp/ccBdKcG0.s:12637  .debug_str:000000000000043b .LASF135
     /tmp/ccBdKcG0.s:13073  .debug_str:000000000000131a .LASF137
     /tmp/ccBdKcG0.s:12557  .debug_str:000000000000018a .LASF138
     /tmp/ccBdKcG0.s:12501  .debug_str:000000000000003f .LASF139
     /tmp/ccBdKcG0.s:12809  .debug_str:00000000000009dd .LASF140
GAS LISTING /tmp/ccBdKcG0.s 			page 76


     /tmp/ccBdKcG0.s:12915  .debug_str:0000000000000df2 .LASF141
     /tmp/ccBdKcG0.s:12723  .debug_str:0000000000000706 .LASF142
     /tmp/ccBdKcG0.s:12585  .debug_str:000000000000025a .LASF143
     /tmp/ccBdKcG0.s:13169  .debug_str:0000000000001597 .LASF144
     /tmp/ccBdKcG0.s:13159  .debug_str:0000000000001545 .LASF145
     /tmp/ccBdKcG0.s:12693  .debug_str:00000000000005ff .LASF146
     /tmp/ccBdKcG0.s:12697  .debug_str:0000000000000624 .LASF147
     /tmp/ccBdKcG0.s:12919  .debug_str:0000000000000e19 .LASF148
     /tmp/ccBdKcG0.s:12519  .debug_str:00000000000000c4 .LASF149
     /tmp/ccBdKcG0.s:13117  .debug_str:0000000000001451 .LASF150
     /tmp/ccBdKcG0.s:13155  .debug_str:000000000000152b .LASF364
     /tmp/ccBdKcG0.s:13177  .debug_str:00000000000015d9 .LASF151
     /tmp/ccBdKcG0.s:13193  .debug_str:000000000000162a .LASF152
     /tmp/ccBdKcG0.s:12669  .debug_str:000000000000053a .LASF153
     /tmp/ccBdKcG0.s:13303  .debug_str:000000000000199a .LASF154
     /tmp/ccBdKcG0.s:12781  .debug_str:00000000000008d8 .LASF155
     /tmp/ccBdKcG0.s:12515  .debug_str:0000000000000090 .LASF156
     /tmp/ccBdKcG0.s:13353  .debug_str:0000000000001afe .LASF157
     /tmp/ccBdKcG0.s:12747  .debug_str:00000000000007ff .LASF158
     /tmp/ccBdKcG0.s:13157  .debug_str:000000000000153e .LASF159
     /tmp/ccBdKcG0.s:13309  .debug_str:00000000000019c8 .LASF160
     /tmp/ccBdKcG0.s:12977  .debug_str:0000000000000fac .LASF162
     /tmp/ccBdKcG0.s:13223  .debug_str:0000000000001727 .LASF163
     /tmp/ccBdKcG0.s:12981  .debug_str:0000000000000fba .LASF164
     /tmp/ccBdKcG0.s:12865  .debug_str:0000000000000c42 .LASF165
     /tmp/ccBdKcG0.s:13449  .debug_str:0000000000001e22 .LASF166
     /tmp/ccBdKcG0.s:12913  .debug_str:0000000000000de8 .LASF167
     /tmp/ccBdKcG0.s:13143  .debug_str:00000000000014e4 .LASF477
     /tmp/ccBdKcG0.s:12839  .debug_str:0000000000000b48 .LASF168
     /tmp/ccBdKcG0.s:13127  .debug_str:000000000000148c .LASF169
     /tmp/ccBdKcG0.s:12573  .debug_str:00000000000001e2 .LASF170
     /tmp/ccBdKcG0.s:13211  .debug_str:00000000000016d8 .LASF171
     /tmp/ccBdKcG0.s:13395  .debug_str:0000000000001c42 .LASF172
     /tmp/ccBdKcG0.s:13053  .debug_str:000000000000122d .LASF173
     /tmp/ccBdKcG0.s:13387  .debug_str:0000000000001bff .LASF174
     /tmp/ccBdKcG0.s:12873  .debug_str:0000000000000c62 .LASF175
     /tmp/ccBdKcG0.s:13107  .debug_str:000000000000140c .LASF176
     /tmp/ccBdKcG0.s:13391  .debug_str:0000000000001c1e .LASF177
     /tmp/ccBdKcG0.s:12863  .debug_str:0000000000000c3b .LASF178
     /tmp/ccBdKcG0.s:12495  .debug_str:0000000000000012 .LASF179
     /tmp/ccBdKcG0.s:12861  .debug_str:0000000000000c30 .LASF180
     /tmp/ccBdKcG0.s:12539  .debug_str:0000000000000137 .LASF181
     /tmp/ccBdKcG0.s:12631  .debug_str:000000000000040b .LASF182
     /tmp/ccBdKcG0.s:12945  .debug_str:0000000000000ebd .LASF183
     /tmp/ccBdKcG0.s:12935  .debug_str:0000000000000e8c .LASF184
     /tmp/ccBdKcG0.s:13263  .debug_str:000000000000184f .LASF185
     /tmp/ccBdKcG0.s:13057  .debug_str:000000000000124a .LASF186
     /tmp/ccBdKcG0.s:13369  .debug_str:0000000000001b6c .LASF187
     /tmp/ccBdKcG0.s:13115  .debug_str:0000000000001441 .LASF188
     /tmp/ccBdKcG0.s:12745  .debug_str:00000000000007e4 .LASF189
     /tmp/ccBdKcG0.s:12953  .debug_str:0000000000000ef7 .LASF190
     /tmp/ccBdKcG0.s:12647  .debug_str:0000000000000480 .LASF191
     /tmp/ccBdKcG0.s:12743  .debug_str:00000000000007d7 .LASF192
     /tmp/ccBdKcG0.s:13025  .debug_str:0000000000001148 .LASF193
     /tmp/ccBdKcG0.s:12811  .debug_str:00000000000009ee .LASF478
     /tmp/ccBdKcG0.s:12959  .debug_str:0000000000000f2c .LASF194
     /tmp/ccBdKcG0.s:13393  .debug_str:0000000000001c32 .LASF196
GAS LISTING /tmp/ccBdKcG0.s 			page 77


     /tmp/ccBdKcG0.s:12941  .debug_str:0000000000000eae .LASF195
     /tmp/ccBdKcG0.s:12561  .debug_str:00000000000001a5 .LASF197
     /tmp/ccBdKcG0.s:13187  .debug_str:0000000000001600 .LASF198
     /tmp/ccBdKcG0.s:12853  .debug_str:0000000000000bdf .LASF199
     /tmp/ccBdKcG0.s:13321  .debug_str:0000000000001a18 .LASF200
     /tmp/ccBdKcG0.s:12947  .debug_str:0000000000000ed6 .LASF201
     /tmp/ccBdKcG0.s:12901  .debug_str:0000000000000d68 .LASF203
     /tmp/ccBdKcG0.s:12877  .debug_str:0000000000000c8a .LASF205
     /tmp/ccBdKcG0.s:12569  .debug_str:00000000000001d3 .LASF206
     /tmp/ccBdKcG0.s:13371  .debug_str:0000000000001b85 .LASF207
     /tmp/ccBdKcG0.s:12773  .debug_str:00000000000008af .LASF208
     /tmp/ccBdKcG0.s:13247  .debug_str:00000000000017b7 .LASF209
     /tmp/ccBdKcG0.s:12831  .debug_str:0000000000000a66 .LASF210
     /tmp/ccBdKcG0.s:12511  .debug_str:000000000000006e .LASF211
     /tmp/ccBdKcG0.s:13295  .debug_str:0000000000001952 .LASF213
     /tmp/ccBdKcG0.s:13183  .debug_str:00000000000015f0 .LASF214
     /tmp/ccBdKcG0.s:12921  .debug_str:0000000000000e33 .LASF215
     /tmp/ccBdKcG0.s:13351  .debug_str:0000000000001af1 .LASF216
     /tmp/ccBdKcG0.s:13261  .debug_str:0000000000001842 .LASF217
     /tmp/ccBdKcG0.s:13409  .debug_str:0000000000001cac .LASF218
     /tmp/ccBdKcG0.s:13269  .debug_str:0000000000001881 .LASF219
     /tmp/ccBdKcG0.s:13345  .debug_str:0000000000001ad5 .LASF220
     /tmp/ccBdKcG0.s:13227  .debug_str:0000000000001742 .LASF221
     /tmp/ccBdKcG0.s:12527  .debug_str:00000000000000f3 .LASF222
     /tmp/ccBdKcG0.s:13325  .debug_str:0000000000001a30 .LASF223
     /tmp/ccBdKcG0.s:13081  .debug_str:0000000000001354 .LASF224
     /tmp/ccBdKcG0.s:12843  .debug_str:0000000000000b89 .LASF225
     /tmp/ccBdKcG0.s:12549  .debug_str:000000000000016c .LASF226
     /tmp/ccBdKcG0.s:13153  .debug_str:0000000000001523 .LASF227
     /tmp/ccBdKcG0.s:12675  .debug_str:0000000000000568 .LASF368
     /tmp/ccBdKcG0.s:13433  .debug_str:0000000000001d86 .LASF230
     /tmp/ccBdKcG0.s:13293  .debug_str:0000000000001939 .LASF232
     /tmp/ccBdKcG0.s:13335  .debug_str:0000000000001a87 .LASF228
     /tmp/ccBdKcG0.s:12705  .debug_str:0000000000000650 .LASF229
     /tmp/ccBdKcG0.s:12559  .debug_str:000000000000019b .LASF231
     /tmp/ccBdKcG0.s:13199  .debug_str:000000000000166d .LASF233
     /tmp/ccBdKcG0.s:12639  .debug_str:0000000000000450 .LASF234
     /tmp/ccBdKcG0.s:12815  .debug_str:0000000000000a0c .LASF235
     /tmp/ccBdKcG0.s:12951  .debug_str:0000000000000eee .LASF236
     /tmp/ccBdKcG0.s:13167  .debug_str:000000000000158e .LASF237
     /tmp/ccBdKcG0.s:13219  .debug_str:0000000000001719 .LASF238
     /tmp/ccBdKcG0.s:12891  .debug_str:0000000000000d11 .LASF239
     /tmp/ccBdKcG0.s:13341  .debug_str:0000000000001abc .LASF240
     /tmp/ccBdKcG0.s:12541  .debug_str:000000000000014d .LASF241
     /tmp/ccBdKcG0.s:12823  .debug_str:0000000000000a2d .LASF242
     /tmp/ccBdKcG0.s:12703  .debug_str:0000000000000644 .LASF243
     /tmp/ccBdKcG0.s:12651  .debug_str:00000000000004ab .LASF244
     /tmp/ccBdKcG0.s:12603  .debug_str:00000000000002e8 .LASF245
     /tmp/ccBdKcG0.s:13417  .debug_str:0000000000001d0b .LASF246
     /tmp/ccBdKcG0.s:13339  .debug_str:0000000000001aa7 .LASF247
     /tmp/ccBdKcG0.s:12761  .debug_str:0000000000000881 .LASF248
     /tmp/ccBdKcG0.s:12595  .debug_str:00000000000002a4 .LASF249
     /tmp/ccBdKcG0.s:12687  .debug_str:00000000000005dc .LASF250
     /tmp/ccBdKcG0.s:12717  .debug_str:00000000000006d7 .LASF251
     /tmp/ccBdKcG0.s:12545  .debug_str:000000000000015f .LASF252
     /tmp/ccBdKcG0.s:13265  .debug_str:0000000000001866 .LASF253
     /tmp/ccBdKcG0.s:13011  .debug_str:00000000000010cf .LASF254
GAS LISTING /tmp/ccBdKcG0.s 			page 78


     /tmp/ccBdKcG0.s:12635  .debug_str:0000000000000427 .LASF255
     /tmp/ccBdKcG0.s:13381  .debug_str:0000000000001bd1 .LASF256
     /tmp/ccBdKcG0.s:13209  .debug_str:00000000000016c4 .LASF257
     /tmp/ccBdKcG0.s:12949  .debug_str:0000000000000ee6 .LASF258
     /tmp/ccBdKcG0.s:12897  .debug_str:0000000000000d3a .LASF259
     /tmp/ccBdKcG0.s:12801  .debug_str:000000000000098d .LASF260
     /tmp/ccBdKcG0.s:12497  .debug_str:0000000000000023 .LASF261
     /tmp/ccBdKcG0.s:12493  .debug_str:000000000000000b .LASF262
     /tmp/ccBdKcG0.s:13451  .debug_str:0000000000001e2b .LASF263
     /tmp/ccBdKcG0.s:13377  .debug_str:0000000000001bb8 .LASF264
     /tmp/ccBdKcG0.s:12673  .debug_str:0000000000000555 .LASF265
     /tmp/ccBdKcG0.s:13299  .debug_str:000000000000198a .LASF266
     /tmp/ccBdKcG0.s:13047  .debug_str:00000000000011fd .LASF267
     /tmp/ccBdKcG0.s:12883  .debug_str:0000000000000cdb .LASF268
     /tmp/ccBdKcG0.s:13279  .debug_str:00000000000018ca .LASF269
     /tmp/ccBdKcG0.s:13245  .debug_str:00000000000017b1 .LASF270
     /tmp/ccBdKcG0.s:13113  .debug_str:000000000000142f .LASF271
     /tmp/ccBdKcG0.s:12999  .debug_str:0000000000001054 .LASF272
     /tmp/ccBdKcG0.s:13403  .debug_str:0000000000001c7d .LASF273
     /tmp/ccBdKcG0.s:13287  .debug_str:0000000000001903 .LASF274
     /tmp/ccBdKcG0.s:13225  .debug_str:000000000000172f .LASF275
     /tmp/ccBdKcG0.s:12869  .debug_str:0000000000000c50 .LASF276
     /tmp/ccBdKcG0.s:12683  .debug_str:00000000000005a0 .LASF277
     /tmp/ccBdKcG0.s:13241  .debug_str:0000000000001799 .LASF278
     /tmp/ccBdKcG0.s:12731  .debug_str:0000000000000767 .LASF279
     /tmp/ccBdKcG0.s:12989  .debug_str:0000000000001002 .LASF280
     /tmp/ccBdKcG0.s:13033  .debug_str:0000000000001196 .LASF281
     /tmp/ccBdKcG0.s:13171  .debug_str:00000000000015a8 .LASF282
     /tmp/ccBdKcG0.s:13421  .debug_str:0000000000001d1a .LASF283
     /tmp/ccBdKcG0.s:12597  .debug_str:00000000000002b7 .LASF284
     /tmp/ccBdKcG0.s:13163  .debug_str:000000000000156a .LASF285
     /tmp/ccBdKcG0.s:13229  .debug_str:0000000000001748 .LASF286
     /tmp/ccBdKcG0.s:12903  .debug_str:0000000000000d7f .LASF287
     /tmp/ccBdKcG0.s:12785  .debug_str:00000000000008f0 .LASF288
     /tmp/ccBdKcG0.s:12737  .debug_str:0000000000000799 .LASF289
     /tmp/ccBdKcG0.s:13029  .debug_str:000000000000117c .LASF290
     /tmp/ccBdKcG0.s:12847  .debug_str:0000000000000ba2 .LASF291
     /tmp/ccBdKcG0.s:12543  .debug_str:000000000000015a .LASF292
     /tmp/ccBdKcG0.s:13249  .debug_str:00000000000017d3 .LASF293
     /tmp/ccBdKcG0.s:13355  .debug_str:0000000000001b0a .LASF294
     /tmp/ccBdKcG0.s:12563  .debug_str:00000000000001b8 .LASF295
     /tmp/ccBdKcG0.s:12775  .debug_str:00000000000008bf .LASF296
     /tmp/ccBdKcG0.s:12649  .debug_str:000000000000049a .LASF297
     /tmp/ccBdKcG0.s:12547  .debug_str:0000000000000167 .LASF298
     /tmp/ccBdKcG0.s:13055  .debug_str:0000000000001239 .LASF299
     /tmp/ccBdKcG0.s:12779  .debug_str:00000000000008d3 .LASF300
     /tmp/ccBdKcG0.s:12893  .debug_str:0000000000000d20 .LASF301
     /tmp/ccBdKcG0.s:12551  .debug_str:0000000000000173 .LASF302
     /tmp/ccBdKcG0.s:12689  .debug_str:00000000000005e3 .LASF303
     /tmp/ccBdKcG0.s:12909  .debug_str:0000000000000dc6 .LASF304
     /tmp/ccBdKcG0.s:13235  .debug_str:000000000000175e .LASF305
     /tmp/ccBdKcG0.s:12641  .debug_str:0000000000000456 .LASF306
     /tmp/ccBdKcG0.s:12985  .debug_str:0000000000000fcd .LASF307
     /tmp/ccBdKcG0.s:13151  .debug_str:0000000000001518 .LASF308
     /tmp/ccBdKcG0.s:13329  .debug_str:0000000000001a4f .LASF309
     /tmp/ccBdKcG0.s:12655  .debug_str:00000000000004c8 .LASF310
     /tmp/ccBdKcG0.s:12851  .debug_str:0000000000000bc7 .LASF311
GAS LISTING /tmp/ccBdKcG0.s 			page 79


     /tmp/ccBdKcG0.s:13135  .debug_str:00000000000014c2 .LASF312
     /tmp/ccBdKcG0.s:12537  .debug_str:000000000000011c .LASF313
     /tmp/ccBdKcG0.s:13093  .debug_str:00000000000013a9 .LASF314
     /tmp/ccBdKcG0.s:13383  .debug_str:0000000000001bd9 .LASF315
     /tmp/ccBdKcG0.s:12653  .debug_str:00000000000004b4 .LASF316
     /tmp/ccBdKcG0.s:12925  .debug_str:0000000000000e45 .LASF317
     /tmp/ccBdKcG0.s:13043  .debug_str:00000000000011cd .LASF318
     /tmp/ccBdKcG0.s:13001  .debug_str:000000000000105a .LASF319
     /tmp/ccBdKcG0.s:12979  .debug_str:0000000000000fb5 .LASF320
     /tmp/ccBdKcG0.s:12971  .debug_str:0000000000000f7e .LASF321
     /tmp/ccBdKcG0.s:12533  .debug_str:000000000000010e .LASF322
     /tmp/ccBdKcG0.s:12707  .debug_str:0000000000000678 .LASF323
     /tmp/ccBdKcG0.s:13185  .debug_str:00000000000015f8 .LASF324
     /tmp/ccBdKcG0.s:13367  .debug_str:0000000000001b52 .LASF325
     /tmp/ccBdKcG0.s:12505  .debug_str:0000000000000059 .LASF326
     /tmp/ccBdKcG0.s:13173  .debug_str:00000000000015b3 .LASF327
     /tmp/ccBdKcG0.s:13129  .debug_str:0000000000001498 .LASF328
     /tmp/ccBdKcG0.s:12825  .debug_str:0000000000000a39 .LASF329
     /tmp/ccBdKcG0.s:12605  .debug_str:00000000000002fd .LASF330
     /tmp/ccBdKcG0.s:13359  .debug_str:0000000000001b1b .LASF331
     /tmp/ccBdKcG0.s:12581  .debug_str:000000000000023b .LASF332
     /tmp/ccBdKcG0.s:12943  .debug_str:0000000000000eb7 .LASF333
     /tmp/ccBdKcG0.s:12895  .debug_str:0000000000000d31 .LASF334
     /tmp/ccBdKcG0.s:12741  .debug_str:00000000000007d1 .LASF335
     /tmp/ccBdKcG0.s:12615  .debug_str:0000000000000353 .LASF336
     /tmp/ccBdKcG0.s:12769  .debug_str:000000000000089e .LASF337
     /tmp/ccBdKcG0.s:13023  .debug_str:0000000000001132 .LASF338
     /tmp/ccBdKcG0.s:13077  .debug_str:000000000000133d .LASF339
     /tmp/ccBdKcG0.s:13271  .debug_str:0000000000001886 .LASF340
     /tmp/ccBdKcG0.s:13373  .debug_str:0000000000001b99 .LASF341
     /tmp/ccBdKcG0.s:13443  .debug_str:0000000000001de7 .LASF342
     /tmp/ccBdKcG0.s:12795  .debug_str:000000000000093b .LASF343
     /tmp/ccBdKcG0.s:13413  .debug_str:0000000000001cca .LASF344
     /tmp/ccBdKcG0.s:12699  .debug_str:000000000000062b .LASF345
     /tmp/ccBdKcG0.s:12961  .debug_str:0000000000000f32 .LASF346
     /tmp/ccBdKcG0.s:12983  .debug_str:0000000000000fc0 .LASF347
     /tmp/ccBdKcG0.s:13447  .debug_str:0000000000001e08 .LASF348
     /tmp/ccBdKcG0.s:12933  .debug_str:0000000000000e81 .LASF349
     /tmp/ccBdKcG0.s:13121  .debug_str:0000000000001474 .LASF350
     /tmp/ccBdKcG0.s:12521  .debug_str:00000000000000cb .LASF351
     /tmp/ccBdKcG0.s:12729  .debug_str:0000000000000754 .LASF352
     /tmp/ccBdKcG0.s:13357  .debug_str:0000000000001b0f .LASF410
     /tmp/ccBdKcG0.s:12535  .debug_str:0000000000000115 .LASF353
     /tmp/ccBdKcG0.s:12679  .debug_str:000000000000058a .LASF354
     /tmp/ccBdKcG0.s:12593  .debug_str:0000000000000296 .LASF355
     /tmp/ccBdKcG0.s:13363  .debug_str:0000000000001b3d .LASF356
     /tmp/ccBdKcG0.s:12721  .debug_str:00000000000006ff .LASF357
     /tmp/ccBdKcG0.s:12813  .debug_str:00000000000009f3 .LASF358
     /tmp/ccBdKcG0.s:13253  .debug_str:00000000000017ea .LASF359
     /tmp/ccBdKcG0.s:12899  .debug_str:0000000000000d4e .LASF360
     /tmp/ccBdKcG0.s:12793  .debug_str:0000000000000921 .LASF361
     /tmp/ccBdKcG0.s:13149  .debug_str:000000000000150b .LASF362
     /tmp/ccBdKcG0.s:12627  .debug_str:00000000000003d9 .LASF363
     /tmp/ccBdKcG0.s:13273  .debug_str:00000000000018a1 .LASF479
     /tmp/ccBdKcG0.s:13045  .debug_str:00000000000011e2 .LASF365
     /tmp/ccBdKcG0.s:12667  .debug_str:0000000000000530 .LASF366
     /tmp/ccBdKcG0.s:12599  .debug_str:00000000000002c2 .LASF367
GAS LISTING /tmp/ccBdKcG0.s 			page 80


     /tmp/ccBdKcG0.s:12849  .debug_str:0000000000000bb3 .LASF480
     /tmp/ccBdKcG0.s:13067  .debug_str:00000000000012c3 .LASF369
     /tmp/ccBdKcG0.s:13313  .debug_str:00000000000019fa .LASF370
     /tmp/ccBdKcG0.s:12957  .debug_str:0000000000000f13 .LASF371
     /tmp/ccBdKcG0.s:13165  .debug_str:0000000000001582 .LASF372
     /tmp/ccBdKcG0.s:12739  .debug_str:00000000000007af .LASF373
     /tmp/ccBdKcG0.s:13195  .debug_str:0000000000001641 .LASF374
     /tmp/ccBdKcG0.s:13397  .debug_str:0000000000001c47 .LASF375
     /tmp/ccBdKcG0.s:12931  .debug_str:0000000000000e77 .LASF376
     /tmp/ccBdKcG0.s:13161  .debug_str:000000000000154c .LASF377
     /tmp/ccBdKcG0.s:12531  .debug_str:0000000000000102 .LASF378
     /tmp/ccBdKcG0.s:12969  .debug_str:0000000000000f61 .LASF379
     /tmp/ccBdKcG0.s:12787  .debug_str:00000000000008fa .LASF380
     /tmp/ccBdKcG0.s:13197  .debug_str:000000000000164e .LASF381
     /tmp/ccBdKcG0.s:12715  .debug_str:00000000000006ca .LASF382
     /tmp/ccBdKcG0.s:13059  .debug_str:0000000000001258 .LASF383
     /tmp/ccBdKcG0.s:12889  .debug_str:0000000000000cf6 .LASF384
     /tmp/ccBdKcG0.s:13251  .debug_str:00000000000017e4 .LASF385
     /tmp/ccBdKcG0.s:12749  .debug_str:000000000000081f .LASF386
     /tmp/ccBdKcG0.s:13005  .debug_str:000000000000108b .LASF452
     /tmp/ccBdKcG0.s:13123  .debug_str:000000000000147c .LASF387
     /tmp/ccBdKcG0.s:12967  .debug_str:0000000000000f5b .LASF388
     /tmp/ccBdKcG0.s:13441  .debug_str:0000000000001de2 .LASF389
     /tmp/ccBdKcG0.s:12963  .debug_str:0000000000000f4b .LASF390
     /tmp/ccBdKcG0.s:12937  .debug_str:0000000000000e98 .LASF391
     /tmp/ccBdKcG0.s:12759  .debug_str:000000000000087c .LASF392
     /tmp/ccBdKcG0.s:13095  .debug_str:00000000000013b4 .LASF393
     /tmp/ccBdKcG0.s:12791  .debug_str:0000000000000918 .LASF394
     /tmp/ccBdKcG0.s:13097  .debug_str:00000000000013bb .LASF395
     /tmp/ccBdKcG0.s:12765  .debug_str:000000000000088e .LASF396
     /tmp/ccBdKcG0.s:12709  .debug_str:0000000000000691 .LASF397
     /tmp/ccBdKcG0.s:12859  .debug_str:0000000000000c26 .LASF398
     /tmp/ccBdKcG0.s:12991  .debug_str:0000000000001008 .LASF399
     /tmp/ccBdKcG0.s:13079  .debug_str:000000000000134a .LASF400
     /tmp/ccBdKcG0.s:13009  .debug_str:00000000000010a9 .LASF401
     /tmp/ccBdKcG0.s:13145  .debug_str:00000000000014ec .LASF402
     /tmp/ccBdKcG0.s:12685  .debug_str:00000000000005b3 .LASF403
     /tmp/ccBdKcG0.s:13267  .debug_str:000000000000187a .LASF404
     /tmp/ccBdKcG0.s:12587  .debug_str:000000000000026c .LASF405
     /tmp/ccBdKcG0.s:13429  .debug_str:0000000000001d78 .LASF406
     /tmp/ccBdKcG0.s:12583  .debug_str:0000000000000243 .LASF407
     /tmp/ccBdKcG0.s:13133  .debug_str:00000000000014bc .LASF408
     /tmp/ccBdKcG0.s:13453  .debug_str:0000000000001e3e .LASF409
     /tmp/ccBdKcG0.s:13051  .debug_str:000000000000121e .LASF411
     /tmp/ccBdKcG0.s:13179  .debug_str:00000000000015e1 .LASF412
     /tmp/ccBdKcG0.s:12885  .debug_str:0000000000000ce2 .LASF413
     /tmp/ccBdKcG0.s:12929  .debug_str:0000000000000e6a .LASF414
     /tmp/ccBdKcG0.s:12735  .debug_str:000000000000078f .LASF415
     /tmp/ccBdKcG0.s:13389  .debug_str:0000000000001c08 .LASF416
     /tmp/ccBdKcG0.s:12827  .debug_str:0000000000000a45 .LASF417
     /tmp/ccBdKcG0.s:12727  .debug_str:0000000000000744 .LASF418
     /tmp/ccBdKcG0.s:12681  .debug_str:0000000000000590 .LASF419
     /tmp/ccBdKcG0.s:12973  .debug_str:0000000000000f95 .LASF420
     /tmp/ccBdKcG0.s:12575  .debug_str:00000000000001ef .LASF421
     /tmp/ccBdKcG0.s:13277  .debug_str:00000000000018c4 .LASF422
     /tmp/ccBdKcG0.s:12763  .debug_str:0000000000000888 .LASF423
     /tmp/ccBdKcG0.s:13401  .debug_str:0000000000001c6f .LASF424
GAS LISTING /tmp/ccBdKcG0.s 			page 81


     /tmp/ccBdKcG0.s:12753  .debug_str:000000000000084b .LASF425
     /tmp/ccBdKcG0.s:13049  .debug_str:0000000000001210 .LASF426
     /tmp/ccBdKcG0.s:13013  .debug_str:00000000000010d7 .LASF427
     /tmp/ccBdKcG0.s:13191  .debug_str:000000000000161b .LASF428
     /tmp/ccBdKcG0.s:13327  .debug_str:0000000000001a36 .LASF429
     /tmp/ccBdKcG0.s:12663  .debug_str:0000000000000502 .LASF430
     /tmp/ccBdKcG0.s:12691  .debug_str:00000000000005f4 .LASF431
     /tmp/ccBdKcG0.s:12755  .debug_str:0000000000000859 .LASF432
     /tmp/ccBdKcG0.s:12833  .debug_str:0000000000000a74 .LASF433
     /tmp/ccBdKcG0.s:13289  .debug_str:000000000000190a .LASF434
     /tmp/ccBdKcG0.s:13347  .debug_str:0000000000001ada .LASF435
     /tmp/ccBdKcG0.s:13031  .debug_str:0000000000001181 .LASF436
     /tmp/ccBdKcG0.s:13119  .debug_str:0000000000001467 .LASF437
     /tmp/ccBdKcG0.s:13423  .debug_str:0000000000001d32 .LASF438
     /tmp/ccBdKcG0.s:13337  .debug_str:0000000000001a95 .LASF439
     /tmp/ccBdKcG0.s:13385  .debug_str:0000000000001bed .LASF440
     /tmp/ccBdKcG0.s:12757  .debug_str:0000000000000871 .LASF441
     /tmp/ccBdKcG0.s:13027  .debug_str:000000000000116a .LASF442
     /tmp/ccBdKcG0.s:13331  .debug_str:0000000000001a67 .LASF443
     /tmp/ccBdKcG0.s:12845  .debug_str:0000000000000b92 .LASF444
     /tmp/ccBdKcG0.s:13189  .debug_str:000000000000160d .LASF445
     /tmp/ccBdKcG0.s:13103  .debug_str:00000000000013f6 .LASF446
     /tmp/ccBdKcG0.s:12711  .debug_str:00000000000006a6 .LASF447
     /tmp/ccBdKcG0.s:12857  .debug_str:0000000000000c16 .LASF448
     /tmp/ccBdKcG0.s:13307  .debug_str:00000000000019ba .LASF449
     /tmp/ccBdKcG0.s:13379  .debug_str:0000000000001bbf .LASF450
     /tmp/ccBdKcG0.s:12657  .debug_str:00000000000004d3 .LASF451
     /tmp/ccBdKcG0.s:12871  .debug_str:0000000000000c57 .LASF453
     /tmp/ccBdKcG0.s:12821  .debug_str:0000000000000a26 .LASF454
     /tmp/ccBdKcG0.s:13111  .debug_str:000000000000142a .LASF455
     /tmp/ccBdKcG0.s:12695  .debug_str:000000000000061a .LASF456
     /tmp/ccBdKcG0.s:1636   .text:00000000000007ec .LFB116
     /tmp/ccBdKcG0.s:2270   .text:0000000000000c10 .LFE116
     /tmp/ccBdKcG0.s:9880   .debug_loc:0000000000000000 .LLST55
     /tmp/ccBdKcG0.s:9986   .debug_loc:0000000000000194 .LLST56
     /tmp/ccBdKcG0.s:10088  .debug_loc:0000000000000315 .LLST57
     /tmp/ccBdKcG0.s:10190  .debug_loc:0000000000000496 .LLST58
     /tmp/ccBdKcG0.s:10303  .debug_loc:0000000000000640 .LLST59
     /tmp/ccBdKcG0.s:13105  .debug_str:0000000000001405 .LASF457
     /tmp/ccBdKcG0.s:10416  .debug_loc:00000000000007ea .LLST60
     /tmp/ccBdKcG0.s:12457  .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccBdKcG0.s:13419  .debug_str:0000000000001d14 .LASF458
     /tmp/ccBdKcG0.s:10427  .debug_loc:0000000000000820 .LLST64
     /tmp/ccBdKcG0.s:12529  .debug_str:00000000000000fd .LASF459
     /tmp/ccBdKcG0.s:10434  .debug_loc:0000000000000843 .LLST65
     /tmp/ccBdKcG0.s:12577  .debug_str:0000000000000207 .LASF460
     /tmp/ccBdKcG0.s:10441  .debug_loc:0000000000000866 .LLST66
     /tmp/ccBdKcG0.s:10448  .debug_loc:0000000000000889 .LLST67
     /tmp/ccBdKcG0.s:10455  .debug_loc:00000000000008ac .LLST68
     /tmp/ccBdKcG0.s:2139   .text:0000000000000ad4 .LVL200
     /tmp/ccBdKcG0.s:2144   .text:0000000000000ae0 .LVL201
     /tmp/ccBdKcG0.s:2152   .text:0000000000000af0 .LVL203
     /tmp/ccBdKcG0.s:2161   .text:0000000000000b08 .LVL204
     /tmp/ccBdKcG0.s:2176   .text:0000000000000b1c .LVL207
     /tmp/ccBdKcG0.s:2182   .text:0000000000000b30 .LVL208
     /tmp/ccBdKcG0.s:2186   .text:0000000000000b40 .LVL209
     /tmp/ccBdKcG0.s:2190   .text:0000000000000b50 .LVL210
GAS LISTING /tmp/ccBdKcG0.s 			page 82


     /tmp/ccBdKcG0.s:2196   .text:0000000000000b64 .LVL211
     /tmp/ccBdKcG0.s:2200   .text:0000000000000b74 .LVL212
     /tmp/ccBdKcG0.s:2204   .text:0000000000000b84 .LVL213
     /tmp/ccBdKcG0.s:2210   .text:0000000000000b98 .LVL214
     /tmp/ccBdKcG0.s:2214   .text:0000000000000ba8 .LVL215
     /tmp/ccBdKcG0.s:2024   .text:00000000000009f0 .LBB483
     /tmp/ccBdKcG0.s:2040   .text:00000000000009fc .LBE483
     /tmp/ccBdKcG0.s:2025   .text:00000000000009f0 .LBB484
     /tmp/ccBdKcG0.s:2039   .text:00000000000009fc .LBE484
     /tmp/ccBdKcG0.s:2041   .text:00000000000009fc .LBB485
     /tmp/ccBdKcG0.s:2057   .text:0000000000000a08 .LBE485
     /tmp/ccBdKcG0.s:2042   .text:00000000000009fc .LBB486
     /tmp/ccBdKcG0.s:2056   .text:0000000000000a08 .LBE486
     /tmp/ccBdKcG0.s:2058   .text:0000000000000a08 .LBB487
     /tmp/ccBdKcG0.s:2074   .text:0000000000000a14 .LBE487
     /tmp/ccBdKcG0.s:2059   .text:0000000000000a08 .LBB488
     /tmp/ccBdKcG0.s:2073   .text:0000000000000a14 .LBE488
     /tmp/ccBdKcG0.s:2086   .text:0000000000000a2c .LVL189
     /tmp/ccBdKcG0.s:2092   .text:0000000000000a40 .LVL190
     /tmp/ccBdKcG0.s:2096   .text:0000000000000a50 .LVL191
     /tmp/ccBdKcG0.s:2100   .text:0000000000000a60 .LVL192
     /tmp/ccBdKcG0.s:2106   .text:0000000000000a74 .LVL193
     /tmp/ccBdKcG0.s:2110   .text:0000000000000a84 .LVL194
     /tmp/ccBdKcG0.s:2114   .text:0000000000000a94 .LVL195
     /tmp/ccBdKcG0.s:2120   .text:0000000000000aa8 .LVL196
     /tmp/ccBdKcG0.s:2124   .text:0000000000000ab8 .LVL197
     /tmp/ccBdKcG0.s:2129   .text:0000000000000ac8 .LVL198
     /tmp/ccBdKcG0.s:1788   .text:000000000000088c .LBB475
     /tmp/ccBdKcG0.s:1888   .text:0000000000000960 .LBE475
     /tmp/ccBdKcG0.s:10474  .debug_loc:0000000000000908 .LLST62
     /tmp/ccBdKcG0.s:1827   .text:00000000000008e4 .LBB476
     /tmp/ccBdKcG0.s:1842   .text:00000000000008f0 .LBE476
     /tmp/ccBdKcG0.s:1828   .text:00000000000008e4 .LBB477
     /tmp/ccBdKcG0.s:1841   .text:00000000000008f0 .LBE477
     /tmp/ccBdKcG0.s:1875   .text:0000000000000950 .LBB478
     /tmp/ccBdKcG0.s:1883   .text:0000000000000958 .LBE478
     /tmp/ccBdKcG0.s:10481  .debug_loc:000000000000092b .LLST63
     /tmp/ccBdKcG0.s:1803   .text:00000000000008a0 .LVL153
     /tmp/ccBdKcG0.s:1808   .text:00000000000008b0 .LVL154
     /tmp/ccBdKcG0.s:1815   .text:00000000000008c4 .LVL155
     /tmp/ccBdKcG0.s:1820   .text:00000000000008d4 .LVL156
     /tmp/ccBdKcG0.s:1825   .text:00000000000008e4 .LVL157
     /tmp/ccBdKcG0.s:1847   .text:0000000000000900 .LVL158
     /tmp/ccBdKcG0.s:1852   .text:0000000000000910 .LVL159
     /tmp/ccBdKcG0.s:1857   .text:0000000000000920 .LVL160
     /tmp/ccBdKcG0.s:1864   .text:0000000000000934 .LVL161
     /tmp/ccBdKcG0.s:1869   .text:0000000000000944 .LVL162
     /tmp/ccBdKcG0.s:1887   .text:0000000000000960 .LVL165
     /tmp/ccBdKcG0.s:1657   .text:000000000000080c .LBB463
     /tmp/ccBdKcG0.s:1673   .text:0000000000000818 .LBE463
     /tmp/ccBdKcG0.s:1658   .text:000000000000080c .LBB464
     /tmp/ccBdKcG0.s:1672   .text:0000000000000818 .LBE464
     /tmp/ccBdKcG0.s:1778   .text:0000000000000884 .LBB473
     /tmp/ccBdKcG0.s:1785   .text:0000000000000888 .LBE473
     /tmp/ccBdKcG0.s:10488  .debug_loc:000000000000094e .LLST61
     /tmp/ccBdKcG0.s:1973   .text:00000000000009c4 .LBB497
     /tmp/ccBdKcG0.s:1980   .text:00000000000009c8 .LBE497
GAS LISTING /tmp/ccBdKcG0.s 			page 83


     /tmp/ccBdKcG0.s:10495  .debug_loc:0000000000000971 .LLST69
     /tmp/ccBdKcG0.s:1987   .text:00000000000009d0 .LBB499
     /tmp/ccBdKcG0.s:1995   .text:00000000000009d8 .LBE499
     /tmp/ccBdKcG0.s:10502  .debug_loc:0000000000000994 .LLST70
     /tmp/ccBdKcG0.s:10510  .debug_loc:00000000000009b8 .LLST71
     /tmp/ccBdKcG0.s:2006   .text:00000000000009e4 .LBB501
     /tmp/ccBdKcG0.s:2020   .text:00000000000009f0 .LBE501
     /tmp/ccBdKcG0.s:10517  .debug_loc:00000000000009db .LLST72
     /tmp/ccBdKcG0.s:1902   .text:000000000000096c .LVL167
     /tmp/ccBdKcG0.s:1940   .text:0000000000000998 .LVL171
     /tmp/ccBdKcG0.s:1955   .text:00000000000009a8 .LVL173
     /tmp/ccBdKcG0.s:1963   .text:00000000000009b4 .LVL175
     /tmp/ccBdKcG0.s:2230   .text:0000000000000bbc .LVL218
     /tmp/ccBdKcG0.s:2234   .text:0000000000000bc4 .LVL219
     /tmp/ccBdKcG0.s:2243   .text:0000000000000bd8 .LVL222
     /tmp/ccBdKcG0.s:2249   .text:0000000000000bec .LVL223
     /tmp/ccBdKcG0.s:2253   .text:0000000000000bfc .LVL224
     /tmp/ccBdKcG0.s:2258   .text:0000000000000c0c .LVL225
     /tmp/ccBdKcG0.s:12643  .debug_str:0000000000000464 .LASF461
     /tmp/ccBdKcG0.s:12997  .debug_str:0000000000001043 .LASF462
     /tmp/ccBdKcG0.s:1611   .text:00000000000007ec .LFE115
     /tmp/ccBdKcG0.s:10526  .debug_loc:0000000000000a01 .LLST27
     /tmp/ccBdKcG0.s:10570  .debug_loc:0000000000000ab2 .LLST28
     /tmp/ccBdKcG0.s:10698  .debug_loc:0000000000000cf2 .LLST29
     /tmp/ccBdKcG0.s:10823  .debug_loc:0000000000000f2f .LLST30
     /tmp/ccBdKcG0.s:10980  .debug_loc:000000000000117d .LLST31
     /tmp/ccBdKcG0.s:11137  .debug_loc:00000000000013cb .LLST32
     /tmp/ccBdKcG0.s:11148  .debug_loc:0000000000001401 .LLST33
     /tmp/ccBdKcG0.s:11171  .debug_loc:0000000000001470 .LLST34
     /tmp/ccBdKcG0.s:1177   .text:00000000000005d0 .LBB403
     /tmp/ccBdKcG0.s:1201   .text:00000000000005fc .LBE403
     /tmp/ccBdKcG0.s:11239  .debug_loc:0000000000001593 .LLST53
     /tmp/ccBdKcG0.s:1187   .text:00000000000005e4 .LVL107
     /tmp/ccBdKcG0.s:11250  .debug_loc:00000000000015c9 .LLST45
     /tmp/ccBdKcG0.s:1309   .text:0000000000000654 .LBB348
     /tmp/ccBdKcG0.s:11269  .debug_loc:0000000000001625 .LLST46
     /tmp/ccBdKcG0.s:1321   .text:0000000000000678 .LVL119
     /tmp/ccBdKcG0.s:1377   .text:00000000000006b4 .LVL124
     /tmp/ccBdKcG0.s:1388   .text:00000000000006d8 .LVL126
     /tmp/ccBdKcG0.s:1397   .text:00000000000006f4 .LVL128
     /tmp/ccBdKcG0.s:1324   .text:0000000000000678 .LBB351
     /tmp/ccBdKcG0.s:1348   .text:000000000000069c .LBE351
     /tmp/ccBdKcG0.s:11284  .debug_loc:000000000000165f .LLST47
     /tmp/ccBdKcG0.s:11291  .debug_loc:0000000000001682 .LLST48
     /tmp/ccBdKcG0.s:1329   .text:000000000000067c .LBB353
     /tmp/ccBdKcG0.s:1337   .text:0000000000000688 .LBE353
     /tmp/ccBdKcG0.s:11298  .debug_loc:00000000000016a5 .LLST49
     /tmp/ccBdKcG0.s:1407   .text:0000000000000700 .LBB339
     /tmp/ccBdKcG0.s:1426   .text:0000000000000728 .LBE339
     /tmp/ccBdKcG0.s:11307  .debug_loc:00000000000016ca .LLST43
     /tmp/ccBdKcG0.s:1416   .text:0000000000000710 .LBB340
     /tmp/ccBdKcG0.s:1425   .text:0000000000000728 .LBE340
     /tmp/ccBdKcG0.s:11318  .debug_loc:0000000000001700 .LLST44
     /tmp/ccBdKcG0.s:1423   .text:0000000000000728 .LVL131
     /tmp/ccBdKcG0.s:1415   .text:0000000000000710 .LVL130
     /tmp/ccBdKcG0.s:1449   .text:0000000000000730 .LBB332
     /tmp/ccBdKcG0.s:1471   .text:0000000000000744 .LBE332
GAS LISTING /tmp/ccBdKcG0.s 			page 84


     /tmp/ccBdKcG0.s:11325  .debug_loc:0000000000001723 .LLST41
     /tmp/ccBdKcG0.s:1457   .text:000000000000073c .LBB333
     /tmp/ccBdKcG0.s:1470   .text:0000000000000744 .LBE333
     /tmp/ccBdKcG0.s:11336  .debug_loc:0000000000001759 .LLST42
     /tmp/ccBdKcG0.s:1455   .text:000000000000073c .LVL133
     /tmp/ccBdKcG0.s:1473   .text:0000000000000744 .LBB327
     /tmp/ccBdKcG0.s:1480   .text:0000000000000750 .LBE327
     /tmp/ccBdKcG0.s:11343  .debug_loc:000000000000177c .LLST37
     /tmp/ccBdKcG0.s:1479   .text:0000000000000750 .LVL135
     /tmp/ccBdKcG0.s:872    .text:0000000000000470 .LBB311
     /tmp/ccBdKcG0.s:887    .text:000000000000047c .LBE311
     /tmp/ccBdKcG0.s:873    .text:0000000000000470 .LBB312
     /tmp/ccBdKcG0.s:886    .text:000000000000047c .LBE312
     /tmp/ccBdKcG0.s:891    .text:0000000000000480 .LBB313
     /tmp/ccBdKcG0.s:907    .text:000000000000048c .LBE313
     /tmp/ccBdKcG0.s:892    .text:0000000000000480 .LBB314
     /tmp/ccBdKcG0.s:906    .text:000000000000048c .LBE314
     /tmp/ccBdKcG0.s:1056   .text:000000000000050c .LBB325
     /tmp/ccBdKcG0.s:1098   .text:0000000000000574 .LBE325
     /tmp/ccBdKcG0.s:11354  .debug_loc:00000000000017b2 .LLST35
     /tmp/ccBdKcG0.s:11361  .debug_loc:00000000000017d5 .LLST36
     /tmp/ccBdKcG0.s:1063   .text:0000000000000518 .LVL91
     /tmp/ccBdKcG0.s:1069   .text:0000000000000528 .LVL93
     /tmp/ccBdKcG0.s:1092   .text:0000000000000568 .LVL94
     /tmp/ccBdKcG0.s:1096   .text:0000000000000574 .LVL95
     /tmp/ccBdKcG0.s:1512   .text:0000000000000764 .LBB328
     /tmp/ccBdKcG0.s:1522   .text:0000000000000768 .LBE328
     /tmp/ccBdKcG0.s:11368  .debug_loc:00000000000017f8 .LLST38
     /tmp/ccBdKcG0.s:1553   .text:000000000000077c .LBB330
     /tmp/ccBdKcG0.s:1595   .text:00000000000007e4 .LBE330
     /tmp/ccBdKcG0.s:11375  .debug_loc:000000000000181b .LLST39
     /tmp/ccBdKcG0.s:1554   .text:000000000000077c .LBB331
     /tmp/ccBdKcG0.s:1594   .text:00000000000007e4 .LBE331
     /tmp/ccBdKcG0.s:11382  .debug_loc:000000000000183e .LLST40
     /tmp/ccBdKcG0.s:1558   .text:0000000000000788 .LVL140
     /tmp/ccBdKcG0.s:1564   .text:0000000000000798 .LVL142
     /tmp/ccBdKcG0.s:1588   .text:00000000000007d8 .LVL144
     /tmp/ccBdKcG0.s:1592   .text:00000000000007e4 .LVL145
     /tmp/ccBdKcG0.s:1256   .text:0000000000000634 .LBB373
     /tmp/ccBdKcG0.s:1266   .text:0000000000000638 .LBE373
     /tmp/ccBdKcG0.s:11389  .debug_loc:0000000000001861 .LLST50
     /tmp/ccBdKcG0.s:1208   .text:0000000000000608 .LBB386
     /tmp/ccBdKcG0.s:1217   .text:0000000000000610 .LBE386
     /tmp/ccBdKcG0.s:11396  .debug_loc:0000000000001884 .LLST51
     /tmp/ccBdKcG0.s:1223   .text:0000000000000618 .LBB388
     /tmp/ccBdKcG0.s:1233   .text:000000000000061c .LBE388
     /tmp/ccBdKcG0.s:11403  .debug_loc:00000000000018a7 .LLST52
     /tmp/ccBdKcG0.s:1126   .text:0000000000000590 .LBB453
     /tmp/ccBdKcG0.s:1137   .text:0000000000000594 .LBE453
     /tmp/ccBdKcG0.s:11410  .debug_loc:00000000000018ca .LLST54
     /tmp/ccBdKcG0.s:1118   .text:0000000000000584 .LVL97
     /tmp/ccBdKcG0.s:1122   .text:0000000000000590 .LVL98
     /tmp/ccBdKcG0.s:1168   .text:00000000000005c0 .LVL102
     /tmp/ccBdKcG0.s:1172   .text:00000000000005cc .LVL103
     /tmp/ccBdKcG0.s:1221   .text:0000000000000618 .LVL112
     /tmp/ccBdKcG0.s:1254   .text:0000000000000634 .LVL114
     /tmp/ccBdKcG0.s:1287   .text:000000000000064c .LVL116
GAS LISTING /tmp/ccBdKcG0.s 			page 85


     /tmp/ccBdKcG0.s:1401   .text:0000000000000700 .LVL129
     /tmp/ccBdKcG0.s:1510   .text:0000000000000764 .LVL137
     /tmp/ccBdKcG0.s:12875  .debug_str:0000000000000c81 .LASF463
     /tmp/ccBdKcG0.s:13007  .debug_str:0000000000001098 .LASF464
     /tmp/ccBdKcG0.s:820    .text:0000000000000448 .LFE114
     /tmp/ccBdKcG0.s:11417  .debug_loc:00000000000018ed .LLST3
     /tmp/ccBdKcG0.s:11560  .debug_loc:0000000000001b0f .LLST4
     /tmp/ccBdKcG0.s:11688  .debug_loc:0000000000001d4f .LLST5
     /tmp/ccBdKcG0.s:11816  .debug_loc:0000000000001f8f .LLST6
     /tmp/ccBdKcG0.s:11973  .debug_loc:00000000000021dd .LLST7
     /tmp/ccBdKcG0.s:12130  .debug_loc:000000000000242b .LLST8
     /tmp/ccBdKcG0.s:12145  .debug_loc:0000000000002474 .LLST9
     /tmp/ccBdKcG0.s:12156  .debug_loc:00000000000024aa .LLST10
     /tmp/ccBdKcG0.s:520    .text:0000000000000238 .LBB233
     /tmp/ccBdKcG0.s:547    .text:0000000000000264 .LBE233
     /tmp/ccBdKcG0.s:12272  .debug_loc:0000000000002675 .LLST24
     /tmp/ccBdKcG0.s:530    .text:000000000000024c .LVL34
     /tmp/ccBdKcG0.s:592    .text:00000000000002a8 .LBB200
     /tmp/ccBdKcG0.s:680    .text:0000000000000354 .LBE200
     /tmp/ccBdKcG0.s:12283  .debug_loc:00000000000026ab .LLST18
     /tmp/ccBdKcG0.s:595    .text:00000000000002a8 .LBB201
     /tmp/ccBdKcG0.s:12302  .debug_loc:0000000000002707 .LLST19
     /tmp/ccBdKcG0.s:608    .text:00000000000002cc .LVL49
     /tmp/ccBdKcG0.s:652    .text:0000000000000308 .LVL55
     /tmp/ccBdKcG0.s:663    .text:000000000000032c .LVL57
     /tmp/ccBdKcG0.s:672    .text:0000000000000348 .LVL59
     /tmp/ccBdKcG0.s:611    .text:00000000000002cc .LBB204
     /tmp/ccBdKcG0.s:636    .text:00000000000002f0 .LBE204
     /tmp/ccBdKcG0.s:12317  .debug_loc:0000000000002741 .LLST20
     /tmp/ccBdKcG0.s:12324  .debug_loc:0000000000002764 .LLST21
     /tmp/ccBdKcG0.s:616    .text:00000000000002d0 .LBB206
     /tmp/ccBdKcG0.s:625    .text:00000000000002dc .LBE206
     /tmp/ccBdKcG0.s:12331  .debug_loc:0000000000002787 .LLST22
     /tmp/ccBdKcG0.s:682    .text:0000000000000354 .LBB196
     /tmp/ccBdKcG0.s:692    .text:0000000000000364 .LBE196
     /tmp/ccBdKcG0.s:12340  .debug_loc:00000000000027ac .LLST17
     /tmp/ccBdKcG0.s:688    .text:0000000000000360 .LVL61
     /tmp/ccBdKcG0.s:697    .text:0000000000000368 .LBB193
     /tmp/ccBdKcG0.s:723    .text:0000000000000394 .LBE193
     /tmp/ccBdKcG0.s:12351  .debug_loc:00000000000027e2 .LLST16
     /tmp/ccBdKcG0.s:703    .text:0000000000000374 .LVL64
     /tmp/ccBdKcG0.s:716    .text:000000000000038c .LVL67
     /tmp/ccBdKcG0.s:725    .text:0000000000000394 .LBB190
     /tmp/ccBdKcG0.s:751    .text:00000000000003c0 .LBE190
     /tmp/ccBdKcG0.s:12362  .debug_loc:0000000000002818 .LLST13
     /tmp/ccBdKcG0.s:731    .text:00000000000003a0 .LVL70
     /tmp/ccBdKcG0.s:744    .text:00000000000003b8 .LVL73
     /tmp/ccBdKcG0.s:197    .text:00000000000000c8 .LBB174
     /tmp/ccBdKcG0.s:212    .text:00000000000000d4 .LBE174
     /tmp/ccBdKcG0.s:198    .text:00000000000000c8 .LBB175
     /tmp/ccBdKcG0.s:211    .text:00000000000000d4 .LBE175
     /tmp/ccBdKcG0.s:216    .text:00000000000000d8 .LBB176
     /tmp/ccBdKcG0.s:232    .text:00000000000000e4 .LBE176
     /tmp/ccBdKcG0.s:217    .text:00000000000000d8 .LBB177
     /tmp/ccBdKcG0.s:231    .text:00000000000000e4 .LBE177
     /tmp/ccBdKcG0.s:380    .text:0000000000000164 .LBB188
     /tmp/ccBdKcG0.s:425    .text:00000000000001d0 .LBE188
GAS LISTING /tmp/ccBdKcG0.s 			page 86


     /tmp/ccBdKcG0.s:12373  .debug_loc:000000000000284e .LLST11
     /tmp/ccBdKcG0.s:12380  .debug_loc:0000000000002871 .LLST12
     /tmp/ccBdKcG0.s:388    .text:0000000000000170 .LVL14
     /tmp/ccBdKcG0.s:393    .text:0000000000000180 .LVL15
     /tmp/ccBdKcG0.s:416    .text:00000000000001c0 .LVL16
     /tmp/ccBdKcG0.s:420    .text:00000000000001cc .LVL17
     /tmp/ccBdKcG0.s:765    .text:00000000000003dc .LBB191
     /tmp/ccBdKcG0.s:807    .text:0000000000000444 .LBE191
     /tmp/ccBdKcG0.s:12387  .debug_loc:0000000000002894 .LLST14
     /tmp/ccBdKcG0.s:766    .text:00000000000003dc .LBB192
     /tmp/ccBdKcG0.s:806    .text:0000000000000444 .LBE192
     /tmp/ccBdKcG0.s:12394  .debug_loc:00000000000028b7 .LLST15
     /tmp/ccBdKcG0.s:770    .text:00000000000003e8 .LVL79
     /tmp/ccBdKcG0.s:776    .text:00000000000003f8 .LVL81
     /tmp/ccBdKcG0.s:800    .text:0000000000000438 .LVL83
     /tmp/ccBdKcG0.s:804    .text:0000000000000444 .LVL84
     /tmp/ccBdKcG0.s:554    .text:0000000000000270 .LBB224
     /tmp/ccBdKcG0.s:563    .text:0000000000000278 .LBE224
     /tmp/ccBdKcG0.s:12401  .debug_loc:00000000000028da .LLST23
     /tmp/ccBdKcG0.s:448    .text:00000000000001e8 .LBB261
     /tmp/ccBdKcG0.s:459    .text:00000000000001ec .LBE261
     /tmp/ccBdKcG0.s:12408  .debug_loc:00000000000028fd .LLST25
     /tmp/ccBdKcG0.s:461    .text:00000000000001ec .LBB263
     /tmp/ccBdKcG0.s:472    .text:00000000000001f0 .LBE263
     /tmp/ccBdKcG0.s:12415  .debug_loc:0000000000002920 .LLST26
     /tmp/ccBdKcG0.s:438    .text:00000000000001d8 .LVL19
     /tmp/ccBdKcG0.s:442    .text:00000000000001e4 .LVL20
     /tmp/ccBdKcG0.s:508    .text:0000000000000224 .LVL28
     /tmp/ccBdKcG0.s:512    .text:0000000000000230 .LVL29
     /tmp/ccBdKcG0.s:567    .text:0000000000000280 .LVL42
     /tmp/ccBdKcG0.s:578    .text:0000000000000294 .LVL44
     /tmp/ccBdKcG0.s:587    .text:00000000000002a4 .LVL46
     /tmp/ccBdKcG0.s:676    .text:0000000000000354 .LVL60
     /tmp/ccBdKcG0.s:756    .text:00000000000003cc .LVL76
     /tmp/ccBdKcG0.s:12907  .debug_str:0000000000000db8 .LASF465
     /tmp/ccBdKcG0.s:13283  .debug_str:00000000000018e2 .LASF466
     /tmp/ccBdKcG0.s:13     .text:0000000000000000 .LFB113
     /tmp/ccBdKcG0.s:163    .text:000000000000009c .LFE113
     /tmp/ccBdKcG0.s:91     .text:0000000000000068 .LBB125
     /tmp/ccBdKcG0.s:160    .text:000000000000009c .LBE125
     /tmp/ccBdKcG0.s:93     .text:0000000000000068 .LBB126
     /tmp/ccBdKcG0.s:109    .text:0000000000000074 .LBE126
     /tmp/ccBdKcG0.s:94     .text:0000000000000068 .LBB127
     /tmp/ccBdKcG0.s:108    .text:0000000000000074 .LBE127
     /tmp/ccBdKcG0.s:110    .text:0000000000000074 .LBB128
     /tmp/ccBdKcG0.s:126    .text:0000000000000080 .LBE128
     /tmp/ccBdKcG0.s:111    .text:0000000000000074 .LBB129
     /tmp/ccBdKcG0.s:125    .text:0000000000000080 .LBE129
     /tmp/ccBdKcG0.s:135    .text:0000000000000090 .LBB130
     /tmp/ccBdKcG0.s:146    .text:0000000000000094 .LBE130
     /tmp/ccBdKcG0.s:12422  .debug_loc:0000000000002943 .LLST1
     /tmp/ccBdKcG0.s:148    .text:0000000000000094 .LBB132
     /tmp/ccBdKcG0.s:159    .text:000000000000009c .LBE132
     /tmp/ccBdKcG0.s:133    .text:0000000000000090 .LVL7
     /tmp/ccBdKcG0.s:45     .text:0000000000000040 .LBB123
     /tmp/ccBdKcG0.s:53     .text:0000000000000044 .LBE123
     /tmp/ccBdKcG0.s:12429  .debug_loc:0000000000002966 .LLST0
GAS LISTING /tmp/ccBdKcG0.s 			page 87


     /tmp/ccBdKcG0.s:60     .text:0000000000000048 .LBB134
     /tmp/ccBdKcG0.s:73     .text:0000000000000050 .LBE134
     /tmp/ccBdKcG0.s:12436  .debug_loc:0000000000002989 .LLST2
     /tmp/ccBdKcG0.s:32     .text:0000000000000020 .LVL0
     /tmp/ccBdKcG0.s:13205  .debug_str:0000000000001691 .LASF468
     /tmp/ccBdKcG0.s:13037  .debug_str:00000000000011b2 .LASF467
     /tmp/ccBdKcG0.s:12621  .debug_str:0000000000000381 .LASF469
     /tmp/ccBdKcG0.s:13411  .debug_str:0000000000001cb6 .LASF470
     /tmp/ccBdKcG0.s:12955  .debug_str:0000000000000f06 .LASF472
     /tmp/ccBdKcG0.s:13333  .debug_str:0000000000001a77 .LASF471
     /tmp/ccBdKcG0.s:13399  .debug_str:0000000000001c65 .LASF473
     /tmp/ccBdKcG0.s:12633  .debug_str:0000000000000418 .LASF481
     /tmp/ccBdKcG0.s:12523  .debug_str:00000000000000d3 .LASF482
     /tmp/ccBdKcG0.s:1639   .text:00000000000007ec .LVL147
     /tmp/ccBdKcG0.s:1801   .text:0000000000000898 .LVL152
     /tmp/ccBdKcG0.s:1890   .text:0000000000000964 .LVL166
     /tmp/ccBdKcG0.s:1909   .text:0000000000000970 .LVL168
     /tmp/ccBdKcG0.s:1932   .text:0000000000000990 .LVL170
     /tmp/ccBdKcG0.s:1957   .text:00000000000009ac .LVL174
     /tmp/ccBdKcG0.s:1965   .text:00000000000009b8 .LVL176
     /tmp/ccBdKcG0.s:2084   .text:0000000000000a24 .LVL188
     /tmp/ccBdKcG0.s:2133   .text:0000000000000acc .LVL199
     /tmp/ccBdKcG0.s:2218   .text:0000000000000bac .LVL216
     /tmp/ccBdKcG0.s:2228   .text:0000000000000bb4 .LVL217
     /tmp/ccBdKcG0.s:2236   .text:0000000000000bc8 .LVL220
     /tmp/ccBdKcG0.s:2241   .text:0000000000000bd0 .LVL221
     /tmp/ccBdKcG0.s:1949   .text:00000000000009a0 .LVL172
     /tmp/ccBdKcG0.s:1978   .text:00000000000009c8 .LVL178
     /tmp/ccBdKcG0.s:2017   .text:00000000000009f0 .LVL183
     /tmp/ccBdKcG0.s:1983   .text:00000000000009cc .LVL179
     /tmp/ccBdKcG0.s:1671   .text:0000000000000818 .LVL148
     /tmp/ccBdKcG0.s:1922   .text:000000000000097c .LVL169
     /tmp/ccBdKcG0.s:2038   .text:00000000000009fc .LVL184
     /tmp/ccBdKcG0.s:2055   .text:0000000000000a08 .LVL185
     /tmp/ccBdKcG0.s:2072   .text:0000000000000a14 .LVL186
     /tmp/ccBdKcG0.s:2079   .text:0000000000000a18 .LVL187
     /tmp/ccBdKcG0.s:2146   .text:0000000000000ae4 .LVL202
     /tmp/ccBdKcG0.s:2167   .text:0000000000000b0c .LVL205
     /tmp/ccBdKcG0.s:2174   .text:0000000000000b14 .LVL206
     /tmp/ccBdKcG0.s:1796   .text:0000000000000890 .LVL151
     /tmp/ccBdKcG0.s:1874   .text:0000000000000950 .LVL163
     /tmp/ccBdKcG0.s:1881   .text:0000000000000958 .LVL164
     /tmp/ccBdKcG0.s:1777   .text:0000000000000884 .LVL149
     /tmp/ccBdKcG0.s:1783   .text:0000000000000888 .LVL150
     /tmp/ccBdKcG0.s:1972   .text:00000000000009c4 .LVL177
     /tmp/ccBdKcG0.s:1986   .text:00000000000009d0 .LVL180
     /tmp/ccBdKcG0.s:1993   .text:00000000000009d8 .LVL181
     /tmp/ccBdKcG0.s:2004   .text:00000000000009e4 .LVL182
     /tmp/ccBdKcG0.s:851    .text:0000000000000448 .LVL85
     /tmp/ccBdKcG0.s:1060   .text:0000000000000510 .LVL90
     /tmp/ccBdKcG0.s:1112   .text:000000000000057c .LVL96
     /tmp/ccBdKcG0.s:1160   .text:00000000000005b8 .LVL101
     /tmp/ccBdKcG0.s:1394   .text:00000000000006e8 .LVL127
     /tmp/ccBdKcG0.s:1574   .text:00000000000007b0 .LVL143
     /tmp/ccBdKcG0.s:1174   .text:00000000000005d0 .LVL104
     /tmp/ccBdKcG0.s:1184   .text:00000000000005d8 .LVL106
     /tmp/ccBdKcG0.s:1199   .text:00000000000005fc .LVL108
GAS LISTING /tmp/ccBdKcG0.s 			page 88


     /tmp/ccBdKcG0.s:1241   .text:0000000000000624 .LVL113
     /tmp/ccBdKcG0.s:1275   .text:0000000000000640 .LVL115
     /tmp/ccBdKcG0.s:1303   .text:0000000000000654 .LVL117
     /tmp/ccBdKcG0.s:1315   .text:0000000000000664 .LVL118
     /tmp/ccBdKcG0.s:1369   .text:00000000000006a8 .LVL123
     /tmp/ccBdKcG0.s:1438   .text:0000000000000730 .LVL132
     /tmp/ccBdKcG0.s:1467   .text:0000000000000744 .LVL134
     /tmp/ccBdKcG0.s:1504   .text:0000000000000758 .LVL136
     /tmp/ccBdKcG0.s:1536   .text:0000000000000770 .LVL138
     /tmp/ccBdKcG0.s:1066   .text:000000000000051c .LVL92
     /tmp/ccBdKcG0.s:1182   .text:00000000000005d4 .LVL105
     /tmp/ccBdKcG0.s:1213   .text:000000000000060c .LVL110
     /tmp/ccBdKcG0.s:890    .text:0000000000000480 .LVL86
     /tmp/ccBdKcG0.s:1150   .text:00000000000005a4 .LVL100
     /tmp/ccBdKcG0.s:905    .text:000000000000048c .LVL87
     /tmp/ccBdKcG0.s:1053   .text:0000000000000508 .LVL88
     /tmp/ccBdKcG0.s:1380   .text:00000000000006b8 .LVL125
     /tmp/ccBdKcG0.s:1561   .text:000000000000078c .LVL141
     /tmp/ccBdKcG0.s:1598   .text:00000000000007e8 .LVL146
     /tmp/ccBdKcG0.s:1346   .text:000000000000069c .LVL122
     /tmp/ccBdKcG0.s:1328   .text:000000000000067c .LVL120
     /tmp/ccBdKcG0.s:1335   .text:0000000000000688 .LVL121
     /tmp/ccBdKcG0.s:1055   .text:000000000000050c .LVL89
     /tmp/ccBdKcG0.s:1552   .text:000000000000077c .LVL139
     /tmp/ccBdKcG0.s:1207   .text:0000000000000608 .LVL109
     /tmp/ccBdKcG0.s:1215   .text:0000000000000610 .LVL111
     /tmp/ccBdKcG0.s:1134   .text:0000000000000594 .LVL99
     /tmp/ccBdKcG0.s:174    .text:000000000000009c .LVL9
     /tmp/ccBdKcG0.s:385    .text:0000000000000168 .LVL13
     /tmp/ccBdKcG0.s:422    .text:00000000000001d0 .LVL18
     /tmp/ccBdKcG0.s:500    .text:000000000000021c .LVL27
     /tmp/ccBdKcG0.s:515    .text:0000000000000234 .LVL30
     /tmp/ccBdKcG0.s:517    .text:0000000000000238 .LVL31
     /tmp/ccBdKcG0.s:537    .text:0000000000000258 .LVL35
     /tmp/ccBdKcG0.s:539    .text:000000000000025c .LVL36
     /tmp/ccBdKcG0.s:543    .text:0000000000000260 .LVL37
     /tmp/ccBdKcG0.s:545    .text:0000000000000264 .LVL38
     /tmp/ccBdKcG0.s:602    .text:00000000000002b8 .LVL48
     /tmp/ccBdKcG0.s:645    .text:00000000000002fc .LVL54
     /tmp/ccBdKcG0.s:655    .text:000000000000030c .LVL56
     /tmp/ccBdKcG0.s:691    .text:0000000000000364 .LVL62
     /tmp/ccBdKcG0.s:694    .text:0000000000000368 .LVL63
     /tmp/ccBdKcG0.s:708    .text:000000000000037c .LVL65
     /tmp/ccBdKcG0.s:710    .text:0000000000000380 .LVL66
     /tmp/ccBdKcG0.s:719    .text:0000000000000390 .LVL68
     /tmp/ccBdKcG0.s:721    .text:0000000000000394 .LVL69
     /tmp/ccBdKcG0.s:736    .text:00000000000003a8 .LVL71
     /tmp/ccBdKcG0.s:738    .text:00000000000003ac .LVL72
     /tmp/ccBdKcG0.s:747    .text:00000000000003bc .LVL74
     /tmp/ccBdKcG0.s:749    .text:00000000000003c0 .LVL75
     /tmp/ccBdKcG0.s:786    .text:0000000000000410 .LVL82
     /tmp/ccBdKcG0.s:444    .text:00000000000001e8 .LVL21
     /tmp/ccBdKcG0.s:527    .text:0000000000000240 .LVL33
     /tmp/ccBdKcG0.s:569    .text:0000000000000284 .LVL43
     /tmp/ccBdKcG0.s:580    .text:0000000000000298 .LVL45
     /tmp/ccBdKcG0.s:589    .text:00000000000002a8 .LVL47
     /tmp/ccBdKcG0.s:758    .text:00000000000003d0 .LVL77
GAS LISTING /tmp/ccBdKcG0.s 			page 89


     /tmp/ccBdKcG0.s:525    .text:000000000000023c .LVL32
     /tmp/ccBdKcG0.s:773    .text:00000000000003ec .LVL80
     /tmp/ccBdKcG0.s:559    .text:0000000000000274 .LVL40
     /tmp/ccBdKcG0.s:215    .text:00000000000000d8 .LVL10
     /tmp/ccBdKcG0.s:487    .text:0000000000000204 .LVL25
     /tmp/ccBdKcG0.s:669    .text:000000000000033c .LVL58
     /tmp/ccBdKcG0.s:230    .text:00000000000000e4 .LVL11
     /tmp/ccBdKcG0.s:490    .text:0000000000000208 .LVL26
     /tmp/ccBdKcG0.s:484    .text:0000000000000200 .LVL24
     /tmp/ccBdKcG0.s:641    .text:00000000000002f4 .LVL53
     /tmp/ccBdKcG0.s:634    .text:00000000000002f0 .LVL52
     /tmp/ccBdKcG0.s:615    .text:00000000000002d0 .LVL50
     /tmp/ccBdKcG0.s:623    .text:00000000000002dc .LVL51
     /tmp/ccBdKcG0.s:379    .text:0000000000000164 .LVL12
     /tmp/ccBdKcG0.s:764    .text:00000000000003dc .LVL78
     /tmp/ccBdKcG0.s:553    .text:0000000000000270 .LVL39
     /tmp/ccBdKcG0.s:561    .text:0000000000000278 .LVL41
     /tmp/ccBdKcG0.s:456    .text:00000000000001ec .LVL22
     /tmp/ccBdKcG0.s:469    .text:00000000000001f0 .LVL23
     /tmp/ccBdKcG0.s:143    .text:0000000000000094 .LVL8
     /tmp/ccBdKcG0.s:44     .text:0000000000000040 .LVL1
     /tmp/ccBdKcG0.s:51     .text:0000000000000044 .LVL2
     /tmp/ccBdKcG0.s:59     .text:0000000000000048 .LVL3
     /tmp/ccBdKcG0.s:70     .text:0000000000000050 .LVL4
     /tmp/ccBdKcG0.s:2324   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccBdKcG0.s:610    .text:00000000000002cc .LBE201
     /tmp/ccBdKcG0.s:647    .text:00000000000002fc .LBB208
     /tmp/ccBdKcG0.s:679    .text:0000000000000354 .LBE208
     /tmp/ccBdKcG0.s:1306   .text:0000000000000654 .LBB347
     /tmp/ccBdKcG0.s:1351   .text:00000000000006a0 .LBE347
     /tmp/ccBdKcG0.s:1371   .text:00000000000006a8 .LBB356
     /tmp/ccBdKcG0.s:1405   .text:0000000000000700 .LBE356
     /tmp/ccBdKcG0.s:1323   .text:0000000000000678 .LBE348
     /tmp/ccBdKcG0.s:1372   .text:00000000000006a8 .LBB355
     /tmp/ccBdKcG0.s:1404   .text:0000000000000700 .LBE355
     /tmp/ccBdKcG0.s:2022   .text:00000000000009f0 .LBB482
     /tmp/ccBdKcG0.s:2164   .text:0000000000000b08 .LBE482
     /tmp/ccBdKcG0.s:2169   .text:0000000000000b0c .LBB493
     /tmp/ccBdKcG0.s:2222   .text:0000000000000bac .LBE493
     /tmp/ccBdKcG0.s:2135   .text:0000000000000acc .LBB490
     /tmp/ccBdKcG0.s:2162   .text:0000000000000b08 .LBE490
     /tmp/ccBdKcG0.s:2171   .text:0000000000000b0c .LBB491
     /tmp/ccBdKcG0.s:2220   .text:0000000000000bac .LBE491
     /tmp/ccBdKcG0.s:823    .gcc_except_table:0000000000000000 .LLSDA114
     /tmp/ccBdKcG0.s:1613   .gcc_except_table:000000000000002b .LLSDA115

UNDEFINED SYMBOLS
_ZN9Scheduler12update_sleepEv
_ZN3TCB16timeSliceCounterE
_ZN3TCB7runningE
_ZN3TCB5yieldEv
_ZN5StdIO7obufferE
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
_ZN15MemoryAllocator11getInstanceEv
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
GAS LISTING /tmp/ccBdKcG0.s 			page 90


_ZN3TCB12createThreadEPFvPvES0_Pm
_ZN3TCB8dispatchEv
_ZN3TCB12deleteThreadEPS_
_ZN10KSemaphore5cacheE
_ZN11ObjectCache9alloc_objEv
_ZN10KSemaphore16activeSemaphoresE
_ZN11ObjectCachenwEm
_ZN11ObjectCacheC1EPKcmPFvPvES4_NS_12SlabMetaTypeE
_ZN11ObjectCachedlEPv
_Unwind_Resume
_ZN10KSemaphore5closeEPS_
_ZN10KSemaphore6existsEPS_
_ZN3TCB5sleepEm
_ZN5StdIO7ibufferE
__gxx_personality_v0
_ZN10KSemaphoreD1Ev
_ZN11ObjectCache8free_objEPv
_Z12kprintStringPKc
_Z9kprintIntmib
_ZN5StdIO15console_handlerEv
thread_exit
_ZN15MemoryAllocator18getFreeSegmentMetaEPv
_ZN5Pager11getInstanceEv
_ZN5Pager6id_mapEPvS0_12PMTEntryBits
_ZN3TCB13panicDispatchEv
