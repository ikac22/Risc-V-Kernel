GAS LISTING /tmp/ccGQJ8tf.s 			page 1


   1              		.file	"memory_allocator.cpp"
   2              		.option nopic
   3              		.option norelax
   4              		.attribute arch, "rv64i2p0_m2p0_a2p0"
   5              		.attribute unaligned_access, 0
   6              		.attribute stack_align, 16
   7              		.text
   8              	.Ltext0:
   9              		.align	2
  10              		.globl	_ZN15MemoryAllocator11getInstanceEv
  12              	_ZN15MemoryAllocator11getInstanceEv:
  13              	.LFB113:
  14              		.file 1 "src/kernel/mmanagement/memory_allocator.cpp"
   1:src/kernel/mmanagement/memory_allocator.cpp **** #include"../../../h/kernel_lib.h"
   2:src/kernel/mmanagement/memory_allocator.cpp **** 
   3:src/kernel/mmanagement/memory_allocator.cpp **** MemoryAllocator* MemoryAllocator::allocator = nullptr;
   4:src/kernel/mmanagement/memory_allocator.cpp **** 
   5:src/kernel/mmanagement/memory_allocator.cpp **** MemoryAllocator& MemoryAllocator::getInstance(){
  15              		.loc 1 5 48
  16              		.cfi_startproc
  17              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  18              		.cfi_lsda 0x1b,.LLSDA113
   6:src/kernel/mmanagement/memory_allocator.cpp ****     if(!allocator){
  19              		.loc 1 6 5
  20              	.LBB14:
  21              		.loc 1 6 8 is_stmt 0
  22 0000 97070000 		lla	a5,_ZN15MemoryAllocator9allocatorE
  22      93870700 
  23 0008 83B70700 		ld	a5,0(a5)
  24              		.loc 1 6 5
  25 000c 638A0700 		beq	a5,zero,.L12
  26              	.LBE14:
   7:src/kernel/mmanagement/memory_allocator.cpp ****         allocator = (MemoryAllocator*)SlabAllocator::getInstance().kmalloc(sizeof(MemoryAllocator))
   8:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->node_cache = new ObjectCache("free_seg_meta_cache", sizeof(FreeSegment), 0, 0);
   9:src/kernel/mmanagement/memory_allocator.cpp ****         if(!allocator->node_cache){ kprintString("MEM ALLOC node cache not allocated\n"); while(1);
  10:src/kernel/mmanagement/memory_allocator.cpp ****         
  11:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->fall_head = nullptr;
  12:src/kernel/mmanagement/memory_allocator.cpp ****         //allocator->fmem_head = (FreeSegment*)NoAlloc::getEndAddress();
  13:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->fmem_head = (FreeSegment*)allocator->node_cache->alloc_obj();
  14:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->fmem_head->next = nullptr;
  15:src/kernel/mmanagement/memory_allocator.cpp **** 
  16:src/kernel/mmanagement/memory_allocator.cpp ****         size_t start_addr = (((size_t)NoAlloc::getEndAddress() - 1) & (~0xfff)) + 0x1000;
  17:src/kernel/mmanagement/memory_allocator.cpp ****         KVALCHECKPRINT("MemoryAllocator start address: ", start_addr);
  18:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->fmem_head->addr = (void*) start_addr;
  19:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->fmem_head->size = ((size_t)HEAP_END_ADDR - start_addr);
  20:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->init = true;
  21:src/kernel/mmanagement/memory_allocator.cpp ****     }
  22:src/kernel/mmanagement/memory_allocator.cpp ****     return *allocator;
  27              		.loc 1 22 5 is_stmt 1
  28              		.loc 1 22 13 is_stmt 0
  29 0010 97070000 		lla	a5,_ZN15MemoryAllocator9allocatorE
  29      93870700 
  30 0018 03B50700 		ld	a0,0(a5)
  23:src/kernel/mmanagement/memory_allocator.cpp **** }
  31              		.loc 1 23 1
  32 001c 67800000 		ret
  33              	.L12:
GAS LISTING /tmp/ccGQJ8tf.s 			page 2


   5:src/kernel/mmanagement/memory_allocator.cpp ****     if(!allocator){
  34              		.loc 1 5 48
  35 0020 130101FE 		addi	sp,sp,-32
  36              		.cfi_def_cfa_offset 32
  37 0024 233C1100 		sd	ra,24(sp)
  38 0028 23388100 		sd	s0,16(sp)
  39 002c 23349100 		sd	s1,8(sp)
  40 0030 23302101 		sd	s2,0(sp)
  41              		.cfi_offset 1, -8
  42              		.cfi_offset 8, -16
  43              		.cfi_offset 9, -24
  44              		.cfi_offset 18, -32
  45 0034 13040102 		addi	s0,sp,32
  46              		.cfi_def_cfa 8, 0
  47              	.LBB19:
  48              	.LBB15:
   7:src/kernel/mmanagement/memory_allocator.cpp ****         allocator = (MemoryAllocator*)SlabAllocator::getInstance().kmalloc(sizeof(MemoryAllocator))
  49              		.loc 1 7 9 is_stmt 1
  50              	.LEHB0:
   7:src/kernel/mmanagement/memory_allocator.cpp ****         allocator = (MemoryAllocator*)SlabAllocator::getInstance().kmalloc(sizeof(MemoryAllocator))
  51              		.loc 1 7 66 is_stmt 0
  52 0038 97000000 		call	_ZN13SlabAllocator11getInstanceEv
  52      E7800000 
  53              	.LVL0:
   7:src/kernel/mmanagement/memory_allocator.cpp ****         allocator = (MemoryAllocator*)SlabAllocator::getInstance().kmalloc(sizeof(MemoryAllocator))
  54              		.loc 1 7 75
  55 0040 93050002 		li	a1,32
  56 0044 97000000 		call	_ZN13SlabAllocator7kmallocEm
  56      E7800000 
  57              	.LVL1:
   7:src/kernel/mmanagement/memory_allocator.cpp ****         allocator = (MemoryAllocator*)SlabAllocator::getInstance().kmalloc(sizeof(MemoryAllocator))
  58              		.loc 1 7 19
  59 004c 97070000 		sd	a0,_ZN15MemoryAllocator9allocatorE,a5
  59      23B0A700 
   8:src/kernel/mmanagement/memory_allocator.cpp ****         if(!allocator->node_cache){ kprintString("MEM ALLOC node cache not allocated\n"); while(1);
  60              		.loc 1 8 9 is_stmt 1
   8:src/kernel/mmanagement/memory_allocator.cpp ****         if(!allocator->node_cache){ kprintString("MEM ALLOC node cache not allocated\n"); while(1);
  61              		.loc 1 8 97 is_stmt 0
  62 0054 13058005 		li	a0,88
  63 0058 97000000 		call	_ZN11ObjectCachenwEm
  63      E7800000 
  64              	.LVL2:
  65              	.LEHE0:
  66 0060 93040500 		mv	s1,a0
  67 0064 93070000 		li	a5,0
  68 0068 13070000 		li	a4,0
  69 006c 93060000 		li	a3,0
  70 0070 13068001 		li	a2,24
  71 0074 97050000 		lla	a1,.LC0
  71      93850500 
  72              	.LEHB1:
  73 007c 97000000 		call	_ZN11ObjectCacheC1EPKcmPFvPvES4_NS_12SlabMetaTypeE
  73      E7800000 
  74              	.LVL3:
  75              	.LEHE1:
   8:src/kernel/mmanagement/memory_allocator.cpp ****         if(!allocator->node_cache){ kprintString("MEM ALLOC node cache not allocated\n"); while(1);
  76              		.loc 1 8 20 discriminator 2
GAS LISTING /tmp/ccGQJ8tf.s 			page 3


  77 0084 97070000 		lla	a5,_ZN15MemoryAllocator9allocatorE
  77      93870700 
  78 008c 03B90700 		ld	s2,0(a5)
   8:src/kernel/mmanagement/memory_allocator.cpp ****         if(!allocator->node_cache){ kprintString("MEM ALLOC node cache not allocated\n"); while(1);
  79              		.loc 1 8 31 discriminator 2
  80 0090 233C9900 		sd	s1,24(s2)
   9:src/kernel/mmanagement/memory_allocator.cpp ****         
  81              		.loc 1 9 9 is_stmt 1 discriminator 2
  82 0094 6388040C 		beq	s1,zero,.L13
  11:src/kernel/mmanagement/memory_allocator.cpp ****         //allocator->fmem_head = (FreeSegment*)NoAlloc::getEndAddress();
  83              		.loc 1 11 9
  11:src/kernel/mmanagement/memory_allocator.cpp ****         //allocator->fmem_head = (FreeSegment*)NoAlloc::getEndAddress();
  84              		.loc 1 11 30 is_stmt 0
  85 0098 23380900 		sd	zero,16(s2)
  13:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->fmem_head->next = nullptr;
  86              		.loc 1 13 9 is_stmt 1
  13:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->fmem_head->next = nullptr;
  87              		.loc 1 13 78 is_stmt 0
  88 009c 13850400 		mv	a0,s1
  89              	.LEHB2:
  90 00a0 97000000 		call	_ZN11ObjectCache9alloc_objEv
  90      E7800000 
  91              	.LVL4:
  13:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->fmem_head->next = nullptr;
  92              		.loc 1 13 30
  93 00a8 2334A900 		sd	a0,8(s2)
  14:src/kernel/mmanagement/memory_allocator.cpp **** 
  94              		.loc 1 14 9 is_stmt 1
  14:src/kernel/mmanagement/memory_allocator.cpp **** 
  95              		.loc 1 14 20 is_stmt 0
  96 00ac 17090000 		lla	s2,_ZN15MemoryAllocator9allocatorE
  96      13090900 
  97 00b4 83370900 		ld	a5,0(s2)
  98 00b8 83B78700 		ld	a5,8(a5)
  14:src/kernel/mmanagement/memory_allocator.cpp **** 
  99              		.loc 1 14 36
 100 00bc 23B00700 		sd	zero,0(a5)
  16:src/kernel/mmanagement/memory_allocator.cpp ****         KVALCHECKPRINT("MemoryAllocator start address: ", start_addr);
 101              		.loc 1 16 9 is_stmt 1
 102              	.LBB16:
 103              	.LBB17:
 104              		.file 2 "src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp"
   1:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** #ifndef NOALLOC_ALLOCATOR_H
   2:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** #define NOALLOC_ALLOCATOR_H
   3:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** 
   4:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** #include"../lib/hw.h"
   5:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** 
   6:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** /* CHECK THIS !!!!!
   7:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** *
   8:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** * No existing allocator operator functions;
   9:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** * Used for allocating allocator objects;
  10:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** * Allocators are not deallocated so operator delete is not needed;
  11:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** *
  12:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** */
  13:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** #define __NOALLOC_OPERATORS__ \
  14:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** void* operator new(size_t sz){ return NoAlloc::mem_alloc(sz); } \
  15:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** void* operator new[](size_t sz){ return NoAlloc::mem_alloc(sz); } \
GAS LISTING /tmp/ccGQJ8tf.s 			page 4


  16:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** void operator delete(void* ptr){  } \
  17:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** void operator delete[](void* ptr){  }
  18:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** 
  19:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** 
  20:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** /* 
  21:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** * Continual allocation used when there is no allocator;
  22:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** * -----USED FOR ALLOCATING ALLOCATOR OBJECTS-----
  23:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** */
  24:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** class NoAlloc{ /* singleton */ 
  25:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp ****     static bool working;
  26:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp ****     static void* NOALLOC_END_ADDR; 
  27:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp **** public:
  28:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp ****     static void init(); /* set NOALLOC END ADDR = HEAP START ADDR */
  29:src/kernel/mmanagement/../../../h/../h/noalloc_allocator.hpp ****     static void* getEndAddress(){ return NOALLOC_END_ADDR; } /* get end address of allocated object
 105              		.loc 2 29 35
 106              		.loc 2 29 42 is_stmt 0
 107 00c0 97070000 		lla	a5,_ZN7NoAlloc16NOALLOC_END_ADDRE
 107      93870700 
 108 00c8 83B40700 		ld	s1,0(a5)
 109              	.LBE17:
 110              	.LBE16:
  16:src/kernel/mmanagement/memory_allocator.cpp ****         KVALCHECKPRINT("MemoryAllocator start address: ", start_addr);
 111              		.loc 1 16 64
 112 00cc 9384F4FF 		addi	s1,s1,-1
  16:src/kernel/mmanagement/memory_allocator.cpp ****         KVALCHECKPRINT("MemoryAllocator start address: ", start_addr);
 113              		.loc 1 16 69
 114 00d0 B7F7FFFF 		li	a5,-4096
 115 00d4 B3F4F400 		and	s1,s1,a5
  16:src/kernel/mmanagement/memory_allocator.cpp ****         KVALCHECKPRINT("MemoryAllocator start address: ", start_addr);
 116              		.loc 1 16 83
 117 00d8 B7170000 		li	a5,4096
 118 00dc B384F400 		add	s1,s1,a5
 119              	.LVL5:
  17:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->fmem_head->addr = (void*) start_addr;
 120              		.loc 1 17 9 is_stmt 1
 121 00e0 17050000 		lla	a0,.LC2
 121      13050500 
 122 00e8 97000000 		call	_Z12kprintStringPKc
 122      E7800000 
 123              	.LVL6:
  17:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->fmem_head->addr = (void*) start_addr;
 124              		.loc 1 17 9
 125 00f0 13060000 		li	a2,0
 126 00f4 93050001 		li	a1,16
 127 00f8 13850400 		mv	a0,s1
 128 00fc 97000000 		call	_Z9kprintIntmib
 128      E7800000 
 129              	.LVL7:
  17:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->fmem_head->addr = (void*) start_addr;
 130              		.loc 1 17 9
 131 0104 17050000 		lla	a0,.LC3
 131      13050500 
 132 010c 97000000 		call	_Z12kprintStringPKc
 132      E7800000 
 133              	.LVL8:
  18:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->fmem_head->size = ((size_t)HEAP_END_ADDR - start_addr);
 134              		.loc 1 18 9
GAS LISTING /tmp/ccGQJ8tf.s 			page 5


  18:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->fmem_head->size = ((size_t)HEAP_END_ADDR - start_addr);
 135              		.loc 1 18 20 is_stmt 0
 136 0114 83370900 		ld	a5,0(s2)
 137 0118 03B78700 		ld	a4,8(a5)
  18:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->fmem_head->size = ((size_t)HEAP_END_ADDR - start_addr);
 138              		.loc 1 18 36
 139 011c 23389700 		sd	s1,16(a4)
  19:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->init = true;
 140              		.loc 1 19 9 is_stmt 1
  19:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->init = true;
 141              		.loc 1 19 20 is_stmt 0
 142 0120 83B68700 		ld	a3,8(a5)
  19:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->init = true;
 143              		.loc 1 19 61
 144 0124 17070000 		lla	a4,HEAP_END_ADDR
 144      13070700 
 145 012c 03370700 		ld	a4,0(a4)
 146 0130 B3049740 		sub	s1,a4,s1
 147              	.LVL9:
  19:src/kernel/mmanagement/memory_allocator.cpp ****         allocator->init = true;
 148              		.loc 1 19 36
 149 0134 23B49600 		sd	s1,8(a3)
  20:src/kernel/mmanagement/memory_allocator.cpp ****     }
 150              		.loc 1 20 9 is_stmt 1
  20:src/kernel/mmanagement/memory_allocator.cpp ****     }
 151              		.loc 1 20 25 is_stmt 0
 152 0138 13071000 		li	a4,1
 153 013c 2380E700 		sb	a4,0(a5)
 154              	.LBE15:
 155              	.LBE19:
  22:src/kernel/mmanagement/memory_allocator.cpp **** }
 156              		.loc 1 22 5 is_stmt 1
  22:src/kernel/mmanagement/memory_allocator.cpp **** }
 157              		.loc 1 22 13 is_stmt 0
 158 0140 97070000 		lla	a5,_ZN15MemoryAllocator9allocatorE
 158      93870700 
 159 0148 03B50700 		ld	a0,0(a5)
 160              		.loc 1 23 1
 161 014c 83308101 		ld	ra,24(sp)
 162              		.cfi_remember_state
 163              		.cfi_restore 1
 164 0150 03340101 		ld	s0,16(sp)
 165              		.cfi_restore 8
 166              		.cfi_def_cfa 2, 32
 167 0154 83348100 		ld	s1,8(sp)
 168              		.cfi_restore 9
 169 0158 03390100 		ld	s2,0(sp)
 170              		.cfi_restore 18
 171 015c 13010102 		addi	sp,sp,32
 172              		.cfi_def_cfa_offset 0
 173 0160 67800000 		jr	ra
 174              	.L13:
 175              		.cfi_restore_state
 176              	.LBB20:
 177              	.LBB18:
   9:src/kernel/mmanagement/memory_allocator.cpp ****         
 178              		.loc 1 9 37 is_stmt 1 discriminator 1
GAS LISTING /tmp/ccGQJ8tf.s 			page 6


   9:src/kernel/mmanagement/memory_allocator.cpp ****         
 179              		.loc 1 9 49 is_stmt 0 discriminator 1
 180 0164 17050000 		lla	a0,.LC1
 180      13050500 
 181 016c 97000000 		call	_Z12kprintStringPKc
 181      E7800000 
 182              	.LVL10:
 183              	.LEHE2:
 184              	.L4:
   9:src/kernel/mmanagement/memory_allocator.cpp ****         
 185              		.loc 1 9 91 is_stmt 1 discriminator 1
 186 0174 6F000000 		j	.L4
 187              	.L6:
 188 0178 13090500 		mv	s2,a0
   8:src/kernel/mmanagement/memory_allocator.cpp ****         if(!allocator->node_cache){ kprintString("MEM ALLOC node cache not allocated\n"); while(1);
 189              		.loc 1 8 97 is_stmt 0
 190 017c 13850400 		mv	a0,s1
 191 0180 97000000 		call	_ZN11ObjectCachedlEPv
 191      E7800000 
 192              	.LVL11:
 193 0188 13050900 		mv	a0,s2
 194              	.LEHB3:
 195 018c 97000000 		call	_Unwind_Resume
 195      E7800000 
 196              	.LVL12:
 197              	.LEHE3:
 198              	.LBE18:
 199              	.LBE20:
 200              		.cfi_endproc
 201              	.LFE113:
 202              		.globl	__gxx_personality_v0
 203              		.section	.gcc_except_table,"aw",@progbits
 204              	.LLSDA113:
 205 0000 FF       		.byte	0xff
 206 0001 FF       		.byte	0xff
 207 0002 03       		.byte	0x3
 208 0003 34       		.byte	0x34
 209 0004 00000000 		.4byte	.LEHB0-.LFB113
 210 0008 00000000 		.4byte	.LEHE0-.LEHB0
 211 000c 00000000 		.4byte	0
 212 0010 00       		.byte	0
 213 0011 00000000 		.4byte	.LEHB1-.LFB113
 214 0015 00000000 		.4byte	.LEHE1-.LEHB1
 215 0019 00000000 		.4byte	.L6-.LFB113
 216 001d 00       		.byte	0
 217 001e 00000000 		.4byte	.LEHB2-.LFB113
 218 0022 00000000 		.4byte	.LEHE2-.LEHB2
 219 0026 00000000 		.4byte	0
 220 002a 00       		.byte	0
 221 002b 00000000 		.4byte	.LEHB3-.LFB113
 222 002f 00000000 		.4byte	.LEHE3-.LEHB3
 223 0033 00000000 		.4byte	0
 224 0037 00       		.byte	0
 225              		.text
 227              		.align	2
 228              		.globl	_ZN15MemoryAllocator9mem_allocEm
 230              	_ZN15MemoryAllocator9mem_allocEm:
GAS LISTING /tmp/ccGQJ8tf.s 			page 7


 231              	.LFB114:
  24:src/kernel/mmanagement/memory_allocator.cpp **** 
  25:src/kernel/mmanagement/memory_allocator.cpp **** void* MemoryAllocator::mem_alloc(size_t size){
 232              		.loc 1 25 46 is_stmt 1
 233              		.cfi_startproc
 234              	.LVL13:
 235 0194 130101FD 		addi	sp,sp,-48
 236              		.cfi_def_cfa_offset 48
 237 0198 23341102 		sd	ra,40(sp)
 238 019c 23308102 		sd	s0,32(sp)
 239 01a0 233C9100 		sd	s1,24(sp)
 240 01a4 23382101 		sd	s2,16(sp)
 241 01a8 23343101 		sd	s3,8(sp)
 242 01ac 23304101 		sd	s4,0(sp)
 243              		.cfi_offset 1, -8
 244              		.cfi_offset 8, -16
 245              		.cfi_offset 9, -24
 246              		.cfi_offset 18, -32
 247              		.cfi_offset 19, -40
 248              		.cfi_offset 20, -48
 249 01b0 13040103 		addi	s0,sp,48
 250              		.cfi_def_cfa 8, 0
  26:src/kernel/mmanagement/memory_allocator.cpp ****     FreeSegment* best = nullptr,*best_prev = nullptr,* curr = fmem_head, *prev = nullptr;
 251              		.loc 1 26 5
 252              	.LVL14:
 253              		.loc 1 26 56 is_stmt 0
 254 01b4 83378500 		ld	a5,8(a0)
 255              	.LVL15:
  27:src/kernel/mmanagement/memory_allocator.cpp ****     size = size*MEM_BLOCK_SIZE;
 256              		.loc 1 27 5 is_stmt 1
 257              		.loc 1 27 10 is_stmt 0
 258 01b8 13996500 		slli	s2,a1,6
 259              	.LVL16:
  26:src/kernel/mmanagement/memory_allocator.cpp ****     FreeSegment* best = nullptr,*best_prev = nullptr,* curr = fmem_head, *prev = nullptr;
 260              		.loc 1 26 75
 261 01bc 93060000 		li	a3,0
  26:src/kernel/mmanagement/memory_allocator.cpp ****     FreeSegment* best = nullptr,*best_prev = nullptr,* curr = fmem_head, *prev = nullptr;
 262              		.loc 1 26 34
 263 01c0 130A0000 		li	s4,0
  26:src/kernel/mmanagement/memory_allocator.cpp ****     FreeSegment* best = nullptr,*best_prev = nullptr,* curr = fmem_head, *prev = nullptr;
 264              		.loc 1 26 18
 265 01c4 93040000 		li	s1,0
 266 01c8 6F004001 		j	.L17
 267              	.LVL17:
 268              	.L23:
  28:src/kernel/mmanagement/memory_allocator.cpp **** 
  29:src/kernel/mmanagement/memory_allocator.cpp **** 
  30:src/kernel/mmanagement/memory_allocator.cpp ****     while(curr){
  31:src/kernel/mmanagement/memory_allocator.cpp ****         if(curr->size >= size)
  32:src/kernel/mmanagement/memory_allocator.cpp ****             if (!best || (curr->size < best->size)){
  33:src/kernel/mmanagement/memory_allocator.cpp ****                 best = curr;     
  34:src/kernel/mmanagement/memory_allocator.cpp ****                 best_prev = prev;
 269              		.loc 1 34 27
 270 01cc 138A0600 		mv	s4,a3
 271              	.LVL18:
  33:src/kernel/mmanagement/memory_allocator.cpp ****                 best_prev = prev;
 272              		.loc 1 33 22
GAS LISTING /tmp/ccGQJ8tf.s 			page 8


 273 01d0 93840700 		mv	s1,a5
 274              	.LVL19:
 275              	.L16:
  35:src/kernel/mmanagement/memory_allocator.cpp ****             }
  36:src/kernel/mmanagement/memory_allocator.cpp ****         prev = curr;
 276              		.loc 1 36 9 is_stmt 1
  37:src/kernel/mmanagement/memory_allocator.cpp ****         curr = curr->next;
 277              		.loc 1 37 9
  36:src/kernel/mmanagement/memory_allocator.cpp ****         curr = curr->next;
 278              		.loc 1 36 14 is_stmt 0
 279 01d4 93860700 		mv	a3,a5
 280              		.loc 1 37 14
 281 01d8 83B70700 		ld	a5,0(a5)
 282              	.LVL20:
 283              	.L17:
  30:src/kernel/mmanagement/memory_allocator.cpp ****         if(curr->size >= size)
 284              		.loc 1 30 5 is_stmt 1
  30:src/kernel/mmanagement/memory_allocator.cpp ****         if(curr->size >= size)
 285              		.loc 1 30 11 is_stmt 0
 286 01dc 63820702 		beq	a5,zero,.L15
  31:src/kernel/mmanagement/memory_allocator.cpp ****             if (!best || (curr->size < best->size)){
 287              		.loc 1 31 9 is_stmt 1
  31:src/kernel/mmanagement/memory_allocator.cpp ****             if (!best || (curr->size < best->size)){
 288              		.loc 1 31 18 is_stmt 0
 289 01e0 03B78700 		ld	a4,8(a5)
  31:src/kernel/mmanagement/memory_allocator.cpp ****             if (!best || (curr->size < best->size)){
 290              		.loc 1 31 9
 291 01e4 E36827FF 		bltu	a4,s2,.L16
  32:src/kernel/mmanagement/memory_allocator.cpp ****                 best = curr;     
 292              		.loc 1 32 13 is_stmt 1
 293 01e8 E38204FE 		beq	s1,zero,.L23
  32:src/kernel/mmanagement/memory_allocator.cpp ****                 best = curr;     
 294              		.loc 1 32 46 is_stmt 0 discriminator 1
 295 01ec 03B68400 		ld	a2,8(s1)
  32:src/kernel/mmanagement/memory_allocator.cpp ****                 best = curr;     
 296              		.loc 1 32 23 discriminator 1
 297 01f0 E372C7FE 		bgeu	a4,a2,.L16
  34:src/kernel/mmanagement/memory_allocator.cpp ****             }
 298              		.loc 1 34 27
 299 01f4 138A0600 		mv	s4,a3
 300              	.LVL21:
  33:src/kernel/mmanagement/memory_allocator.cpp ****                 best_prev = prev;
 301              		.loc 1 33 22
 302 01f8 93840700 		mv	s1,a5
 303              	.LVL22:
 304 01fc 6FF09FFD 		j	.L16
 305              	.LVL23:
 306              	.L15:
  38:src/kernel/mmanagement/memory_allocator.cpp ****     } 
  39:src/kernel/mmanagement/memory_allocator.cpp ****     if(!best)
 307              		.loc 1 39 5 is_stmt 1
 308 0200 63860402 		beq	s1,zero,.L14
 309 0204 93090500 		mv	s3,a0
  40:src/kernel/mmanagement/memory_allocator.cpp ****         return nullptr;
  41:src/kernel/mmanagement/memory_allocator.cpp **** 
  42:src/kernel/mmanagement/memory_allocator.cpp ****     // if(best->size - size < sizeof(FreeSegment) + MEM_BLOCK_SIZE){
  43:src/kernel/mmanagement/memory_allocator.cpp ****     //     if(!best_prev) fmem_head = best->next;
GAS LISTING /tmp/ccGQJ8tf.s 			page 9


  44:src/kernel/mmanagement/memory_allocator.cpp ****     //     else best_prev->next = best->next;
  45:src/kernel/mmanagement/memory_allocator.cpp ****     // }else{
  46:src/kernel/mmanagement/memory_allocator.cpp ****     //     curr = (FreeSegment*)((char*)best + sizeof(FreeSegment) + size);
  47:src/kernel/mmanagement/memory_allocator.cpp ****     //     curr->next = best->next;
  48:src/kernel/mmanagement/memory_allocator.cpp ****     //     curr->size = best->size - size - sizeof(FreeSegment);
  49:src/kernel/mmanagement/memory_allocator.cpp ****     //     best->size = size;
  50:src/kernel/mmanagement/memory_allocator.cpp ****     //     if(best_prev) best_prev->next = curr;
  51:src/kernel/mmanagement/memory_allocator.cpp ****     //     else fmem_head = curr;
  52:src/kernel/mmanagement/memory_allocator.cpp ****     // }
  53:src/kernel/mmanagement/memory_allocator.cpp ****     if(best->size != size){
 310              		.loc 1 53 5
 311              		.loc 1 53 14 is_stmt 0
 312 0208 83B78400 		ld	a5,8(s1)
 313              	.LVL24:
 314              		.loc 1 53 5
 315 020c 63922705 		bne	a5,s2,.L26
  54:src/kernel/mmanagement/memory_allocator.cpp ****         curr = (FreeSegment*)node_cache->alloc_obj();
  55:src/kernel/mmanagement/memory_allocator.cpp ****         curr->next = best->next;
  56:src/kernel/mmanagement/memory_allocator.cpp ****         curr->size = best->size - size;
  57:src/kernel/mmanagement/memory_allocator.cpp ****         curr->addr = (char*)best->addr + size;
  58:src/kernel/mmanagement/memory_allocator.cpp ****         best->size = size;
  59:src/kernel/mmanagement/memory_allocator.cpp ****     }
  60:src/kernel/mmanagement/memory_allocator.cpp ****     else { curr = best->next; }
 316              		.loc 1 60 12 is_stmt 1
 317              		.loc 1 60 17 is_stmt 0
 318 0210 03B50400 		ld	a0,0(s1)
 319              	.LVL25:
 320              	.L20:
  61:src/kernel/mmanagement/memory_allocator.cpp **** 
  62:src/kernel/mmanagement/memory_allocator.cpp ****     if(!best_prev) fmem_head = curr;
 321              		.loc 1 62 5 is_stmt 1
 322 0214 63080A06 		beq	s4,zero,.L27
  63:src/kernel/mmanagement/memory_allocator.cpp ****     else best_prev->next = curr;
 323              		.loc 1 63 10
 324              		.loc 1 63 26 is_stmt 0
 325 0218 2330AA00 		sd	a0,0(s4)
 326              	.L22:
  64:src/kernel/mmanagement/memory_allocator.cpp ****     
  65:src/kernel/mmanagement/memory_allocator.cpp ****     best->next = fall_head;
 327              		.loc 1 65 5 is_stmt 1
 328              		.loc 1 65 18 is_stmt 0
 329 021c 83B70901 		ld	a5,16(s3)
 330              		.loc 1 65 16
 331 0220 23B0F400 		sd	a5,0(s1)
  66:src/kernel/mmanagement/memory_allocator.cpp ****     fall_head = best;
 332              		.loc 1 66 5 is_stmt 1
 333              		.loc 1 66 15 is_stmt 0
 334 0224 23B89900 		sd	s1,16(s3)
  67:src/kernel/mmanagement/memory_allocator.cpp ****     // return (char*)best+sizeof(FreeSegment);
  68:src/kernel/mmanagement/memory_allocator.cpp ****     // print_all_list();
  69:src/kernel/mmanagement/memory_allocator.cpp ****     // print_list();
  70:src/kernel/mmanagement/memory_allocator.cpp ****     return best->addr;
 335              		.loc 1 70 5 is_stmt 1
 336              		.loc 1 70 18 is_stmt 0
 337 0228 83B40401 		ld	s1,16(s1)
 338              	.LVL26:
 339              	.L14:
GAS LISTING /tmp/ccGQJ8tf.s 			page 10


  71:src/kernel/mmanagement/memory_allocator.cpp **** }
 340              		.loc 1 71 1
 341 022c 13850400 		mv	a0,s1
 342 0230 83308102 		ld	ra,40(sp)
 343              		.cfi_remember_state
 344              		.cfi_restore 1
 345 0234 03340102 		ld	s0,32(sp)
 346              		.cfi_restore 8
 347              		.cfi_def_cfa 2, 48
 348 0238 83348101 		ld	s1,24(sp)
 349              		.cfi_restore 9
 350 023c 03390101 		ld	s2,16(sp)
 351              		.cfi_restore 18
 352              	.LVL27:
 353 0240 83398100 		ld	s3,8(sp)
 354              		.cfi_restore 19
 355 0244 033A0100 		ld	s4,0(sp)
 356              		.cfi_restore 20
 357              	.LVL28:
 358 0248 13010103 		addi	sp,sp,48
 359              		.cfi_def_cfa_offset 0
 360 024c 67800000 		jr	ra
 361              	.LVL29:
 362              	.L26:
 363              		.cfi_restore_state
  54:src/kernel/mmanagement/memory_allocator.cpp ****         curr->next = best->next;
 364              		.loc 1 54 9 is_stmt 1
  54:src/kernel/mmanagement/memory_allocator.cpp ****         curr->next = best->next;
 365              		.loc 1 54 51 is_stmt 0
 366 0250 03358501 		ld	a0,24(a0)
 367              	.LVL30:
 368 0254 97000000 		call	_ZN11ObjectCache9alloc_objEv
 368      E7800000 
 369              	.LVL31:
  55:src/kernel/mmanagement/memory_allocator.cpp ****         curr->size = best->size - size;
 370              		.loc 1 55 9 is_stmt 1
  55:src/kernel/mmanagement/memory_allocator.cpp ****         curr->size = best->size - size;
 371              		.loc 1 55 28 is_stmt 0
 372 025c 83B70400 		ld	a5,0(s1)
  55:src/kernel/mmanagement/memory_allocator.cpp ****         curr->size = best->size - size;
 373              		.loc 1 55 20
 374 0260 2330F500 		sd	a5,0(a0)
  56:src/kernel/mmanagement/memory_allocator.cpp ****         curr->addr = (char*)best->addr + size;
 375              		.loc 1 56 9 is_stmt 1
  56:src/kernel/mmanagement/memory_allocator.cpp ****         curr->addr = (char*)best->addr + size;
 376              		.loc 1 56 28 is_stmt 0
 377 0264 83B78400 		ld	a5,8(s1)
  56:src/kernel/mmanagement/memory_allocator.cpp ****         curr->addr = (char*)best->addr + size;
 378              		.loc 1 56 33
 379 0268 B3872741 		sub	a5,a5,s2
  56:src/kernel/mmanagement/memory_allocator.cpp ****         curr->addr = (char*)best->addr + size;
 380              		.loc 1 56 20
 381 026c 2334F500 		sd	a5,8(a0)
  57:src/kernel/mmanagement/memory_allocator.cpp ****         best->size = size;
 382              		.loc 1 57 9 is_stmt 1
  57:src/kernel/mmanagement/memory_allocator.cpp ****         best->size = size;
 383              		.loc 1 57 35 is_stmt 0
GAS LISTING /tmp/ccGQJ8tf.s 			page 11


 384 0270 83B70401 		ld	a5,16(s1)
  57:src/kernel/mmanagement/memory_allocator.cpp ****         best->size = size;
 385              		.loc 1 57 40
 386 0274 B3872701 		add	a5,a5,s2
  57:src/kernel/mmanagement/memory_allocator.cpp ****         best->size = size;
 387              		.loc 1 57 20
 388 0278 2338F500 		sd	a5,16(a0)
  58:src/kernel/mmanagement/memory_allocator.cpp ****     }
 389              		.loc 1 58 9 is_stmt 1
  58:src/kernel/mmanagement/memory_allocator.cpp ****     }
 390              		.loc 1 58 20 is_stmt 0
 391 027c 23B42401 		sd	s2,8(s1)
 392 0280 6FF05FF9 		j	.L20
 393              	.L27:
  62:src/kernel/mmanagement/memory_allocator.cpp ****     else best_prev->next = curr;
 394              		.loc 1 62 20 is_stmt 1 discriminator 1
  62:src/kernel/mmanagement/memory_allocator.cpp ****     else best_prev->next = curr;
 395              		.loc 1 62 30 is_stmt 0 discriminator 1
 396 0284 23B4A900 		sd	a0,8(s3)
 397 0288 6FF05FF9 		j	.L22
 398              		.cfi_endproc
 399              	.LFE114:
 401              		.align	2
 402              		.globl	_ZN15MemoryAllocator17wantToFreeAddressEPv
 404              	_ZN15MemoryAllocator17wantToFreeAddressEPv:
 405              	.LFB115:
  72:src/kernel/mmanagement/memory_allocator.cpp **** 
  73:src/kernel/mmanagement/memory_allocator.cpp **** bool MemoryAllocator::wantToFreeAddress(void* adr){
 406              		.loc 1 73 51 is_stmt 1
 407              		.cfi_startproc
 408              	.LVL32:
 409 028c 130101FF 		addi	sp,sp,-16
 410              		.cfi_def_cfa_offset 16
 411 0290 23348100 		sd	s0,8(sp)
 412              		.cfi_offset 8, -8
 413 0294 13040101 		addi	s0,sp,16
 414              		.cfi_def_cfa 8, 0
  74:src/kernel/mmanagement/memory_allocator.cpp ****     if(adr < HEAP_START_ADDR || adr >= HEAP_END_ADDR)
 415              		.loc 1 74 5
 416              		.loc 1 74 12 is_stmt 0
 417 0298 97070000 		lla	a5,HEAP_START_ADDR
 417      93870700 
 418 02a0 83B70700 		ld	a5,0(a5)
 419              		.loc 1 74 5
 420 02a4 63EEF504 		bgtu	a5,a1,.L34
 421              		.loc 1 74 37 discriminator 1
 422 02a8 97070000 		lla	a5,HEAP_END_ADDR
 422      93870700 
 423 02b0 83B70700 		ld	a5,0(a5)
 424              		.loc 1 74 30 discriminator 1
 425 02b4 63FEF504 		bleu	a5,a1,.L35
  75:src/kernel/mmanagement/memory_allocator.cpp ****         return true;
  76:src/kernel/mmanagement/memory_allocator.cpp ****     size_t t = (size_t)adr;
 426              		.loc 1 76 5 is_stmt 1
 427              	.LVL33:
  77:src/kernel/mmanagement/memory_allocator.cpp ****     FreeSegment* prev = nullptr, *cur = fall_head;
 428              		.loc 1 77 5
GAS LISTING /tmp/ccGQJ8tf.s 			page 12


 429              		.loc 1 77 35 is_stmt 0
 430 02b8 83370501 		ld	a5,16(a0)
 431              	.LVL34:
 432              		.loc 1 77 18
 433 02bc 93060000 		li	a3,0
 434              	.LVL35:
 435              	.L31:
  78:src/kernel/mmanagement/memory_allocator.cpp ****     while(cur)
 436              		.loc 1 78 5 is_stmt 1
 437              		.loc 1 78 11 is_stmt 0
 438 02c0 638C0700 		beq	a5,zero,.L30
  79:src/kernel/mmanagement/memory_allocator.cpp ****     {
  80:src/kernel/mmanagement/memory_allocator.cpp ****         // if(t == (size_t)cur+sizeof(FreeSegment))
  81:src/kernel/mmanagement/memory_allocator.cpp ****         //     break;
  82:src/kernel/mmanagement/memory_allocator.cpp ****         if(t == (size_t)cur->addr)
 439              		.loc 1 82 9 is_stmt 1
 440              		.loc 1 82 30 is_stmt 0
 441 02c4 03B70701 		ld	a4,16(a5)
 442              		.loc 1 82 9
 443 02c8 6308B700 		beq	a4,a1,.L30
  83:src/kernel/mmanagement/memory_allocator.cpp ****             break;    
  84:src/kernel/mmanagement/memory_allocator.cpp ****         prev = cur;
 444              		.loc 1 84 9 is_stmt 1
 445              	.LVL36:
  85:src/kernel/mmanagement/memory_allocator.cpp ****         cur = cur->next;
 446              		.loc 1 85 9
  84:src/kernel/mmanagement/memory_allocator.cpp ****         cur = cur->next;
 447              		.loc 1 84 14 is_stmt 0
 448 02cc 93860700 		mv	a3,a5
 449              		.loc 1 85 13
 450 02d0 83B70700 		ld	a5,0(a5)
 451              	.LVL37:
  78:src/kernel/mmanagement/memory_allocator.cpp ****     {
 452              		.loc 1 78 5
 453 02d4 6FF0DFFE 		j	.L31
 454              	.L30:
  86:src/kernel/mmanagement/memory_allocator.cpp ****     }
  87:src/kernel/mmanagement/memory_allocator.cpp ****     if(cur)
 455              		.loc 1 87 5 is_stmt 1
 456 02d8 63800704 		beq	a5,zero,.L36
  88:src/kernel/mmanagement/memory_allocator.cpp ****     {
  89:src/kernel/mmanagement/memory_allocator.cpp ****         if(prev)
 457              		.loc 1 89 9
 458 02dc 638C0600 		beq	a3,zero,.L32
  90:src/kernel/mmanagement/memory_allocator.cpp ****             prev->next = cur->next;
 459              		.loc 1 90 13
 460              		.loc 1 90 31 is_stmt 0
 461 02e0 03B70700 		ld	a4,0(a5)
 462              		.loc 1 90 24
 463 02e4 23B0E600 		sd	a4,0(a3)
 464              	.L33:
  91:src/kernel/mmanagement/memory_allocator.cpp ****         else
  92:src/kernel/mmanagement/memory_allocator.cpp ****             fall_head = cur->next;
  93:src/kernel/mmanagement/memory_allocator.cpp ****         cur->next = nullptr;
 465              		.loc 1 93 9 is_stmt 1
 466              		.loc 1 93 19 is_stmt 0
 467 02e8 23B00700 		sd	zero,0(a5)
GAS LISTING /tmp/ccGQJ8tf.s 			page 13


  94:src/kernel/mmanagement/memory_allocator.cpp ****         return false;
 468              		.loc 1 94 9 is_stmt 1
 469              		.loc 1 94 16 is_stmt 0
 470 02ec 13050000 		li	a0,0
 471              	.LVL38:
 472 02f0 6F004001 		j	.L29
 473              	.LVL39:
 474              	.L32:
  92:src/kernel/mmanagement/memory_allocator.cpp ****         cur->next = nullptr;
 475              		.loc 1 92 13 is_stmt 1
  92:src/kernel/mmanagement/memory_allocator.cpp ****         cur->next = nullptr;
 476              		.loc 1 92 30 is_stmt 0
 477 02f4 03B70700 		ld	a4,0(a5)
  92:src/kernel/mmanagement/memory_allocator.cpp ****         cur->next = nullptr;
 478              		.loc 1 92 23
 479 02f8 2338E500 		sd	a4,16(a0)
 480 02fc 6FF0DFFE 		j	.L33
 481              	.LVL40:
 482              	.L34:
  75:src/kernel/mmanagement/memory_allocator.cpp ****     size_t t = (size_t)adr;
 483              		.loc 1 75 16
 484 0300 13051000 		li	a0,1
 485              	.LVL41:
 486              	.L29:
  95:src/kernel/mmanagement/memory_allocator.cpp ****     }
  96:src/kernel/mmanagement/memory_allocator.cpp ****     else return true;
  97:src/kernel/mmanagement/memory_allocator.cpp **** }
 487              		.loc 1 97 1
 488 0304 03348100 		ld	s0,8(sp)
 489              		.cfi_remember_state
 490              		.cfi_restore 8
 491              		.cfi_def_cfa 2, 16
 492 0308 13010101 		addi	sp,sp,16
 493              		.cfi_def_cfa_offset 0
 494 030c 67800000 		jr	ra
 495              	.LVL42:
 496              	.L35:
 497              		.cfi_restore_state
  75:src/kernel/mmanagement/memory_allocator.cpp ****     size_t t = (size_t)adr;
 498              		.loc 1 75 16
 499 0310 13051000 		li	a0,1
 500              	.LVL43:
 501 0314 6FF01FFF 		j	.L29
 502              	.LVL44:
 503              	.L36:
  96:src/kernel/mmanagement/memory_allocator.cpp **** }
 504              		.loc 1 96 17
 505 0318 13051000 		li	a0,1
 506              	.LVL45:
 507 031c 6FF09FFE 		j	.L29
 508              		.cfi_endproc
 509              	.LFE115:
 511              		.align	2
 512              		.globl	_ZN15MemoryAllocator27getAndRemoveFreeSegmentMetaEPv
 514              	_ZN15MemoryAllocator27getAndRemoveFreeSegmentMetaEPv:
 515              	.LFB116:
  98:src/kernel/mmanagement/memory_allocator.cpp **** 
GAS LISTING /tmp/ccGQJ8tf.s 			page 14


  99:src/kernel/mmanagement/memory_allocator.cpp **** FreeSegment* MemoryAllocator::getAndRemoveFreeSegmentMeta(void* adr){
 516              		.loc 1 99 69 is_stmt 1
 517              		.cfi_startproc
 518              	.LVL46:
 519 0320 130101FF 		addi	sp,sp,-16
 520              		.cfi_def_cfa_offset 16
 521 0324 23348100 		sd	s0,8(sp)
 522              		.cfi_offset 8, -8
 523 0328 13040101 		addi	s0,sp,16
 524              		.cfi_def_cfa 8, 0
 100:src/kernel/mmanagement/memory_allocator.cpp ****     size_t start_addr = (((size_t)NoAlloc::getEndAddress() - 1) & (~0xfff)) + 0x1000;
 525              		.loc 1 100 5
 526              	.LBB21:
 527              	.LBB22:
 528              		.loc 2 29 35
 529              		.loc 2 29 42 is_stmt 0
 530 032c 97070000 		lla	a5,_ZN7NoAlloc16NOALLOC_END_ADDRE
 530      93870700 
 531 0334 83B70700 		ld	a5,0(a5)
 532              	.LBE22:
 533              	.LBE21:
 534              		.loc 1 100 60
 535 0338 9387F7FF 		addi	a5,a5,-1
 536              		.loc 1 100 65
 537 033c 37F7FFFF 		li	a4,-4096
 538 0340 B3F7E700 		and	a5,a5,a4
 539              		.loc 1 100 79
 540 0344 37170000 		li	a4,4096
 541 0348 B387E700 		add	a5,a5,a4
 542              	.LVL47:
 101:src/kernel/mmanagement/memory_allocator.cpp ****     if(adr < (void*)start_addr || adr >= HEAP_END_ADDR)
 543              		.loc 1 101 5 is_stmt 1
 544 034c 63E2F506 		bgtu	a5,a1,.L44
 545              		.loc 1 101 39 is_stmt 0 discriminator 1
 546 0350 97070000 		lla	a5,HEAP_END_ADDR
 546      93870700 
 547              	.LVL48:
 548 0358 83B70700 		ld	a5,0(a5)
 549              		.loc 1 101 32 discriminator 1
 550 035c 63FEF504 		bleu	a5,a1,.L45
 102:src/kernel/mmanagement/memory_allocator.cpp ****         return nullptr;
 103:src/kernel/mmanagement/memory_allocator.cpp ****     size_t t = (size_t)adr;
 551              		.loc 1 103 5 is_stmt 1
 552              	.LVL49:
 104:src/kernel/mmanagement/memory_allocator.cpp ****     FreeSegment* prev = nullptr, *cur = fall_head;
 553              		.loc 1 104 5
 554              		.loc 1 104 35 is_stmt 0
 555 0360 83370501 		ld	a5,16(a0)
 556              	.LVL50:
 557              		.loc 1 104 18
 558 0364 93060000 		li	a3,0
 559              	.LVL51:
 560              	.L41:
 105:src/kernel/mmanagement/memory_allocator.cpp ****     while(cur)
 561              		.loc 1 105 5 is_stmt 1
 562              		.loc 1 105 11 is_stmt 0
 563 0368 638C0700 		beq	a5,zero,.L40
GAS LISTING /tmp/ccGQJ8tf.s 			page 15


 106:src/kernel/mmanagement/memory_allocator.cpp ****     {
 107:src/kernel/mmanagement/memory_allocator.cpp ****         // if(t == (size_t)cur+sizeof(FreeSegment))
 108:src/kernel/mmanagement/memory_allocator.cpp ****         //     break;
 109:src/kernel/mmanagement/memory_allocator.cpp ****         if(t == (size_t)cur->addr)
 564              		.loc 1 109 9 is_stmt 1
 565              		.loc 1 109 30 is_stmt 0
 566 036c 03B70701 		ld	a4,16(a5)
 567              		.loc 1 109 9
 568 0370 6308B700 		beq	a4,a1,.L40
 110:src/kernel/mmanagement/memory_allocator.cpp ****             break;    
 111:src/kernel/mmanagement/memory_allocator.cpp ****         prev = cur;
 569              		.loc 1 111 9 is_stmt 1
 570              	.LVL52:
 112:src/kernel/mmanagement/memory_allocator.cpp ****         cur = cur->next;
 571              		.loc 1 112 9
 111:src/kernel/mmanagement/memory_allocator.cpp ****         cur = cur->next;
 572              		.loc 1 111 14 is_stmt 0
 573 0374 93860700 		mv	a3,a5
 574              		.loc 1 112 13
 575 0378 83B70700 		ld	a5,0(a5)
 576              	.LVL53:
 105:src/kernel/mmanagement/memory_allocator.cpp ****     {
 577              		.loc 1 105 5
 578 037c 6FF0DFFE 		j	.L41
 579              	.L40:
 113:src/kernel/mmanagement/memory_allocator.cpp ****     }
 114:src/kernel/mmanagement/memory_allocator.cpp ****     if(cur)
 580              		.loc 1 114 5 is_stmt 1
 581 0380 638A0700 		beq	a5,zero,.L38
 115:src/kernel/mmanagement/memory_allocator.cpp ****     {
 116:src/kernel/mmanagement/memory_allocator.cpp ****         if(prev)
 582              		.loc 1 116 9
 583 0384 63800602 		beq	a3,zero,.L42
 117:src/kernel/mmanagement/memory_allocator.cpp ****             prev->next = cur->next;
 584              		.loc 1 117 13
 585              		.loc 1 117 31 is_stmt 0
 586 0388 03B70700 		ld	a4,0(a5)
 587              		.loc 1 117 24
 588 038c 23B0E600 		sd	a4,0(a3)
 589              	.LVL54:
 590              	.L43:
 118:src/kernel/mmanagement/memory_allocator.cpp ****         else
 119:src/kernel/mmanagement/memory_allocator.cpp ****             fall_head = cur->next;
 120:src/kernel/mmanagement/memory_allocator.cpp ****         cur->next = nullptr;
 591              		.loc 1 120 9 is_stmt 1
 592              		.loc 1 120 19 is_stmt 0
 593 0390 23B00700 		sd	zero,0(a5)
 121:src/kernel/mmanagement/memory_allocator.cpp ****         return cur;
 594              		.loc 1 121 9 is_stmt 1
 595              	.LVL55:
 596              	.L38:
 122:src/kernel/mmanagement/memory_allocator.cpp ****     }
 123:src/kernel/mmanagement/memory_allocator.cpp ****     else return nullptr;
 124:src/kernel/mmanagement/memory_allocator.cpp **** }
 597              		.loc 1 124 1 is_stmt 0
 598 0394 13850700 		mv	a0,a5
 599              	.LVL56:
GAS LISTING /tmp/ccGQJ8tf.s 			page 16


 600 0398 03348100 		ld	s0,8(sp)
 601              		.cfi_remember_state
 602              		.cfi_restore 8
 603              		.cfi_def_cfa 2, 16
 604 039c 13010101 		addi	sp,sp,16
 605              		.cfi_def_cfa_offset 0
 606 03a0 67800000 		jr	ra
 607              	.LVL57:
 608              	.L42:
 609              		.cfi_restore_state
 119:src/kernel/mmanagement/memory_allocator.cpp ****         cur->next = nullptr;
 610              		.loc 1 119 13 is_stmt 1
 119:src/kernel/mmanagement/memory_allocator.cpp ****         cur->next = nullptr;
 611              		.loc 1 119 30 is_stmt 0
 612 03a4 03B70700 		ld	a4,0(a5)
 119:src/kernel/mmanagement/memory_allocator.cpp ****         cur->next = nullptr;
 613              		.loc 1 119 23
 614 03a8 2338E500 		sd	a4,16(a0)
 615 03ac 6FF05FFE 		j	.L43
 616              	.LVL58:
 617              	.L44:
 102:src/kernel/mmanagement/memory_allocator.cpp ****     size_t t = (size_t)adr;
 618              		.loc 1 102 16
 619 03b0 93070000 		li	a5,0
 620              	.LVL59:
 621 03b4 6FF01FFE 		j	.L38
 622              	.L45:
 623 03b8 93070000 		li	a5,0
 624 03bc 6FF09FFD 		j	.L38
 625              		.cfi_endproc
 626              	.LFE116:
 628              		.align	2
 629              		.globl	_ZN15MemoryAllocator13mergeWithNextEP11FreeSegment
 631              	_ZN15MemoryAllocator13mergeWithNextEP11FreeSegment:
 632              	.LFB117:
 125:src/kernel/mmanagement/memory_allocator.cpp **** 
 126:src/kernel/mmanagement/memory_allocator.cpp **** FreeSegment* MemoryAllocator::mergeWithNext(FreeSegment* t){
 633              		.loc 1 126 60 is_stmt 1
 634              		.cfi_startproc
 635              	.LVL60:
 127:src/kernel/mmanagement/memory_allocator.cpp ****     // if((char*)t + sizeof(FreeSegment) + t->size == (char*)t->next){
 128:src/kernel/mmanagement/memory_allocator.cpp ****     //     t->size += t->next->size + sizeof(FreeSegment);
 129:src/kernel/mmanagement/memory_allocator.cpp ****     //     t->next = t->next->next;
 130:src/kernel/mmanagement/memory_allocator.cpp ****     //     return t;
 131:src/kernel/mmanagement/memory_allocator.cpp ****     // }
 132:src/kernel/mmanagement/memory_allocator.cpp ****     if((char*)t->addr + t->size == (char*)t->next->addr){
 636              		.loc 1 132 5
 637              	.LBB23:
 638              		.loc 1 132 18 is_stmt 0
 639 03c0 83B70501 		ld	a5,16(a1)
 640              		.loc 1 132 28
 641 03c4 83B68500 		ld	a3,8(a1)
 642              		.loc 1 132 23
 643 03c8 B387D700 		add	a5,a5,a3
 644              		.loc 1 132 46
 645 03cc 03B70500 		ld	a4,0(a1)
 646              		.loc 1 132 52
GAS LISTING /tmp/ccGQJ8tf.s 			page 17


 647 03d0 03360701 		ld	a2,16(a4)
 648              		.loc 1 132 5
 649 03d4 6386C700 		beq	a5,a2,.L53
 650              	.LBE23:
 133:src/kernel/mmanagement/memory_allocator.cpp ****         t->size += t->next->size;
 134:src/kernel/mmanagement/memory_allocator.cpp ****         FreeSegment* old = t->next;
 135:src/kernel/mmanagement/memory_allocator.cpp ****         t->next = t->next->next;
 136:src/kernel/mmanagement/memory_allocator.cpp ****         node_cache->free_obj(old);
 137:src/kernel/mmanagement/memory_allocator.cpp ****         return t;
 138:src/kernel/mmanagement/memory_allocator.cpp ****     }
 139:src/kernel/mmanagement/memory_allocator.cpp ****     return t->next;
 140:src/kernel/mmanagement/memory_allocator.cpp **** }
 651              		.loc 1 140 1
 652 03d8 13050700 		mv	a0,a4
 653              	.LVL61:
 654 03dc 67800000 		ret
 655              	.LVL62:
 656              	.L53:
 126:src/kernel/mmanagement/memory_allocator.cpp ****     // if((char*)t + sizeof(FreeSegment) + t->size == (char*)t->next){
 657              		.loc 1 126 60
 658 03e0 130101FE 		addi	sp,sp,-32
 659              		.cfi_def_cfa_offset 32
 660 03e4 233C1100 		sd	ra,24(sp)
 661 03e8 23388100 		sd	s0,16(sp)
 662 03ec 23349100 		sd	s1,8(sp)
 663              		.cfi_offset 1, -8
 664              		.cfi_offset 8, -16
 665              		.cfi_offset 9, -24
 666 03f0 13040102 		addi	s0,sp,32
 667              		.cfi_def_cfa 8, 0
 668 03f4 93840500 		mv	s1,a1
 669              	.LBB25:
 670              	.LBB24:
 133:src/kernel/mmanagement/memory_allocator.cpp ****         t->size += t->next->size;
 671              		.loc 1 133 9 is_stmt 1
 133:src/kernel/mmanagement/memory_allocator.cpp ****         t->size += t->next->size;
 672              		.loc 1 133 29 is_stmt 0
 673 03f8 83378700 		ld	a5,8(a4)
 133:src/kernel/mmanagement/memory_allocator.cpp ****         t->size += t->next->size;
 674              		.loc 1 133 17
 675 03fc B386F600 		add	a3,a3,a5
 676 0400 23B4D500 		sd	a3,8(a1)
 134:src/kernel/mmanagement/memory_allocator.cpp ****         t->next = t->next->next;
 677              		.loc 1 134 9 is_stmt 1
 678              	.LVL63:
 135:src/kernel/mmanagement/memory_allocator.cpp ****         node_cache->free_obj(old);
 679              		.loc 1 135 9
 135:src/kernel/mmanagement/memory_allocator.cpp ****         node_cache->free_obj(old);
 680              		.loc 1 135 28 is_stmt 0
 681 0404 83370700 		ld	a5,0(a4)
 135:src/kernel/mmanagement/memory_allocator.cpp ****         node_cache->free_obj(old);
 682              		.loc 1 135 17
 683 0408 23B0F500 		sd	a5,0(a1)
 136:src/kernel/mmanagement/memory_allocator.cpp ****         return t;
 684              		.loc 1 136 9 is_stmt 1
 136:src/kernel/mmanagement/memory_allocator.cpp ****         return t;
 685              		.loc 1 136 29 is_stmt 0
GAS LISTING /tmp/ccGQJ8tf.s 			page 18


 686 040c 93050700 		mv	a1,a4
 687              	.LVL64:
 688 0410 03358501 		ld	a0,24(a0)
 689              	.LVL65:
 690 0414 97000000 		call	_ZN11ObjectCache8free_objEPv
 690      E7800000 
 691              	.LVL66:
 137:src/kernel/mmanagement/memory_allocator.cpp ****     }
 692              		.loc 1 137 9 is_stmt 1
 693              	.LBE24:
 694              	.LBE25:
 695              		.loc 1 140 1 is_stmt 0
 696 041c 13850400 		mv	a0,s1
 697 0420 83308101 		ld	ra,24(sp)
 698              		.cfi_restore 1
 699 0424 03340101 		ld	s0,16(sp)
 700              		.cfi_restore 8
 701              		.cfi_def_cfa 2, 32
 702 0428 83348100 		ld	s1,8(sp)
 703              		.cfi_restore 9
 704              	.LVL67:
 705 042c 13010102 		addi	sp,sp,32
 706              		.cfi_def_cfa_offset 0
 707 0430 67800000 		jr	ra
 708              		.cfi_endproc
 709              	.LFE117:
 711              		.align	2
 712              		.globl	_ZN15MemoryAllocator8mem_freeEPv
 714              	_ZN15MemoryAllocator8mem_freeEPv:
 715              	.LFB118:
 141:src/kernel/mmanagement/memory_allocator.cpp **** 
 142:src/kernel/mmanagement/memory_allocator.cpp **** int MemoryAllocator::mem_free(void* adr){
 716              		.loc 1 142 41 is_stmt 1
 717              		.cfi_startproc
 718              	.LVL68:
 719 0434 130101FC 		addi	sp,sp,-64
 720              		.cfi_def_cfa_offset 64
 721 0438 233C1102 		sd	ra,56(sp)
 722 043c 23388102 		sd	s0,48(sp)
 723 0440 23349102 		sd	s1,40(sp)
 724 0444 23302103 		sd	s2,32(sp)
 725 0448 233C3101 		sd	s3,24(sp)
 726 044c 23384101 		sd	s4,16(sp)
 727              		.cfi_offset 1, -8
 728              		.cfi_offset 8, -16
 729              		.cfi_offset 9, -24
 730              		.cfi_offset 18, -32
 731              		.cfi_offset 19, -40
 732              		.cfi_offset 20, -48
 733 0450 13040104 		addi	s0,sp,64
 734              		.cfi_def_cfa 8, 0
 735 0454 130A0500 		mv	s4,a0
 736 0458 13890500 		mv	s2,a1
 143:src/kernel/mmanagement/memory_allocator.cpp ****     // if(wantToFreeAddress(adr)) return -1;
 144:src/kernel/mmanagement/memory_allocator.cpp ****     FreeSegment* newsgm = getAndRemoveFreeSegmentMeta(adr);
 737              		.loc 1 144 5
 738              		.loc 1 144 54 is_stmt 0
GAS LISTING /tmp/ccGQJ8tf.s 			page 19


 739 045c 97000000 		call	_ZN15MemoryAllocator27getAndRemoveFreeSegmentMetaEPv
 739      E7800000 
 740              	.LVL69:
 145:src/kernel/mmanagement/memory_allocator.cpp ****     if(!newsgm){
 741              		.loc 1 145 5 is_stmt 1
 742 0464 630C0500 		beq	a0,zero,.L65
 743 0468 93090500 		mv	s3,a0
 146:src/kernel/mmanagement/memory_allocator.cpp ****         kprintString("MEM_ALLOC_FREEE GRESKA\n"); 
 147:src/kernel/mmanagement/memory_allocator.cpp ****         KCHECKPRINT(adr);
 148:src/kernel/mmanagement/memory_allocator.cpp ****         KCHECKPRINT(Riscv::r_sepc());
 149:src/kernel/mmanagement/memory_allocator.cpp ****         return -1;
 150:src/kernel/mmanagement/memory_allocator.cpp ****     }
 151:src/kernel/mmanagement/memory_allocator.cpp ****     
 152:src/kernel/mmanagement/memory_allocator.cpp ****     if(!fmem_head)
 744              		.loc 1 152 5
 745              	.LBB26:
 746              		.loc 1 152 9 is_stmt 0
 747 046c 83378A00 		ld	a5,8(s4)
 748              		.loc 1 152 5
 749 0470 638A0708 		beq	a5,zero,.L66
 750              	.LBB27:
 153:src/kernel/mmanagement/memory_allocator.cpp ****         // fmem_head = (FreeSegment*)((char*)adr - sizeof(FreeSegment));
 154:src/kernel/mmanagement/memory_allocator.cpp ****         fmem_head = newsgm;
 155:src/kernel/mmanagement/memory_allocator.cpp ****     else{
 156:src/kernel/mmanagement/memory_allocator.cpp ****         FreeSegment/* * newsgm = (FreeSegment*)((char*)adr - sizeof(FreeSegment)),*/ *prev,* cur;
 157:src/kernel/mmanagement/memory_allocator.cpp ****         for(prev = nullptr, cur = fmem_head; cur; prev = cur, cur = cur->next)
 751              		.loc 1 157 18
 752 0474 93040000 		li	s1,0
 753 0478 6F00800A 		j	.L57
 754              	.L65:
 755              	.LBE27:
 756              	.LBE26:
 146:src/kernel/mmanagement/memory_allocator.cpp ****         kprintString("MEM_ALLOC_FREEE GRESKA\n"); 
 757              		.loc 1 146 9 is_stmt 1
 146:src/kernel/mmanagement/memory_allocator.cpp ****         kprintString("MEM_ALLOC_FREEE GRESKA\n"); 
 758              		.loc 1 146 21 is_stmt 0
 759 047c 17050000 		lla	a0,.LC4
 759      13050500 
 760              	.LVL70:
 761 0484 97000000 		call	_Z12kprintStringPKc
 761      E7800000 
 762              	.LVL71:
 147:src/kernel/mmanagement/memory_allocator.cpp ****         KCHECKPRINT(Riscv::r_sepc());
 763              		.loc 1 147 9 is_stmt 1
 764 048c 17050000 		lla	a0,.LC5
 764      13050500 
 765 0494 97000000 		call	_Z12kprintStringPKc
 765      E7800000 
 766              	.LVL72:
 147:src/kernel/mmanagement/memory_allocator.cpp ****         KCHECKPRINT(Riscv::r_sepc());
 767              		.loc 1 147 9
 768 049c 13060000 		li	a2,0
 769 04a0 93050001 		li	a1,16
 770 04a4 13050900 		mv	a0,s2
 771 04a8 97000000 		call	_Z9kprintIntmib
 771      E7800000 
 772              	.LVL73:
GAS LISTING /tmp/ccGQJ8tf.s 			page 20


 147:src/kernel/mmanagement/memory_allocator.cpp ****         KCHECKPRINT(Riscv::r_sepc());
 773              		.loc 1 147 9
 774 04b0 17050000 		lla	a0,.LC3
 774      13050500 
 775 04b8 97000000 		call	_Z12kprintStringPKc
 775      E7800000 
 776              	.LVL74:
 148:src/kernel/mmanagement/memory_allocator.cpp ****         return -1;
 777              		.loc 1 148 9
 778 04c0 17050000 		lla	a0,.LC6
 778      13050500 
 779 04c8 97000000 		call	_Z12kprintStringPKc
 779      E7800000 
 780              	.LVL75:
 148:src/kernel/mmanagement/memory_allocator.cpp ****         return -1;
 781              		.loc 1 148 9
 782              	.LBB30:
 783              	.LBB31:
 784              		.file 3 "src/kernel/mmanagement/../../../h/../h/riscv.hpp"
   1:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** #ifndef __riscv__
   2:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** #define __riscv__
   3:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
   4:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** #include"../lib/hw.h"
   5:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
   6:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** class Riscv{
   7:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** public:
   8:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** /* 
   9:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** --------------------SUPERVISOR REGISTERS--------------------    
  10:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** */
  11:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static void w_scause(uint64);
  12:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static uint64 r_scause(); 
  13:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
  14:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static void w_sepc(uint64);
  15:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static uint64 r_sepc();
  16:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static void ni_sepc();
  17:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
  18:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static void w_stvec(uint64);
  19:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static uint64 r_stvec();
  20:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****      
  21:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static void w_stval(uint64);
  22:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static uint64 r_stval();
  23:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
  24:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static void w_satp(uint64);
  25:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static uint64 r_satp();
  26:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     
  27:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     enum BitMaskSip{
  28:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****         SIP_SSIE = (1<<1),
  29:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****         SIP_STIE = (1<<5),
  30:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****         SIP_SEIE = (1<<9),
  31:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     };
  32:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
  33:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static void ms_sip(uint64);
  34:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static void mc_sip(uint64);
  35:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
  36:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static void w_sip(uint64);
  37:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static uint64 r_sip();
  38:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
GAS LISTING /tmp/ccGQJ8tf.s 			page 21


  39:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static void ms_sie(uint64);
  40:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static void mc_sie(uint64);
  41:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
  42:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static void w_sie(uint64);
  43:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static uint64 r_sie();
  44:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
  45:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     enum BitMaskSstatus{
  46:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****         SSTATUS_SIE = (1<<1),
  47:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****         SSTATUS_SPIE = (1<<5),
  48:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****         SSTATUS_SPP = (1<<8),
  49:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****         SSTATUS_SUM = (1<<18),
  50:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     };
  51:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
  52:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static void ms_sstatus(uint64);
  53:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static void mc_sstatus(uint64);
  54:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
  55:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static void w_sstatus(uint64);
  56:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static uint64 r_sstatus();
  57:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
  58:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** /* 
  59:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** --------------------CLASSIC REGISTERS--------------------    
  60:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** */
  61:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static uint64 r_sp();
  62:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static uint64 r_a0(); /* parameter registers */
  63:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static uint64 s_a0(uint64 a0);
  64:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static uint64 r_a1();
  65:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static uint64 r_a2();
  66:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static uint64 r_a3();
  67:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static uint64 r_a4();
  68:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
  69:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static void popRegisters(); /* pop all context registers */
  70:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static void pushRegisters(); /* push all context registers */
  71:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****  
  72:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static void popSppSpie(); /* jump from kernel to start of thread */
  73:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
  74:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** /* 
  75:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** --------------------CONSOLE REGISTERS--------------------    
  76:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** */
  77:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static void mc_cstatus(uint64 mask); 
  78:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     static bool cstatus_ready(uint64 mask);
  79:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** };
  80:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
  81:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** /* 
  82:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** --------------------CLASSIC REGISTERS--------------------    
  83:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** */
  84:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
  85:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_sp(){
  86:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     uint64 a0;
  87:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     asm volatile("mv %0, sp" : "=r" (a0));
  88:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     return a0;
  89:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** }
  90:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
  91:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a0(){
  92:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     uint64 a0;
  93:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     asm volatile("mv %0, a0" : "=r" (a0));
  94:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     return a0;
  95:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** }
GAS LISTING /tmp/ccGQJ8tf.s 			page 22


  96:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
  97:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a1(){
  98:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     uint64 a0;
  99:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     asm volatile("mv %0, a1" : "=r" (a0));
 100:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     return a0;
 101:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** }
 102:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
 103:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a2(){
 104:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     uint64 a0;
 105:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     asm volatile("mv %0, a2" : "=r" (a0));
 106:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     return a0;
 107:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** }
 108:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
 109:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a3(){
 110:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     uint64 a0;
 111:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     asm volatile("mv %0, a3" : "=r" (a0));
 112:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     return a0;
 113:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** }
 114:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
 115:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a4(){
 116:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     uint64 a0;
 117:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     asm volatile("mv %0, a4" : "=r" (a0));
 118:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     return a0;
 119:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** }
 120:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
 121:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
 122:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** inline uint64 Riscv::s_a0(uint64 a0){
 123:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     return a0;
 124:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** }
 125:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
 126:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** /* 
 127:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** --------------------SUPERVISOR REGISTERS--------------------    
 128:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** */
 129:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
 130:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause){
 131:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     asm volatile("csrw scause, %0" : : "r" (scause));
 132:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** }
 133:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
 134:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_scause(){
 135:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     uint64 volatile scause;
 136:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     asm volatile("csrr %0, scause" : "=r" (scause));
 137:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     return scause;
 138:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** } 
 139:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
 140:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc){
 141:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     asm volatile("csrw sepc, %0" : : "r" (sepc));
 142:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** }
 143:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** 
 144:src/kernel/mmanagement/../../../h/../h/riscv.hpp **** inline uint64 Riscv::r_sepc(){
 145:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     uint64 volatile sepc;
 785              		.loc 3 145 5
 146:src/kernel/mmanagement/../../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sepc" : "=r" (sepc));
 786              		.loc 3 146 5
 787              		.loc 3 146 48 is_stmt 0
 788              	 #APP
 789              	# 146 "src/kernel/mmanagement/../../../h/../h/riscv.hpp" 1
 147              	    return sepc;
GAS LISTING /tmp/ccGQJ8tf.s 			page 23


 790              		csrr a5, sepc
 791              	# 0 "" 2
 792              	 #NO_APP
 793 04d4 2334F4FC 		sd	a5,-56(s0)
 794              		.loc 3 147 5 is_stmt 1
 795              		.loc 3 147 12 is_stmt 0
 796 04d8 033584FC 		ld	a0,-56(s0)
 797              	.LBE31:
 798              	.LBE30:
 148:src/kernel/mmanagement/memory_allocator.cpp ****         return -1;
 799              		.loc 1 148 9
 800 04dc 13060000 		li	a2,0
 801 04e0 93050001 		li	a1,16
 802 04e4 97000000 		call	_Z9kprintIntmib
 802      E7800000 
 803              	.LVL76:
 148:src/kernel/mmanagement/memory_allocator.cpp ****         return -1;
 804              		.loc 1 148 9 is_stmt 1
 805 04ec 17050000 		lla	a0,.LC3
 805      13050500 
 806 04f4 97000000 		call	_Z12kprintStringPKc
 806      E7800000 
 807              	.LVL77:
 149:src/kernel/mmanagement/memory_allocator.cpp ****     }
 808              		.loc 1 149 9
 149:src/kernel/mmanagement/memory_allocator.cpp ****     }
 809              		.loc 1 149 17 is_stmt 0
 810 04fc 1305F0FF 		li	a0,-1
 811 0500 6F008006 		j	.L56
 812              	.LVL78:
 813              	.L66:
 814              	.LBB32:
 154:src/kernel/mmanagement/memory_allocator.cpp ****     else{
 815              		.loc 1 154 9 is_stmt 1
 154:src/kernel/mmanagement/memory_allocator.cpp ****     else{
 816              		.loc 1 154 19 is_stmt 0
 817 0504 2334AA00 		sd	a0,8(s4)
 818              	.LBE32:
 158:src/kernel/mmanagement/memory_allocator.cpp ****             // if((!prev || (size_t)adr > (size_t)prev) && (size_t)adr < (size_t)cur)
 159:src/kernel/mmanagement/memory_allocator.cpp ****             if((!prev || (size_t)adr > (size_t)prev->addr) && (size_t)adr < (size_t)cur->addr)
 160:src/kernel/mmanagement/memory_allocator.cpp ****                 break;
 161:src/kernel/mmanagement/memory_allocator.cpp ****         newsgm->next = cur;
 162:src/kernel/mmanagement/memory_allocator.cpp ****         if(cur)
 163:src/kernel/mmanagement/memory_allocator.cpp ****             mergeWithNext(newsgm);
 164:src/kernel/mmanagement/memory_allocator.cpp ****         if(prev){
 165:src/kernel/mmanagement/memory_allocator.cpp ****             prev->next = newsgm;
 166:src/kernel/mmanagement/memory_allocator.cpp ****             mergeWithNext(prev);
 167:src/kernel/mmanagement/memory_allocator.cpp ****         }
 168:src/kernel/mmanagement/memory_allocator.cpp ****         else
 169:src/kernel/mmanagement/memory_allocator.cpp ****             fmem_head = newsgm;
 170:src/kernel/mmanagement/memory_allocator.cpp ****     }
 171:src/kernel/mmanagement/memory_allocator.cpp ****     // print_all_list();
 172:src/kernel/mmanagement/memory_allocator.cpp ****     // print_list();
 173:src/kernel/mmanagement/memory_allocator.cpp ****     return 0;
 819              		.loc 1 173 12
 820 0508 13050000 		li	a0,0
 821              	.LVL79:
GAS LISTING /tmp/ccGQJ8tf.s 			page 24


 822              	.LBB33:
 823 050c 6F00C005 		j	.L56
 824              	.LVL80:
 825              	.L59:
 826              	.LBB28:
 159:src/kernel/mmanagement/memory_allocator.cpp ****                 break;
 827              		.loc 1 159 90 discriminator 3
 828 0510 03B70701 		ld	a4,16(a5)
 159:src/kernel/mmanagement/memory_allocator.cpp ****                 break;
 829              		.loc 1 159 60 discriminator 3
 830 0514 6360E902 		bgtu	a4,s2,.L58
 831              	.L60:
 832              	.LVL81:
 157:src/kernel/mmanagement/memory_allocator.cpp ****             // if((!prev || (size_t)adr > (size_t)prev) && (size_t)adr < (size_t)cur)
 833              		.loc 1 157 56 discriminator 2
 834 0518 93840700 		mv	s1,a5
 157:src/kernel/mmanagement/memory_allocator.cpp ****             // if((!prev || (size_t)adr > (size_t)prev) && (size_t)adr < (size_t)cur)
 835              		.loc 1 157 67 discriminator 2
 836 051c 83B70700 		ld	a5,0(a5)
 837              	.LVL82:
 838              	.L57:
 157:src/kernel/mmanagement/memory_allocator.cpp ****             // if((!prev || (size_t)adr > (size_t)prev) && (size_t)adr < (size_t)cur)
 839              		.loc 1 157 46 discriminator 1
 840 0520 638A0700 		beq	a5,zero,.L58
 159:src/kernel/mmanagement/memory_allocator.cpp ****                 break;
 841              		.loc 1 159 13 is_stmt 1
 842 0524 E38604FE 		beq	s1,zero,.L59
 159:src/kernel/mmanagement/memory_allocator.cpp ****                 break;
 843              		.loc 1 159 54 is_stmt 0 discriminator 2
 844 0528 03B70401 		ld	a4,16(s1)
 159:src/kernel/mmanagement/memory_allocator.cpp ****                 break;
 845              		.loc 1 159 23 discriminator 2
 846 052c E37627FF 		bgeu	a4,s2,.L60
 847 0530 6FF01FFE 		j	.L59
 848              	.L58:
 161:src/kernel/mmanagement/memory_allocator.cpp ****         if(cur)
 849              		.loc 1 161 9 is_stmt 1
 161:src/kernel/mmanagement/memory_allocator.cpp ****         if(cur)
 850              		.loc 1 161 22 is_stmt 0
 851 0534 23B0F900 		sd	a5,0(s3)
 162:src/kernel/mmanagement/memory_allocator.cpp ****             mergeWithNext(newsgm);
 852              		.loc 1 162 9 is_stmt 1
 853 0538 638A0700 		beq	a5,zero,.L61
 163:src/kernel/mmanagement/memory_allocator.cpp ****         if(prev){
 854              		.loc 1 163 13
 163:src/kernel/mmanagement/memory_allocator.cpp ****         if(prev){
 855              		.loc 1 163 26 is_stmt 0
 856 053c 93850900 		mv	a1,s3
 857 0540 13050A00 		mv	a0,s4
 858              	.LVL83:
 859 0544 97000000 		call	_ZN15MemoryAllocator13mergeWithNextEP11FreeSegment
 859      E7800000 
 860              	.LVL84:
 861              	.L61:
 164:src/kernel/mmanagement/memory_allocator.cpp ****             prev->next = newsgm;
 862              		.loc 1 164 9 is_stmt 1
 863 054c 638E0402 		beq	s1,zero,.L62
GAS LISTING /tmp/ccGQJ8tf.s 			page 25


 165:src/kernel/mmanagement/memory_allocator.cpp ****             mergeWithNext(prev);
 864              		.loc 1 165 13
 165:src/kernel/mmanagement/memory_allocator.cpp ****             mergeWithNext(prev);
 865              		.loc 1 165 24 is_stmt 0
 866 0550 23B03401 		sd	s3,0(s1)
 166:src/kernel/mmanagement/memory_allocator.cpp ****         }
 867              		.loc 1 166 13 is_stmt 1
 166:src/kernel/mmanagement/memory_allocator.cpp ****         }
 868              		.loc 1 166 26 is_stmt 0
 869 0554 93850400 		mv	a1,s1
 870 0558 13050A00 		mv	a0,s4
 871 055c 97000000 		call	_ZN15MemoryAllocator13mergeWithNextEP11FreeSegment
 871      E7800000 
 872              	.LVL85:
 873              	.LBE28:
 874              	.LBE33:
 875              		.loc 1 173 12
 876 0564 13050000 		li	a0,0
 877              	.LVL86:
 878              	.L56:
 174:src/kernel/mmanagement/memory_allocator.cpp **** }
 879              		.loc 1 174 1
 880 0568 83308103 		ld	ra,56(sp)
 881              		.cfi_remember_state
 882              		.cfi_restore 1
 883 056c 03340103 		ld	s0,48(sp)
 884              		.cfi_restore 8
 885              		.cfi_def_cfa 2, 64
 886 0570 83348102 		ld	s1,40(sp)
 887              		.cfi_restore 9
 888 0574 03390102 		ld	s2,32(sp)
 889              		.cfi_restore 18
 890              	.LVL87:
 891 0578 83398101 		ld	s3,24(sp)
 892              		.cfi_restore 19
 893 057c 033A0101 		ld	s4,16(sp)
 894              		.cfi_restore 20
 895              	.LVL88:
 896 0580 13010104 		addi	sp,sp,64
 897              		.cfi_def_cfa_offset 0
 898 0584 67800000 		jr	ra
 899              	.LVL89:
 900              	.L62:
 901              		.cfi_restore_state
 902              	.LBB34:
 903              	.LBB29:
 169:src/kernel/mmanagement/memory_allocator.cpp ****     }
 904              		.loc 1 169 13 is_stmt 1
 169:src/kernel/mmanagement/memory_allocator.cpp ****     }
 905              		.loc 1 169 23 is_stmt 0
 906 0588 23343A01 		sd	s3,8(s4)
 907              	.LBE29:
 908              	.LBE34:
 173:src/kernel/mmanagement/memory_allocator.cpp **** }
 909              		.loc 1 173 12
 910 058c 13050000 		li	a0,0
 911 0590 6FF09FFD 		j	.L56
GAS LISTING /tmp/ccGQJ8tf.s 			page 26


 912              		.cfi_endproc
 913              	.LFE118:
 915              		.align	2
 916              		.globl	_ZN15MemoryAllocator18getFreeSegmentMetaEPv
 918              	_ZN15MemoryAllocator18getFreeSegmentMetaEPv:
 919              	.LFB119:
 175:src/kernel/mmanagement/memory_allocator.cpp **** 
 176:src/kernel/mmanagement/memory_allocator.cpp **** FreeSegment* MemoryAllocator::getFreeSegmentMeta(void* adr){
 920              		.loc 1 176 60 is_stmt 1
 921              		.cfi_startproc
 922              	.LVL90:
 923 0594 130101FF 		addi	sp,sp,-16
 924              		.cfi_def_cfa_offset 16
 925 0598 23348100 		sd	s0,8(sp)
 926              		.cfi_offset 8, -8
 927 059c 13040101 		addi	s0,sp,16
 928              		.cfi_def_cfa 8, 0
 177:src/kernel/mmanagement/memory_allocator.cpp ****    size_t start_addr = (((size_t)NoAlloc::getEndAddress() - 1) & (~0xfff)) + 0x1000;
 929              		.loc 1 177 4
 930              	.LBB35:
 931              	.LBB36:
 932              		.loc 2 29 35
 933              		.loc 2 29 42 is_stmt 0
 934 05a0 97070000 		lla	a5,_ZN7NoAlloc16NOALLOC_END_ADDRE
 934      93870700 
 935 05a8 83B70700 		ld	a5,0(a5)
 936              	.LBE36:
 937              	.LBE35:
 938              		.loc 1 177 59
 939 05ac 9387F7FF 		addi	a5,a5,-1
 940              		.loc 1 177 64
 941 05b0 37F7FFFF 		li	a4,-4096
 942 05b4 B3F7E700 		and	a5,a5,a4
 943              		.loc 1 177 78
 944 05b8 37170000 		li	a4,4096
 945 05bc B387E700 		add	a5,a5,a4
 946              	.LVL91:
 178:src/kernel/mmanagement/memory_allocator.cpp ****     if(adr < (void*)start_addr || adr >= HEAP_END_ADDR)
 947              		.loc 1 178 5 is_stmt 1
 948 05c0 63E2F504 		bgtu	a5,a1,.L71
 949              		.loc 1 178 39 is_stmt 0 discriminator 1
 950 05c4 97070000 		lla	a5,HEAP_END_ADDR
 950      93870700 
 951              	.LVL92:
 952 05cc 83B70700 		ld	a5,0(a5)
 953              		.loc 1 178 32 discriminator 1
 954 05d0 63FEF502 		bleu	a5,a1,.L72
 179:src/kernel/mmanagement/memory_allocator.cpp ****         return nullptr;
 180:src/kernel/mmanagement/memory_allocator.cpp ****     size_t t = (size_t)adr;
 955              		.loc 1 180 5 is_stmt 1
 956              	.LVL93:
 181:src/kernel/mmanagement/memory_allocator.cpp ****     FreeSegment *cur = fall_head;
 957              		.loc 1 181 5
 958              		.loc 1 181 18 is_stmt 0
 959 05d4 03350501 		ld	a0,16(a0)
 960              	.LVL94:
 961 05d8 6F008000 		j	.L70
GAS LISTING /tmp/ccGQJ8tf.s 			page 27


 962              	.LVL95:
 963              	.L69:
 182:src/kernel/mmanagement/memory_allocator.cpp ****     while(cur)
 183:src/kernel/mmanagement/memory_allocator.cpp ****     {
 184:src/kernel/mmanagement/memory_allocator.cpp ****         // if(t == (size_t)cur+sizeof(FreeSegment))
 185:src/kernel/mmanagement/memory_allocator.cpp ****         //     break;
 186:src/kernel/mmanagement/memory_allocator.cpp ****         if(t >= (size_t)cur->addr && t < (size_t)cur->addr + cur->size)
 187:src/kernel/mmanagement/memory_allocator.cpp ****             break;    
 188:src/kernel/mmanagement/memory_allocator.cpp ****         
 189:src/kernel/mmanagement/memory_allocator.cpp ****         cur = cur->next;
 964              		.loc 1 189 9 is_stmt 1
 965              		.loc 1 189 13 is_stmt 0
 966 05dc 03350500 		ld	a0,0(a0)
 967              	.LVL96:
 968              	.L70:
 182:src/kernel/mmanagement/memory_allocator.cpp ****     while(cur)
 969              		.loc 1 182 5 is_stmt 1
 182:src/kernel/mmanagement/memory_allocator.cpp ****     while(cur)
 970              		.loc 1 182 11 is_stmt 0
 971 05e0 630C0500 		beq	a0,zero,.L67
 186:src/kernel/mmanagement/memory_allocator.cpp ****             break;    
 972              		.loc 1 186 9 is_stmt 1
 186:src/kernel/mmanagement/memory_allocator.cpp ****             break;    
 973              		.loc 1 186 30 is_stmt 0
 974 05e4 83370501 		ld	a5,16(a0)
 186:src/kernel/mmanagement/memory_allocator.cpp ****             break;    
 975              		.loc 1 186 9
 976 05e8 E3EAF5FE 		bgtu	a5,a1,.L69
 186:src/kernel/mmanagement/memory_allocator.cpp ****             break;    
 977              		.loc 1 186 67 discriminator 1
 978 05ec 03378500 		ld	a4,8(a0)
 186:src/kernel/mmanagement/memory_allocator.cpp ****             break;    
 979              		.loc 1 186 60 discriminator 1
 980 05f0 B387E700 		add	a5,a5,a4
 186:src/kernel/mmanagement/memory_allocator.cpp ****             break;    
 981              		.loc 1 186 35 discriminator 1
 982 05f4 E3F4F5FE 		bleu	a5,a1,.L69
 983              	.LVL97:
 984              	.L67:
 190:src/kernel/mmanagement/memory_allocator.cpp ****     }
 191:src/kernel/mmanagement/memory_allocator.cpp ****     if(cur)
 192:src/kernel/mmanagement/memory_allocator.cpp ****         return cur;
 193:src/kernel/mmanagement/memory_allocator.cpp ****     else return nullptr;
 194:src/kernel/mmanagement/memory_allocator.cpp **** }
 985              		.loc 1 194 1
 986 05f8 03348100 		ld	s0,8(sp)
 987              		.cfi_remember_state
 988              		.cfi_restore 8
 989              		.cfi_def_cfa 2, 16
 990 05fc 13010101 		addi	sp,sp,16
 991              		.cfi_def_cfa_offset 0
 992 0600 67800000 		jr	ra
 993              	.LVL98:
 994              	.L71:
 995              		.cfi_restore_state
 179:src/kernel/mmanagement/memory_allocator.cpp ****     size_t t = (size_t)adr;
 996              		.loc 1 179 16
GAS LISTING /tmp/ccGQJ8tf.s 			page 28


 997 0604 13050000 		li	a0,0
 998              	.LVL99:
 999 0608 6FF01FFF 		j	.L67
 1000              	.LVL100:
 1001              	.L72:
 1002 060c 13050000 		li	a0,0
 1003              	.LVL101:
 1004 0610 6FF09FFE 		j	.L67
 1005              		.cfi_endproc
 1006              	.LFE119:
 1008              		.align	2
 1009              		.globl	_ZN15MemoryAllocator10print_listEv
 1011              	_ZN15MemoryAllocator10print_listEv:
 1012              	.LFB120:
 195:src/kernel/mmanagement/memory_allocator.cpp **** 
 196:src/kernel/mmanagement/memory_allocator.cpp **** void MemoryAllocator::print_list(){
 1013              		.loc 1 196 35 is_stmt 1
 1014              		.cfi_startproc
 1015              	.LVL102:
 1016 0614 130101FE 		addi	sp,sp,-32
 1017              		.cfi_def_cfa_offset 32
 1018 0618 233C1100 		sd	ra,24(sp)
 1019 061c 23388100 		sd	s0,16(sp)
 1020 0620 23349100 		sd	s1,8(sp)
 1021              		.cfi_offset 1, -8
 1022              		.cfi_offset 8, -16
 1023              		.cfi_offset 9, -24
 1024 0624 13040102 		addi	s0,sp,32
 1025              		.cfi_def_cfa 8, 0
 1026 0628 93040500 		mv	s1,a0
 197:src/kernel/mmanagement/memory_allocator.cpp **** 
 198:src/kernel/mmanagement/memory_allocator.cpp ****     kprintString("------Free Segment Lista------\n");
 1027              		.loc 1 198 5
 1028              		.loc 1 198 17 is_stmt 0
 1029 062c 17050000 		lla	a0,.LC7
 1029      13050500 
 1030              	.LVL103:
 1031 0634 97000000 		call	_Z12kprintStringPKc
 1031      E7800000 
 1032              	.LVL104:
 199:src/kernel/mmanagement/memory_allocator.cpp ****     if(!fmem_head)
 1033              		.loc 1 199 5 is_stmt 1
 1034              		.loc 1 199 9 is_stmt 0
 1035 063c 83B78400 		ld	a5,8(s1)
 1036              		.loc 1 199 5
 1037 0640 63800708 		beq	a5,zero,.L79
 1038              	.L75:
 200:src/kernel/mmanagement/memory_allocator.cpp ****         kprintString("LISTA JE PRAZNA!\n");
 201:src/kernel/mmanagement/memory_allocator.cpp ****     for(FreeSegment* curr = fmem_head; curr; curr = curr->next){
 1039              		.loc 1 201 5 is_stmt 1
 1040              	.LBB37:
 1041              		.loc 1 201 22 is_stmt 0
 1042 0644 83B48400 		ld	s1,8(s1)
 1043              	.LVL105:
 1044              	.L77:
 1045              		.loc 1 201 40 discriminator 3
 1046 0648 63860408 		beq	s1,zero,.L76
GAS LISTING /tmp/ccGQJ8tf.s 			page 29


 202:src/kernel/mmanagement/memory_allocator.cpp ****         kprintInt((uint64)curr, 16);
 1047              		.loc 1 202 9 is_stmt 1 discriminator 2
 1048              		.loc 1 202 18 is_stmt 0 discriminator 2
 1049 064c 13060000 		li	a2,0
 1050 0650 93050001 		li	a1,16
 1051 0654 13850400 		mv	a0,s1
 1052 0658 97000000 		call	_Z9kprintIntmib
 1052      E7800000 
 1053              	.LVL106:
 203:src/kernel/mmanagement/memory_allocator.cpp ****         kprintString("\n");
 1054              		.loc 1 203 9 is_stmt 1 discriminator 2
 1055              		.loc 1 203 21 is_stmt 0 discriminator 2
 1056 0660 17050000 		lla	a0,.LC3
 1056      13050500 
 1057 0668 97000000 		call	_Z12kprintStringPKc
 1057      E7800000 
 1058              	.LVL107:
 204:src/kernel/mmanagement/memory_allocator.cpp ****         kprintInt((uint64)curr->size, 16);
 1059              		.loc 1 204 9 is_stmt 1 discriminator 2
 1060              		.loc 1 204 18 is_stmt 0 discriminator 2
 1061 0670 13060000 		li	a2,0
 1062 0674 93050001 		li	a1,16
 1063 0678 03B58400 		ld	a0,8(s1)
 1064 067c 97000000 		call	_Z9kprintIntmib
 1064      E7800000 
 1065              	.LVL108:
 205:src/kernel/mmanagement/memory_allocator.cpp ****         kprintString("\n");
 1066              		.loc 1 205 9 is_stmt 1 discriminator 2
 1067              		.loc 1 205 21 is_stmt 0 discriminator 2
 1068 0684 17050000 		lla	a0,.LC3
 1068      13050500 
 1069 068c 97000000 		call	_Z12kprintStringPKc
 1069      E7800000 
 1070              	.LVL109:
 206:src/kernel/mmanagement/memory_allocator.cpp ****         kprintInt((uint64)curr->addr, 16);
 1071              		.loc 1 206 9 is_stmt 1 discriminator 2
 1072              		.loc 1 206 18 is_stmt 0 discriminator 2
 1073 0694 13060000 		li	a2,0
 1074 0698 93050001 		li	a1,16
 1075 069c 03B50401 		ld	a0,16(s1)
 1076 06a0 97000000 		call	_Z9kprintIntmib
 1076      E7800000 
 1077              	.LVL110:
 207:src/kernel/mmanagement/memory_allocator.cpp ****         kprintString("\n");
 1078              		.loc 1 207 9 is_stmt 1 discriminator 2
 1079              		.loc 1 207 21 is_stmt 0 discriminator 2
 1080 06a8 17050000 		lla	a0,.LC3
 1080      13050500 
 1081 06b0 97000000 		call	_Z12kprintStringPKc
 1081      E7800000 
 1082              	.LVL111:
 201:src/kernel/mmanagement/memory_allocator.cpp ****         kprintInt((uint64)curr, 16);
 1083              		.loc 1 201 51 discriminator 2
 1084 06b8 83B40400 		ld	s1,0(s1)
 1085              	.LVL112:
 201:src/kernel/mmanagement/memory_allocator.cpp ****         kprintInt((uint64)curr, 16);
 1086              		.loc 1 201 5 discriminator 2
GAS LISTING /tmp/ccGQJ8tf.s 			page 30


 1087 06bc 6FF0DFF8 		j	.L77
 1088              	.LVL113:
 1089              	.L79:
 1090              	.LBE37:
 200:src/kernel/mmanagement/memory_allocator.cpp ****     for(FreeSegment* curr = fmem_head; curr; curr = curr->next){
 1091              		.loc 1 200 9 is_stmt 1
 200:src/kernel/mmanagement/memory_allocator.cpp ****     for(FreeSegment* curr = fmem_head; curr; curr = curr->next){
 1092              		.loc 1 200 21 is_stmt 0
 1093 06c0 17050000 		lla	a0,.LC8
 1093      13050500 
 1094 06c8 97000000 		call	_Z12kprintStringPKc
 1094      E7800000 
 1095              	.LVL114:
 1096 06d0 6FF05FF7 		j	.L75
 1097              	.LVL115:
 1098              	.L76:
 208:src/kernel/mmanagement/memory_allocator.cpp ****     }
 209:src/kernel/mmanagement/memory_allocator.cpp ****     kprintString("------------------------------\n");
 1099              		.loc 1 209 5 is_stmt 1
 1100              		.loc 1 209 17 is_stmt 0
 1101 06d4 17050000 		lla	a0,.LC9
 1101      13050500 
 1102 06dc 97000000 		call	_Z12kprintStringPKc
 1102      E7800000 
 1103              	.LVL116:
 210:src/kernel/mmanagement/memory_allocator.cpp **** }
 1104              		.loc 1 210 1
 1105 06e4 83308101 		ld	ra,24(sp)
 1106              		.cfi_restore 1
 1107 06e8 03340101 		ld	s0,16(sp)
 1108              		.cfi_restore 8
 1109              		.cfi_def_cfa 2, 32
 1110 06ec 83348100 		ld	s1,8(sp)
 1111              		.cfi_restore 9
 1112              	.LVL117:
 1113 06f0 13010102 		addi	sp,sp,32
 1114              		.cfi_def_cfa_offset 0
 1115 06f4 67800000 		jr	ra
 1116              		.cfi_endproc
 1117              	.LFE120:
 1119              		.align	2
 1120              		.globl	_ZN15MemoryAllocator14print_all_listEv
 1122              	_ZN15MemoryAllocator14print_all_listEv:
 1123              	.LFB121:
 211:src/kernel/mmanagement/memory_allocator.cpp **** 
 212:src/kernel/mmanagement/memory_allocator.cpp **** void MemoryAllocator::print_all_list(){
 1124              		.loc 1 212 39 is_stmt 1
 1125              		.cfi_startproc
 1126              	.LVL118:
 1127 06f8 130101FE 		addi	sp,sp,-32
 1128              		.cfi_def_cfa_offset 32
 1129 06fc 233C1100 		sd	ra,24(sp)
 1130 0700 23388100 		sd	s0,16(sp)
 1131 0704 23349100 		sd	s1,8(sp)
 1132              		.cfi_offset 1, -8
 1133              		.cfi_offset 8, -16
 1134              		.cfi_offset 9, -24
GAS LISTING /tmp/ccGQJ8tf.s 			page 31


 1135 0708 13040102 		addi	s0,sp,32
 1136              		.cfi_def_cfa 8, 0
 1137 070c 93040500 		mv	s1,a0
 213:src/kernel/mmanagement/memory_allocator.cpp **** 
 214:src/kernel/mmanagement/memory_allocator.cpp ****     kprintString("------Allocated Segment Lista------\n");
 1138              		.loc 1 214 5
 1139              		.loc 1 214 17 is_stmt 0
 1140 0710 17050000 		lla	a0,.LC10
 1140      13050500 
 1141              	.LVL119:
 1142 0718 97000000 		call	_Z12kprintStringPKc
 1142      E7800000 
 1143              	.LVL120:
 215:src/kernel/mmanagement/memory_allocator.cpp ****     if(!fall_head)
 1144              		.loc 1 215 5 is_stmt 1
 1145              		.loc 1 215 9 is_stmt 0
 1146 0720 83B70401 		ld	a5,16(s1)
 1147              		.loc 1 215 5
 1148 0724 63880708 		beq	a5,zero,.L85
 1149              	.L81:
 216:src/kernel/mmanagement/memory_allocator.cpp ****         kprintString("LISTA JE PRAZNA!\n");
 217:src/kernel/mmanagement/memory_allocator.cpp ****     for(FreeSegment* curr = fall_head; curr; curr = curr->next){
 1150              		.loc 1 217 5 is_stmt 1
 1151              	.LBB38:
 1152              		.loc 1 217 22 is_stmt 0
 1153 0728 83B40401 		ld	s1,16(s1)
 1154              	.LVL121:
 1155              	.L83:
 1156              		.loc 1 217 40 discriminator 3
 1157 072c 638E0408 		beq	s1,zero,.L82
 218:src/kernel/mmanagement/memory_allocator.cpp ****         kprintInt((uint64)curr, 16);
 1158              		.loc 1 218 9 is_stmt 1 discriminator 2
 1159              		.loc 1 218 18 is_stmt 0 discriminator 2
 1160 0730 13060000 		li	a2,0
 1161 0734 93050001 		li	a1,16
 1162 0738 13850400 		mv	a0,s1
 1163 073c 97000000 		call	_Z9kprintIntmib
 1163      E7800000 
 1164              	.LVL122:
 219:src/kernel/mmanagement/memory_allocator.cpp ****         kprintString("\n");
 1165              		.loc 1 219 9 is_stmt 1 discriminator 2
 1166              		.loc 1 219 21 is_stmt 0 discriminator 2
 1167 0744 17050000 		lla	a0,.LC3
 1167      13050500 
 1168 074c 97000000 		call	_Z12kprintStringPKc
 1168      E7800000 
 1169              	.LVL123:
 220:src/kernel/mmanagement/memory_allocator.cpp ****         kprintInt((uint64)curr->size,16);
 1170              		.loc 1 220 9 is_stmt 1 discriminator 2
 1171              		.loc 1 220 18 is_stmt 0 discriminator 2
 1172 0754 13060000 		li	a2,0
 1173 0758 93050001 		li	a1,16
 1174 075c 03B58400 		ld	a0,8(s1)
 1175 0760 97000000 		call	_Z9kprintIntmib
 1175      E7800000 
 1176              	.LVL124:
 221:src/kernel/mmanagement/memory_allocator.cpp ****         kprintString("\n");
GAS LISTING /tmp/ccGQJ8tf.s 			page 32


 1177              		.loc 1 221 9 is_stmt 1 discriminator 2
 1178              		.loc 1 221 21 is_stmt 0 discriminator 2
 1179 0768 17050000 		lla	a0,.LC3
 1179      13050500 
 1180 0770 97000000 		call	_Z12kprintStringPKc
 1180      E7800000 
 1181              	.LVL125:
 222:src/kernel/mmanagement/memory_allocator.cpp ****         kprintInt((uint64)curr->addr, 16);
 1182              		.loc 1 222 9 is_stmt 1 discriminator 2
 1183              		.loc 1 222 18 is_stmt 0 discriminator 2
 1184 0778 13060000 		li	a2,0
 1185 077c 93050001 		li	a1,16
 1186 0780 03B50401 		ld	a0,16(s1)
 1187 0784 97000000 		call	_Z9kprintIntmib
 1187      E7800000 
 1188              	.LVL126:
 223:src/kernel/mmanagement/memory_allocator.cpp ****         kprintString("\n");
 1189              		.loc 1 223 9 is_stmt 1 discriminator 2
 1190              		.loc 1 223 21 is_stmt 0 discriminator 2
 1191 078c 17050000 		lla	a0,.LC3
 1191      13050500 
 1192 0794 97000000 		call	_Z12kprintStringPKc
 1192      E7800000 
 1193              	.LVL127:
 224:src/kernel/mmanagement/memory_allocator.cpp ****         kprintString("\n");
 1194              		.loc 1 224 9 is_stmt 1 discriminator 2
 1195              		.loc 1 224 21 is_stmt 0 discriminator 2
 1196 079c 17050000 		lla	a0,.LC3
 1196      13050500 
 1197 07a4 97000000 		call	_Z12kprintStringPKc
 1197      E7800000 
 1198              	.LVL128:
 217:src/kernel/mmanagement/memory_allocator.cpp ****         kprintInt((uint64)curr, 16);
 1199              		.loc 1 217 51 discriminator 2
 1200 07ac 83B40400 		ld	s1,0(s1)
 1201              	.LVL129:
 217:src/kernel/mmanagement/memory_allocator.cpp ****         kprintInt((uint64)curr, 16);
 1202              		.loc 1 217 5 discriminator 2
 1203 07b0 6FF0DFF7 		j	.L83
 1204              	.LVL130:
 1205              	.L85:
 1206              	.LBE38:
 216:src/kernel/mmanagement/memory_allocator.cpp ****     for(FreeSegment* curr = fall_head; curr; curr = curr->next){
 1207              		.loc 1 216 9 is_stmt 1
 216:src/kernel/mmanagement/memory_allocator.cpp ****     for(FreeSegment* curr = fall_head; curr; curr = curr->next){
 1208              		.loc 1 216 21 is_stmt 0
 1209 07b4 17050000 		lla	a0,.LC8
 1209      13050500 
 1210 07bc 97000000 		call	_Z12kprintStringPKc
 1210      E7800000 
 1211              	.LVL131:
 1212 07c4 6FF05FF6 		j	.L81
 1213              	.LVL132:
 1214              	.L82:
 225:src/kernel/mmanagement/memory_allocator.cpp ****     }
 226:src/kernel/mmanagement/memory_allocator.cpp ****     kprintString("------------------------------\n");
 1215              		.loc 1 226 5 is_stmt 1
GAS LISTING /tmp/ccGQJ8tf.s 			page 33


 1216              		.loc 1 226 17 is_stmt 0
 1217 07c8 17050000 		lla	a0,.LC9
 1217      13050500 
 1218 07d0 97000000 		call	_Z12kprintStringPKc
 1218      E7800000 
 1219              	.LVL133:
 227:src/kernel/mmanagement/memory_allocator.cpp **** }...
 1220              		.loc 1 227 1
 1221 07d8 83308101 		ld	ra,24(sp)
 1222              		.cfi_restore 1
 1223 07dc 03340101 		ld	s0,16(sp)
 1224              		.cfi_restore 8
 1225              		.cfi_def_cfa 2, 32
 1226 07e0 83348100 		ld	s1,8(sp)
 1227              		.cfi_restore 9
 1228              	.LVL134:
 1229 07e4 13010102 		addi	sp,sp,32
 1230              		.cfi_def_cfa_offset 0
 1231 07e8 67800000 		jr	ra
 1232              		.cfi_endproc
 1233              	.LFE121:
 1235              		.globl	_ZN15MemoryAllocator9allocatorE
 1236              		.section	.rodata.str1.8,"aMS",@progbits,1
 1237              		.align	3
 1238              	.LC0:
 1239 0000 66726565 		.string	"free_seg_meta_cache"
 1239      5F736567 
 1239      5F6D6574 
 1239      615F6361 
 1239      63686500 
 1240 0014 00000000 		.zero	4
 1241              	.LC1:
 1242 0018 4D454D20 		.string	"MEM ALLOC node cache not allocated\n"
 1242      414C4C4F 
 1242      43206E6F 
 1242      64652063 
 1242      61636865 
 1243 003c 00000000 		.zero	4
 1244              	.LC2:
 1245 0040 224D656D 		.string	"\"MemoryAllocator start address: \": "
 1245      6F727941 
 1245      6C6C6F63 
 1245      61746F72 
 1245      20737461 
 1246 0064 00000000 		.zero	4
 1247              	.LC3:
 1248 0068 0A00     		.string	"\n"
 1249 006a 00000000 		.zero	6
 1249      0000
 1250              	.LC4:
 1251 0070 4D454D5F 		.string	"MEM_ALLOC_FREEE GRESKA\n"
 1251      414C4C4F 
 1251      435F4652 
 1251      45454520 
 1251      47524553 
 1252              	.LC5:
 1253 0088 6164723A 		.string	"adr: "
GAS LISTING /tmp/ccGQJ8tf.s 			page 34


 1253      2000
 1254 008e 0000     		.zero	2
 1255              	.LC6:
 1256 0090 52697363 		.string	"Riscv::r_sepc(): "
 1256      763A3A72 
 1256      5F736570 
 1256      6328293A 
 1256      2000
 1257 00a2 00000000 		.zero	6
 1257      0000
 1258              	.LC7:
 1259 00a8 2D2D2D2D 		.string	"------Free Segment Lista------\n"
 1259      2D2D4672 
 1259      65652053 
 1259      65676D65 
 1259      6E74204C 
 1260              	.LC8:
 1261 00c8 4C495354 		.string	"LISTA JE PRAZNA!\n"
 1261      41204A45 
 1261      20505241 
 1261      5A4E4121 
 1261      0A00
 1262 00da 00000000 		.zero	6
 1262      0000
 1263              	.LC9:
 1264 00e0 2D2D2D2D 		.string	"------------------------------\n"
 1264      2D2D2D2D 
 1264      2D2D2D2D 
 1264      2D2D2D2D 
 1264      2D2D2D2D 
 1265              	.LC10:
 1266 0100 2D2D2D2D 		.string	"------Allocated Segment Lista------\n"
 1266      2D2D416C 
 1266      6C6F6361 
 1266      74656420 
 1266      5365676D 
 1267              		.section	.sbss,"aw",@nobits
 1268              		.align	3
 1271              	_ZN15MemoryAllocator9allocatorE:
 1272 0000 00000000 		.zero	8
 1272      00000000 
 1273              		.text
 1274              	.Letext0:
 1275              		.file 4 "src/kernel/mmanagement/../../../h/../h/../lib/hw.h"
 1276              		.file 5 "src/kernel/mmanagement/../../../h/../h/../h/../h/list.h"
 1277              		.file 6 "src/kernel/mmanagement/../../../h/../h/../h/object_cache.h"
 1278              		.file 7 "src/kernel/mmanagement/../../../h/../h/slab_allocator.h"
 1279              		.file 8 "src/kernel/mmanagement/../../../h/../h/../h/memory_allocator.hpp"
 1280              		.file 9 "src/kernel/mmanagement/../../../h/kernel_lib.h"
 1281              		.file 10 "src/kernel/mmanagement/../../../h/../h/kernel_funs.h"
 6505              		.align	3
 6508              	DW.ref.__gxx_personality_v0:
 6509 0000 00000000 		.dword	__gxx_personality_v0
 6509      00000000 
 6510              		.ident	"GCC: () 8.3.0"
GAS LISTING /tmp/ccGQJ8tf.s 			page 35


DEFINED SYMBOLS
                            *ABS*:0000000000000000 memory_allocator.cpp
     /tmp/ccGQJ8tf.s:12     .text:0000000000000000 _ZN15MemoryAllocator11getInstanceEv
     /tmp/ccGQJ8tf.s:16     .text:0000000000000000 .L0 
     /tmp/ccGQJ8tf.s:6508   .sdata.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccGQJ8tf.s:19     .text:0000000000000000 .L0 
     /tmp/ccGQJ8tf.s:21     .text:0000000000000000 .L0 
     /tmp/ccGQJ8tf.s:1271   .sbss:0000000000000000 _ZN15MemoryAllocator9allocatorE
     /tmp/ccGQJ8tf.s:22     .text:0000000000000000 .L0 
     /tmp/ccGQJ8tf.s:25     .text:000000000000000c .L0 
     /tmp/ccGQJ8tf.s:28     .text:0000000000000010 .L0 
     /tmp/ccGQJ8tf.s:29     .text:0000000000000010 .L0 
     /tmp/ccGQJ8tf.s:32     .text:000000000000001c .L0 
     /tmp/ccGQJ8tf.s:35     .text:0000000000000020 .L0 
     /tmp/ccGQJ8tf.s:36     .text:0000000000000024 .L0 
     /tmp/ccGQJ8tf.s:41     .text:0000000000000034 .L0 
     /tmp/ccGQJ8tf.s:42     .text:0000000000000034 .L0 
     /tmp/ccGQJ8tf.s:43     .text:0000000000000034 .L0 
     /tmp/ccGQJ8tf.s:44     .text:0000000000000034 .L0 
     /tmp/ccGQJ8tf.s:46     .text:0000000000000038 .L0 
     /tmp/ccGQJ8tf.s:51     .text:0000000000000038 .L0 
     /tmp/ccGQJ8tf.s:52     .text:0000000000000038 .L0 
     /tmp/ccGQJ8tf.s:55     .text:0000000000000040 .L0 
     /tmp/ccGQJ8tf.s:59     .text:000000000000004c .L0 
     /tmp/ccGQJ8tf.s:61     .text:0000000000000054 .L0 
     /tmp/ccGQJ8tf.s:62     .text:0000000000000054 .L0 
     /tmp/ccGQJ8tf.s:77     .text:0000000000000084 .L0 
     /tmp/ccGQJ8tf.s:80     .text:0000000000000090 .L0 
     /tmp/ccGQJ8tf.s:82     .text:0000000000000094 .L0 
     /tmp/ccGQJ8tf.s:84     .text:0000000000000098 .L0 
     /tmp/ccGQJ8tf.s:85     .text:0000000000000098 .L0 
     /tmp/ccGQJ8tf.s:87     .text:000000000000009c .L0 
     /tmp/ccGQJ8tf.s:88     .text:000000000000009c .L0 
     /tmp/ccGQJ8tf.s:93     .text:00000000000000a8 .L0 
     /tmp/ccGQJ8tf.s:95     .text:00000000000000ac .L0 
     /tmp/ccGQJ8tf.s:96     .text:00000000000000ac .L0 
     /tmp/ccGQJ8tf.s:100    .text:00000000000000bc .L0 
     /tmp/ccGQJ8tf.s:105    .text:00000000000000c0 .L0 
     /tmp/ccGQJ8tf.s:106    .text:00000000000000c0 .L0 
     /tmp/ccGQJ8tf.s:107    .text:00000000000000c0 .L0 
     /tmp/ccGQJ8tf.s:112    .text:00000000000000cc .L0 
     /tmp/ccGQJ8tf.s:114    .text:00000000000000d0 .L0 
     /tmp/ccGQJ8tf.s:117    .text:00000000000000d8 .L0 
     /tmp/ccGQJ8tf.s:121    .text:00000000000000e0 .L0 
     /tmp/ccGQJ8tf.s:125    .text:00000000000000f0 .L0 
     /tmp/ccGQJ8tf.s:131    .text:0000000000000104 .L0 
     /tmp/ccGQJ8tf.s:135    .text:0000000000000114 .L0 
     /tmp/ccGQJ8tf.s:136    .text:0000000000000114 .L0 
     /tmp/ccGQJ8tf.s:139    .text:000000000000011c .L0 
     /tmp/ccGQJ8tf.s:141    .text:0000000000000120 .L0 
     /tmp/ccGQJ8tf.s:142    .text:0000000000000120 .L0 
     /tmp/ccGQJ8tf.s:144    .text:0000000000000124 .L0 
     /tmp/ccGQJ8tf.s:149    .text:0000000000000134 .L0 
     /tmp/ccGQJ8tf.s:151    .text:0000000000000138 .L0 
     /tmp/ccGQJ8tf.s:152    .text:0000000000000138 .L0 
     /tmp/ccGQJ8tf.s:157    .text:0000000000000140 .L0 
     /tmp/ccGQJ8tf.s:158    .text:0000000000000140 .L0 
GAS LISTING /tmp/ccGQJ8tf.s 			page 36


     /tmp/ccGQJ8tf.s:161    .text:000000000000014c .L0 
     /tmp/ccGQJ8tf.s:162    .text:0000000000000150 .L0 
     /tmp/ccGQJ8tf.s:163    .text:0000000000000150 .L0 
     /tmp/ccGQJ8tf.s:165    .text:0000000000000154 .L0 
     /tmp/ccGQJ8tf.s:166    .text:0000000000000154 .L0 
     /tmp/ccGQJ8tf.s:168    .text:0000000000000158 .L0 
     /tmp/ccGQJ8tf.s:170    .text:000000000000015c .L0 
     /tmp/ccGQJ8tf.s:172    .text:0000000000000160 .L0 
     /tmp/ccGQJ8tf.s:175    .text:0000000000000164 .L0 
     /tmp/ccGQJ8tf.s:179    .text:0000000000000164 .L0 
     /tmp/ccGQJ8tf.s:180    .text:0000000000000164 .L0 
     /tmp/ccGQJ8tf.s:186    .text:0000000000000174 .L0 
     /tmp/ccGQJ8tf.s:190    .text:000000000000017c .L0 
     /tmp/ccGQJ8tf.s:200    .text:0000000000000194 .L0 
     /tmp/ccGQJ8tf.s:230    .text:0000000000000194 _ZN15MemoryAllocator9mem_allocEm
     /tmp/ccGQJ8tf.s:233    .text:0000000000000194 .L0 
     /tmp/ccGQJ8tf.s:235    .text:0000000000000194 .L0 
     /tmp/ccGQJ8tf.s:236    .text:0000000000000198 .L0 
     /tmp/ccGQJ8tf.s:243    .text:00000000000001b0 .L0 
     /tmp/ccGQJ8tf.s:244    .text:00000000000001b0 .L0 
     /tmp/ccGQJ8tf.s:245    .text:00000000000001b0 .L0 
     /tmp/ccGQJ8tf.s:246    .text:00000000000001b0 .L0 
     /tmp/ccGQJ8tf.s:247    .text:00000000000001b0 .L0 
     /tmp/ccGQJ8tf.s:248    .text:00000000000001b0 .L0 
     /tmp/ccGQJ8tf.s:250    .text:00000000000001b4 .L0 
     /tmp/ccGQJ8tf.s:253    .text:00000000000001b4 .L0 
     /tmp/ccGQJ8tf.s:254    .text:00000000000001b4 .L0 
     /tmp/ccGQJ8tf.s:257    .text:00000000000001b8 .L0 
     /tmp/ccGQJ8tf.s:258    .text:00000000000001b8 .L0 
     /tmp/ccGQJ8tf.s:261    .text:00000000000001bc .L0 
     /tmp/ccGQJ8tf.s:263    .text:00000000000001c0 .L0 
     /tmp/ccGQJ8tf.s:265    .text:00000000000001c4 .L0 
     /tmp/ccGQJ8tf.s:270    .text:00000000000001cc .L0 
     /tmp/ccGQJ8tf.s:273    .text:00000000000001d0 .L0 
     /tmp/ccGQJ8tf.s:277    .text:00000000000001d4 .L0 
     /tmp/ccGQJ8tf.s:278    .text:00000000000001d4 .L0 
     /tmp/ccGQJ8tf.s:279    .text:00000000000001d4 .L0 
     /tmp/ccGQJ8tf.s:281    .text:00000000000001d8 .L0 
     /tmp/ccGQJ8tf.s:285    .text:00000000000001dc .L0 
     /tmp/ccGQJ8tf.s:286    .text:00000000000001dc .L0 
     /tmp/ccGQJ8tf.s:288    .text:00000000000001e0 .L0 
     /tmp/ccGQJ8tf.s:289    .text:00000000000001e0 .L0 
     /tmp/ccGQJ8tf.s:291    .text:00000000000001e4 .L0 
     /tmp/ccGQJ8tf.s:293    .text:00000000000001e8 .L0 
     /tmp/ccGQJ8tf.s:295    .text:00000000000001ec .L0 
     /tmp/ccGQJ8tf.s:297    .text:00000000000001f0 .L0 
     /tmp/ccGQJ8tf.s:299    .text:00000000000001f4 .L0 
     /tmp/ccGQJ8tf.s:302    .text:00000000000001f8 .L0 
     /tmp/ccGQJ8tf.s:308    .text:0000000000000200 .L0 
     /tmp/ccGQJ8tf.s:311    .text:0000000000000208 .L0 
     /tmp/ccGQJ8tf.s:312    .text:0000000000000208 .L0 
     /tmp/ccGQJ8tf.s:315    .text:000000000000020c .L0 
     /tmp/ccGQJ8tf.s:317    .text:0000000000000210 .L0 
     /tmp/ccGQJ8tf.s:318    .text:0000000000000210 .L0 
     /tmp/ccGQJ8tf.s:322    .text:0000000000000214 .L0 
     /tmp/ccGQJ8tf.s:324    .text:0000000000000218 .L0 
     /tmp/ccGQJ8tf.s:325    .text:0000000000000218 .L0 
GAS LISTING /tmp/ccGQJ8tf.s 			page 37


     /tmp/ccGQJ8tf.s:328    .text:000000000000021c .L0 
     /tmp/ccGQJ8tf.s:329    .text:000000000000021c .L0 
     /tmp/ccGQJ8tf.s:331    .text:0000000000000220 .L0 
     /tmp/ccGQJ8tf.s:333    .text:0000000000000224 .L0 
     /tmp/ccGQJ8tf.s:334    .text:0000000000000224 .L0 
     /tmp/ccGQJ8tf.s:336    .text:0000000000000228 .L0 
     /tmp/ccGQJ8tf.s:337    .text:0000000000000228 .L0 
     /tmp/ccGQJ8tf.s:341    .text:000000000000022c .L0 
     /tmp/ccGQJ8tf.s:343    .text:0000000000000234 .L0 
     /tmp/ccGQJ8tf.s:344    .text:0000000000000234 .L0 
     /tmp/ccGQJ8tf.s:346    .text:0000000000000238 .L0 
     /tmp/ccGQJ8tf.s:347    .text:0000000000000238 .L0 
     /tmp/ccGQJ8tf.s:349    .text:000000000000023c .L0 
     /tmp/ccGQJ8tf.s:351    .text:0000000000000240 .L0 
     /tmp/ccGQJ8tf.s:354    .text:0000000000000244 .L0 
     /tmp/ccGQJ8tf.s:356    .text:0000000000000248 .L0 
     /tmp/ccGQJ8tf.s:359    .text:000000000000024c .L0 
     /tmp/ccGQJ8tf.s:363    .text:0000000000000250 .L0 
     /tmp/ccGQJ8tf.s:365    .text:0000000000000250 .L0 
     /tmp/ccGQJ8tf.s:366    .text:0000000000000250 .L0 
     /tmp/ccGQJ8tf.s:371    .text:000000000000025c .L0 
     /tmp/ccGQJ8tf.s:372    .text:000000000000025c .L0 
     /tmp/ccGQJ8tf.s:374    .text:0000000000000260 .L0 
     /tmp/ccGQJ8tf.s:376    .text:0000000000000264 .L0 
     /tmp/ccGQJ8tf.s:377    .text:0000000000000264 .L0 
     /tmp/ccGQJ8tf.s:379    .text:0000000000000268 .L0 
     /tmp/ccGQJ8tf.s:381    .text:000000000000026c .L0 
     /tmp/ccGQJ8tf.s:383    .text:0000000000000270 .L0 
     /tmp/ccGQJ8tf.s:384    .text:0000000000000270 .L0 
     /tmp/ccGQJ8tf.s:386    .text:0000000000000274 .L0 
     /tmp/ccGQJ8tf.s:388    .text:0000000000000278 .L0 
     /tmp/ccGQJ8tf.s:390    .text:000000000000027c .L0 
     /tmp/ccGQJ8tf.s:391    .text:000000000000027c .L0 
     /tmp/ccGQJ8tf.s:395    .text:0000000000000284 .L0 
     /tmp/ccGQJ8tf.s:396    .text:0000000000000284 .L0 
     /tmp/ccGQJ8tf.s:398    .text:000000000000028c .L0 
     /tmp/ccGQJ8tf.s:404    .text:000000000000028c _ZN15MemoryAllocator17wantToFreeAddressEPv
     /tmp/ccGQJ8tf.s:407    .text:000000000000028c .L0 
     /tmp/ccGQJ8tf.s:409    .text:000000000000028c .L0 
     /tmp/ccGQJ8tf.s:410    .text:0000000000000290 .L0 
     /tmp/ccGQJ8tf.s:412    .text:0000000000000294 .L0 
     /tmp/ccGQJ8tf.s:414    .text:0000000000000298 .L0 
     /tmp/ccGQJ8tf.s:416    .text:0000000000000298 .L0 
     /tmp/ccGQJ8tf.s:417    .text:0000000000000298 .L0 
     /tmp/ccGQJ8tf.s:420    .text:00000000000002a4 .L0 
     /tmp/ccGQJ8tf.s:422    .text:00000000000002a8 .L0 
     /tmp/ccGQJ8tf.s:425    .text:00000000000002b4 .L0 
     /tmp/ccGQJ8tf.s:428    .text:00000000000002b8 .L0 
     /tmp/ccGQJ8tf.s:429    .text:00000000000002b8 .L0 
     /tmp/ccGQJ8tf.s:430    .text:00000000000002b8 .L0 
     /tmp/ccGQJ8tf.s:433    .text:00000000000002bc .L0 
     /tmp/ccGQJ8tf.s:437    .text:00000000000002c0 .L0 
     /tmp/ccGQJ8tf.s:438    .text:00000000000002c0 .L0 
     /tmp/ccGQJ8tf.s:440    .text:00000000000002c4 .L0 
     /tmp/ccGQJ8tf.s:441    .text:00000000000002c4 .L0 
     /tmp/ccGQJ8tf.s:443    .text:00000000000002c8 .L0 
     /tmp/ccGQJ8tf.s:446    .text:00000000000002cc .L0 
GAS LISTING /tmp/ccGQJ8tf.s 			page 38


     /tmp/ccGQJ8tf.s:447    .text:00000000000002cc .L0 
     /tmp/ccGQJ8tf.s:448    .text:00000000000002cc .L0 
     /tmp/ccGQJ8tf.s:450    .text:00000000000002d0 .L0 
     /tmp/ccGQJ8tf.s:453    .text:00000000000002d4 .L0 
     /tmp/ccGQJ8tf.s:456    .text:00000000000002d8 .L0 
     /tmp/ccGQJ8tf.s:458    .text:00000000000002dc .L0 
     /tmp/ccGQJ8tf.s:460    .text:00000000000002e0 .L0 
     /tmp/ccGQJ8tf.s:461    .text:00000000000002e0 .L0 
     /tmp/ccGQJ8tf.s:463    .text:00000000000002e4 .L0 
     /tmp/ccGQJ8tf.s:466    .text:00000000000002e8 .L0 
     /tmp/ccGQJ8tf.s:467    .text:00000000000002e8 .L0 
     /tmp/ccGQJ8tf.s:469    .text:00000000000002ec .L0 
     /tmp/ccGQJ8tf.s:470    .text:00000000000002ec .L0 
     /tmp/ccGQJ8tf.s:476    .text:00000000000002f4 .L0 
     /tmp/ccGQJ8tf.s:477    .text:00000000000002f4 .L0 
     /tmp/ccGQJ8tf.s:479    .text:00000000000002f8 .L0 
     /tmp/ccGQJ8tf.s:484    .text:0000000000000300 .L0 
     /tmp/ccGQJ8tf.s:488    .text:0000000000000304 .L0 
     /tmp/ccGQJ8tf.s:489    .text:0000000000000308 .L0 
     /tmp/ccGQJ8tf.s:490    .text:0000000000000308 .L0 
     /tmp/ccGQJ8tf.s:491    .text:0000000000000308 .L0 
     /tmp/ccGQJ8tf.s:493    .text:000000000000030c .L0 
     /tmp/ccGQJ8tf.s:497    .text:0000000000000310 .L0 
     /tmp/ccGQJ8tf.s:499    .text:0000000000000310 .L0 
     /tmp/ccGQJ8tf.s:505    .text:0000000000000318 .L0 
     /tmp/ccGQJ8tf.s:508    .text:0000000000000320 .L0 
     /tmp/ccGQJ8tf.s:514    .text:0000000000000320 _ZN15MemoryAllocator27getAndRemoveFreeSegmentMetaEPv
     /tmp/ccGQJ8tf.s:517    .text:0000000000000320 .L0 
     /tmp/ccGQJ8tf.s:519    .text:0000000000000320 .L0 
     /tmp/ccGQJ8tf.s:520    .text:0000000000000324 .L0 
     /tmp/ccGQJ8tf.s:522    .text:0000000000000328 .L0 
     /tmp/ccGQJ8tf.s:524    .text:000000000000032c .L0 
     /tmp/ccGQJ8tf.s:528    .text:000000000000032c .L0 
     /tmp/ccGQJ8tf.s:529    .text:000000000000032c .L0 
     /tmp/ccGQJ8tf.s:530    .text:000000000000032c .L0 
     /tmp/ccGQJ8tf.s:535    .text:0000000000000338 .L0 
     /tmp/ccGQJ8tf.s:537    .text:000000000000033c .L0 
     /tmp/ccGQJ8tf.s:540    .text:0000000000000344 .L0 
     /tmp/ccGQJ8tf.s:544    .text:000000000000034c .L0 
     /tmp/ccGQJ8tf.s:546    .text:0000000000000350 .L0 
     /tmp/ccGQJ8tf.s:550    .text:000000000000035c .L0 
     /tmp/ccGQJ8tf.s:553    .text:0000000000000360 .L0 
     /tmp/ccGQJ8tf.s:554    .text:0000000000000360 .L0 
     /tmp/ccGQJ8tf.s:555    .text:0000000000000360 .L0 
     /tmp/ccGQJ8tf.s:558    .text:0000000000000364 .L0 
     /tmp/ccGQJ8tf.s:562    .text:0000000000000368 .L0 
     /tmp/ccGQJ8tf.s:563    .text:0000000000000368 .L0 
     /tmp/ccGQJ8tf.s:565    .text:000000000000036c .L0 
     /tmp/ccGQJ8tf.s:566    .text:000000000000036c .L0 
     /tmp/ccGQJ8tf.s:568    .text:0000000000000370 .L0 
     /tmp/ccGQJ8tf.s:571    .text:0000000000000374 .L0 
     /tmp/ccGQJ8tf.s:572    .text:0000000000000374 .L0 
     /tmp/ccGQJ8tf.s:573    .text:0000000000000374 .L0 
     /tmp/ccGQJ8tf.s:575    .text:0000000000000378 .L0 
     /tmp/ccGQJ8tf.s:578    .text:000000000000037c .L0 
     /tmp/ccGQJ8tf.s:581    .text:0000000000000380 .L0 
     /tmp/ccGQJ8tf.s:583    .text:0000000000000384 .L0 
GAS LISTING /tmp/ccGQJ8tf.s 			page 39


     /tmp/ccGQJ8tf.s:585    .text:0000000000000388 .L0 
     /tmp/ccGQJ8tf.s:586    .text:0000000000000388 .L0 
     /tmp/ccGQJ8tf.s:588    .text:000000000000038c .L0 
     /tmp/ccGQJ8tf.s:592    .text:0000000000000390 .L0 
     /tmp/ccGQJ8tf.s:593    .text:0000000000000390 .L0 
     /tmp/ccGQJ8tf.s:597    .text:0000000000000394 .L0 
     /tmp/ccGQJ8tf.s:598    .text:0000000000000394 .L0 
     /tmp/ccGQJ8tf.s:601    .text:000000000000039c .L0 
     /tmp/ccGQJ8tf.s:602    .text:000000000000039c .L0 
     /tmp/ccGQJ8tf.s:603    .text:000000000000039c .L0 
     /tmp/ccGQJ8tf.s:605    .text:00000000000003a0 .L0 
     /tmp/ccGQJ8tf.s:609    .text:00000000000003a4 .L0 
     /tmp/ccGQJ8tf.s:611    .text:00000000000003a4 .L0 
     /tmp/ccGQJ8tf.s:612    .text:00000000000003a4 .L0 
     /tmp/ccGQJ8tf.s:614    .text:00000000000003a8 .L0 
     /tmp/ccGQJ8tf.s:619    .text:00000000000003b0 .L0 
     /tmp/ccGQJ8tf.s:625    .text:00000000000003c0 .L0 
     /tmp/ccGQJ8tf.s:631    .text:00000000000003c0 _ZN15MemoryAllocator13mergeWithNextEP11FreeSegment
     /tmp/ccGQJ8tf.s:634    .text:00000000000003c0 .L0 
     /tmp/ccGQJ8tf.s:636    .text:00000000000003c0 .L0 
     /tmp/ccGQJ8tf.s:638    .text:00000000000003c0 .L0 
     /tmp/ccGQJ8tf.s:639    .text:00000000000003c0 .L0 
     /tmp/ccGQJ8tf.s:641    .text:00000000000003c4 .L0 
     /tmp/ccGQJ8tf.s:643    .text:00000000000003c8 .L0 
     /tmp/ccGQJ8tf.s:645    .text:00000000000003cc .L0 
     /tmp/ccGQJ8tf.s:647    .text:00000000000003d0 .L0 
     /tmp/ccGQJ8tf.s:649    .text:00000000000003d4 .L0 
     /tmp/ccGQJ8tf.s:652    .text:00000000000003d8 .L0 
     /tmp/ccGQJ8tf.s:658    .text:00000000000003e0 .L0 
     /tmp/ccGQJ8tf.s:659    .text:00000000000003e4 .L0 
     /tmp/ccGQJ8tf.s:663    .text:00000000000003f0 .L0 
     /tmp/ccGQJ8tf.s:664    .text:00000000000003f0 .L0 
     /tmp/ccGQJ8tf.s:665    .text:00000000000003f0 .L0 
     /tmp/ccGQJ8tf.s:667    .text:00000000000003f4 .L0 
     /tmp/ccGQJ8tf.s:672    .text:00000000000003f8 .L0 
     /tmp/ccGQJ8tf.s:673    .text:00000000000003f8 .L0 
     /tmp/ccGQJ8tf.s:675    .text:00000000000003fc .L0 
     /tmp/ccGQJ8tf.s:679    .text:0000000000000404 .L0 
     /tmp/ccGQJ8tf.s:680    .text:0000000000000404 .L0 
     /tmp/ccGQJ8tf.s:681    .text:0000000000000404 .L0 
     /tmp/ccGQJ8tf.s:683    .text:0000000000000408 .L0 
     /tmp/ccGQJ8tf.s:685    .text:000000000000040c .L0 
     /tmp/ccGQJ8tf.s:686    .text:000000000000040c .L0 
     /tmp/ccGQJ8tf.s:695    .text:000000000000041c .L0 
     /tmp/ccGQJ8tf.s:696    .text:000000000000041c .L0 
     /tmp/ccGQJ8tf.s:698    .text:0000000000000424 .L0 
     /tmp/ccGQJ8tf.s:700    .text:0000000000000428 .L0 
     /tmp/ccGQJ8tf.s:701    .text:0000000000000428 .L0 
     /tmp/ccGQJ8tf.s:703    .text:000000000000042c .L0 
     /tmp/ccGQJ8tf.s:706    .text:0000000000000430 .L0 
     /tmp/ccGQJ8tf.s:708    .text:0000000000000434 .L0 
     /tmp/ccGQJ8tf.s:714    .text:0000000000000434 _ZN15MemoryAllocator8mem_freeEPv
     /tmp/ccGQJ8tf.s:717    .text:0000000000000434 .L0 
     /tmp/ccGQJ8tf.s:719    .text:0000000000000434 .L0 
     /tmp/ccGQJ8tf.s:720    .text:0000000000000438 .L0 
     /tmp/ccGQJ8tf.s:727    .text:0000000000000450 .L0 
     /tmp/ccGQJ8tf.s:728    .text:0000000000000450 .L0 
GAS LISTING /tmp/ccGQJ8tf.s 			page 40


     /tmp/ccGQJ8tf.s:729    .text:0000000000000450 .L0 
     /tmp/ccGQJ8tf.s:730    .text:0000000000000450 .L0 
     /tmp/ccGQJ8tf.s:731    .text:0000000000000450 .L0 
     /tmp/ccGQJ8tf.s:732    .text:0000000000000450 .L0 
     /tmp/ccGQJ8tf.s:734    .text:0000000000000454 .L0 
     /tmp/ccGQJ8tf.s:738    .text:000000000000045c .L0 
     /tmp/ccGQJ8tf.s:739    .text:000000000000045c .L0 
     /tmp/ccGQJ8tf.s:742    .text:0000000000000464 .L0 
     /tmp/ccGQJ8tf.s:746    .text:000000000000046c .L0 
     /tmp/ccGQJ8tf.s:747    .text:000000000000046c .L0 
     /tmp/ccGQJ8tf.s:749    .text:0000000000000470 .L0 
     /tmp/ccGQJ8tf.s:752    .text:0000000000000474 .L0 
     /tmp/ccGQJ8tf.s:758    .text:000000000000047c .L0 
     /tmp/ccGQJ8tf.s:759    .text:000000000000047c .L0 
     /tmp/ccGQJ8tf.s:764    .text:000000000000048c .L0 
     /tmp/ccGQJ8tf.s:768    .text:000000000000049c .L0 
     /tmp/ccGQJ8tf.s:774    .text:00000000000004b0 .L0 
     /tmp/ccGQJ8tf.s:778    .text:00000000000004c0 .L0 
     /tmp/ccGQJ8tf.s:785    .text:00000000000004d0 .L0 
     /tmp/ccGQJ8tf.s:786    .text:00000000000004d0 .L0 
     /tmp/ccGQJ8tf.s:787    .text:00000000000004d0 .L0 
src/kernel/mmanagement/../../../h/../h/riscv.hpp:146    .text:00000000000004d0 .L0 
     /tmp/ccGQJ8tf.s:795    .text:00000000000004d8 .L0 
     /tmp/ccGQJ8tf.s:796    .text:00000000000004d8 .L0 
     /tmp/ccGQJ8tf.s:800    .text:00000000000004dc .L0 
     /tmp/ccGQJ8tf.s:805    .text:00000000000004ec .L0 
     /tmp/ccGQJ8tf.s:809    .text:00000000000004fc .L0 
     /tmp/ccGQJ8tf.s:810    .text:00000000000004fc .L0 
     /tmp/ccGQJ8tf.s:816    .text:0000000000000504 .L0 
     /tmp/ccGQJ8tf.s:817    .text:0000000000000504 .L0 
     /tmp/ccGQJ8tf.s:820    .text:0000000000000508 .L0 
     /tmp/ccGQJ8tf.s:828    .text:0000000000000510 .L0 
     /tmp/ccGQJ8tf.s:830    .text:0000000000000514 .L0 
     /tmp/ccGQJ8tf.s:834    .text:0000000000000518 .L0 
     /tmp/ccGQJ8tf.s:836    .text:000000000000051c .L0 
     /tmp/ccGQJ8tf.s:840    .text:0000000000000520 .L0 
     /tmp/ccGQJ8tf.s:842    .text:0000000000000524 .L0 
     /tmp/ccGQJ8tf.s:844    .text:0000000000000528 .L0 
     /tmp/ccGQJ8tf.s:846    .text:000000000000052c .L0 
     /tmp/ccGQJ8tf.s:850    .text:0000000000000534 .L0 
     /tmp/ccGQJ8tf.s:851    .text:0000000000000534 .L0 
     /tmp/ccGQJ8tf.s:853    .text:0000000000000538 .L0 
     /tmp/ccGQJ8tf.s:855    .text:000000000000053c .L0 
     /tmp/ccGQJ8tf.s:856    .text:000000000000053c .L0 
     /tmp/ccGQJ8tf.s:863    .text:000000000000054c .L0 
     /tmp/ccGQJ8tf.s:865    .text:0000000000000550 .L0 
     /tmp/ccGQJ8tf.s:866    .text:0000000000000550 .L0 
     /tmp/ccGQJ8tf.s:868    .text:0000000000000554 .L0 
     /tmp/ccGQJ8tf.s:869    .text:0000000000000554 .L0 
     /tmp/ccGQJ8tf.s:876    .text:0000000000000564 .L0 
     /tmp/ccGQJ8tf.s:880    .text:0000000000000568 .L0 
     /tmp/ccGQJ8tf.s:881    .text:000000000000056c .L0 
     /tmp/ccGQJ8tf.s:882    .text:000000000000056c .L0 
     /tmp/ccGQJ8tf.s:884    .text:0000000000000570 .L0 
     /tmp/ccGQJ8tf.s:885    .text:0000000000000570 .L0 
     /tmp/ccGQJ8tf.s:887    .text:0000000000000574 .L0 
     /tmp/ccGQJ8tf.s:889    .text:0000000000000578 .L0 
GAS LISTING /tmp/ccGQJ8tf.s 			page 41


     /tmp/ccGQJ8tf.s:892    .text:000000000000057c .L0 
     /tmp/ccGQJ8tf.s:894    .text:0000000000000580 .L0 
     /tmp/ccGQJ8tf.s:897    .text:0000000000000584 .L0 
     /tmp/ccGQJ8tf.s:901    .text:0000000000000588 .L0 
     /tmp/ccGQJ8tf.s:905    .text:0000000000000588 .L0 
     /tmp/ccGQJ8tf.s:906    .text:0000000000000588 .L0 
     /tmp/ccGQJ8tf.s:910    .text:000000000000058c .L0 
     /tmp/ccGQJ8tf.s:912    .text:0000000000000594 .L0 
     /tmp/ccGQJ8tf.s:918    .text:0000000000000594 _ZN15MemoryAllocator18getFreeSegmentMetaEPv
     /tmp/ccGQJ8tf.s:921    .text:0000000000000594 .L0 
     /tmp/ccGQJ8tf.s:923    .text:0000000000000594 .L0 
     /tmp/ccGQJ8tf.s:924    .text:0000000000000598 .L0 
     /tmp/ccGQJ8tf.s:926    .text:000000000000059c .L0 
     /tmp/ccGQJ8tf.s:928    .text:00000000000005a0 .L0 
     /tmp/ccGQJ8tf.s:932    .text:00000000000005a0 .L0 
     /tmp/ccGQJ8tf.s:933    .text:00000000000005a0 .L0 
     /tmp/ccGQJ8tf.s:934    .text:00000000000005a0 .L0 
     /tmp/ccGQJ8tf.s:939    .text:00000000000005ac .L0 
     /tmp/ccGQJ8tf.s:941    .text:00000000000005b0 .L0 
     /tmp/ccGQJ8tf.s:944    .text:00000000000005b8 .L0 
     /tmp/ccGQJ8tf.s:948    .text:00000000000005c0 .L0 
     /tmp/ccGQJ8tf.s:950    .text:00000000000005c4 .L0 
     /tmp/ccGQJ8tf.s:954    .text:00000000000005d0 .L0 
     /tmp/ccGQJ8tf.s:957    .text:00000000000005d4 .L0 
     /tmp/ccGQJ8tf.s:958    .text:00000000000005d4 .L0 
     /tmp/ccGQJ8tf.s:959    .text:00000000000005d4 .L0 
     /tmp/ccGQJ8tf.s:965    .text:00000000000005dc .L0 
     /tmp/ccGQJ8tf.s:966    .text:00000000000005dc .L0 
     /tmp/ccGQJ8tf.s:970    .text:00000000000005e0 .L0 
     /tmp/ccGQJ8tf.s:971    .text:00000000000005e0 .L0 
     /tmp/ccGQJ8tf.s:973    .text:00000000000005e4 .L0 
     /tmp/ccGQJ8tf.s:974    .text:00000000000005e4 .L0 
     /tmp/ccGQJ8tf.s:976    .text:00000000000005e8 .L0 
     /tmp/ccGQJ8tf.s:978    .text:00000000000005ec .L0 
     /tmp/ccGQJ8tf.s:980    .text:00000000000005f0 .L0 
     /tmp/ccGQJ8tf.s:982    .text:00000000000005f4 .L0 
     /tmp/ccGQJ8tf.s:986    .text:00000000000005f8 .L0 
     /tmp/ccGQJ8tf.s:987    .text:00000000000005fc .L0 
     /tmp/ccGQJ8tf.s:988    .text:00000000000005fc .L0 
     /tmp/ccGQJ8tf.s:989    .text:00000000000005fc .L0 
     /tmp/ccGQJ8tf.s:991    .text:0000000000000600 .L0 
     /tmp/ccGQJ8tf.s:995    .text:0000000000000604 .L0 
     /tmp/ccGQJ8tf.s:997    .text:0000000000000604 .L0 
     /tmp/ccGQJ8tf.s:1005   .text:0000000000000614 .L0 
     /tmp/ccGQJ8tf.s:1011   .text:0000000000000614 _ZN15MemoryAllocator10print_listEv
     /tmp/ccGQJ8tf.s:1014   .text:0000000000000614 .L0 
     /tmp/ccGQJ8tf.s:1016   .text:0000000000000614 .L0 
     /tmp/ccGQJ8tf.s:1017   .text:0000000000000618 .L0 
     /tmp/ccGQJ8tf.s:1021   .text:0000000000000624 .L0 
     /tmp/ccGQJ8tf.s:1022   .text:0000000000000624 .L0 
     /tmp/ccGQJ8tf.s:1023   .text:0000000000000624 .L0 
     /tmp/ccGQJ8tf.s:1025   .text:0000000000000628 .L0 
     /tmp/ccGQJ8tf.s:1028   .text:000000000000062c .L0 
     /tmp/ccGQJ8tf.s:1029   .text:000000000000062c .L0 
     /tmp/ccGQJ8tf.s:1034   .text:000000000000063c .L0 
     /tmp/ccGQJ8tf.s:1035   .text:000000000000063c .L0 
     /tmp/ccGQJ8tf.s:1037   .text:0000000000000640 .L0 
GAS LISTING /tmp/ccGQJ8tf.s 			page 42


     /tmp/ccGQJ8tf.s:1041   .text:0000000000000644 .L0 
     /tmp/ccGQJ8tf.s:1042   .text:0000000000000644 .L0 
     /tmp/ccGQJ8tf.s:1046   .text:0000000000000648 .L0 
     /tmp/ccGQJ8tf.s:1048   .text:000000000000064c .L0 
     /tmp/ccGQJ8tf.s:1049   .text:000000000000064c .L0 
     /tmp/ccGQJ8tf.s:1055   .text:0000000000000660 .L0 
     /tmp/ccGQJ8tf.s:1056   .text:0000000000000660 .L0 
     /tmp/ccGQJ8tf.s:1060   .text:0000000000000670 .L0 
     /tmp/ccGQJ8tf.s:1061   .text:0000000000000670 .L0 
     /tmp/ccGQJ8tf.s:1067   .text:0000000000000684 .L0 
     /tmp/ccGQJ8tf.s:1068   .text:0000000000000684 .L0 
     /tmp/ccGQJ8tf.s:1072   .text:0000000000000694 .L0 
     /tmp/ccGQJ8tf.s:1073   .text:0000000000000694 .L0 
     /tmp/ccGQJ8tf.s:1079   .text:00000000000006a8 .L0 
     /tmp/ccGQJ8tf.s:1080   .text:00000000000006a8 .L0 
     /tmp/ccGQJ8tf.s:1084   .text:00000000000006b8 .L0 
     /tmp/ccGQJ8tf.s:1087   .text:00000000000006bc .L0 
     /tmp/ccGQJ8tf.s:1092   .text:00000000000006c0 .L0 
     /tmp/ccGQJ8tf.s:1093   .text:00000000000006c0 .L0 
     /tmp/ccGQJ8tf.s:1100   .text:00000000000006d4 .L0 
     /tmp/ccGQJ8tf.s:1101   .text:00000000000006d4 .L0 
     /tmp/ccGQJ8tf.s:1105   .text:00000000000006e4 .L0 
     /tmp/ccGQJ8tf.s:1106   .text:00000000000006e8 .L0 
     /tmp/ccGQJ8tf.s:1108   .text:00000000000006ec .L0 
     /tmp/ccGQJ8tf.s:1109   .text:00000000000006ec .L0 
     /tmp/ccGQJ8tf.s:1111   .text:00000000000006f0 .L0 
     /tmp/ccGQJ8tf.s:1114   .text:00000000000006f4 .L0 
     /tmp/ccGQJ8tf.s:1116   .text:00000000000006f8 .L0 
     /tmp/ccGQJ8tf.s:1122   .text:00000000000006f8 _ZN15MemoryAllocator14print_all_listEv
     /tmp/ccGQJ8tf.s:1125   .text:00000000000006f8 .L0 
     /tmp/ccGQJ8tf.s:1127   .text:00000000000006f8 .L0 
     /tmp/ccGQJ8tf.s:1128   .text:00000000000006fc .L0 
     /tmp/ccGQJ8tf.s:1132   .text:0000000000000708 .L0 
     /tmp/ccGQJ8tf.s:1133   .text:0000000000000708 .L0 
     /tmp/ccGQJ8tf.s:1134   .text:0000000000000708 .L0 
     /tmp/ccGQJ8tf.s:1136   .text:000000000000070c .L0 
     /tmp/ccGQJ8tf.s:1139   .text:0000000000000710 .L0 
     /tmp/ccGQJ8tf.s:1140   .text:0000000000000710 .L0 
     /tmp/ccGQJ8tf.s:1145   .text:0000000000000720 .L0 
     /tmp/ccGQJ8tf.s:1146   .text:0000000000000720 .L0 
     /tmp/ccGQJ8tf.s:1148   .text:0000000000000724 .L0 
     /tmp/ccGQJ8tf.s:1152   .text:0000000000000728 .L0 
     /tmp/ccGQJ8tf.s:1153   .text:0000000000000728 .L0 
     /tmp/ccGQJ8tf.s:1157   .text:000000000000072c .L0 
     /tmp/ccGQJ8tf.s:1159   .text:0000000000000730 .L0 
     /tmp/ccGQJ8tf.s:1160   .text:0000000000000730 .L0 
     /tmp/ccGQJ8tf.s:1166   .text:0000000000000744 .L0 
     /tmp/ccGQJ8tf.s:1167   .text:0000000000000744 .L0 
     /tmp/ccGQJ8tf.s:1171   .text:0000000000000754 .L0 
     /tmp/ccGQJ8tf.s:1172   .text:0000000000000754 .L0 
     /tmp/ccGQJ8tf.s:1178   .text:0000000000000768 .L0 
     /tmp/ccGQJ8tf.s:1179   .text:0000000000000768 .L0 
     /tmp/ccGQJ8tf.s:1183   .text:0000000000000778 .L0 
     /tmp/ccGQJ8tf.s:1184   .text:0000000000000778 .L0 
     /tmp/ccGQJ8tf.s:1190   .text:000000000000078c .L0 
     /tmp/ccGQJ8tf.s:1191   .text:000000000000078c .L0 
     /tmp/ccGQJ8tf.s:1195   .text:000000000000079c .L0 
GAS LISTING /tmp/ccGQJ8tf.s 			page 43


     /tmp/ccGQJ8tf.s:1196   .text:000000000000079c .L0 
     /tmp/ccGQJ8tf.s:1200   .text:00000000000007ac .L0 
     /tmp/ccGQJ8tf.s:1203   .text:00000000000007b0 .L0 
     /tmp/ccGQJ8tf.s:1208   .text:00000000000007b4 .L0 
     /tmp/ccGQJ8tf.s:1209   .text:00000000000007b4 .L0 
     /tmp/ccGQJ8tf.s:1216   .text:00000000000007c8 .L0 
     /tmp/ccGQJ8tf.s:1217   .text:00000000000007c8 .L0 
     /tmp/ccGQJ8tf.s:1221   .text:00000000000007d8 .L0 
     /tmp/ccGQJ8tf.s:1222   .text:00000000000007dc .L0 
     /tmp/ccGQJ8tf.s:1224   .text:00000000000007e0 .L0 
     /tmp/ccGQJ8tf.s:1225   .text:00000000000007e0 .L0 
     /tmp/ccGQJ8tf.s:1227   .text:00000000000007e4 .L0 
     /tmp/ccGQJ8tf.s:1230   .text:00000000000007e8 .L0 
     /tmp/ccGQJ8tf.s:1232   .text:00000000000007ec .L0 
     /tmp/ccGQJ8tf.s:1282   .text:00000000000007ec .L0 
     /tmp/ccGQJ8tf.s:22     .text:0000000000000000 .L0 
     /tmp/ccGQJ8tf.s:29     .text:0000000000000010 .L0 
     /tmp/ccGQJ8tf.s:59     .text:000000000000004c .L0 
     /tmp/ccGQJ8tf.s:1238   .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccGQJ8tf.s:71     .text:0000000000000074 .L0 
     /tmp/ccGQJ8tf.s:77     .text:0000000000000084 .L0 
     /tmp/ccGQJ8tf.s:96     .text:00000000000000ac .L0 
     /tmp/ccGQJ8tf.s:107    .text:00000000000000c0 .L0 
     /tmp/ccGQJ8tf.s:1244   .rodata.str1.8:0000000000000040 .LC2
     /tmp/ccGQJ8tf.s:121    .text:00000000000000e0 .L0 
     /tmp/ccGQJ8tf.s:1247   .rodata.str1.8:0000000000000068 .LC3
     /tmp/ccGQJ8tf.s:131    .text:0000000000000104 .L0 
     /tmp/ccGQJ8tf.s:144    .text:0000000000000124 .L0 
     /tmp/ccGQJ8tf.s:158    .text:0000000000000140 .L0 
     /tmp/ccGQJ8tf.s:1241   .rodata.str1.8:0000000000000018 .LC1
     /tmp/ccGQJ8tf.s:180    .text:0000000000000164 .L0 
     /tmp/ccGQJ8tf.s:417    .text:0000000000000298 .L0 
     /tmp/ccGQJ8tf.s:422    .text:00000000000002a8 .L0 
     /tmp/ccGQJ8tf.s:530    .text:000000000000032c .L0 
     /tmp/ccGQJ8tf.s:546    .text:0000000000000350 .L0 
     /tmp/ccGQJ8tf.s:1250   .rodata.str1.8:0000000000000070 .LC4
     /tmp/ccGQJ8tf.s:759    .text:000000000000047c .L0 
     /tmp/ccGQJ8tf.s:1252   .rodata.str1.8:0000000000000088 .LC5
     /tmp/ccGQJ8tf.s:764    .text:000000000000048c .L0 
     /tmp/ccGQJ8tf.s:774    .text:00000000000004b0 .L0 
     /tmp/ccGQJ8tf.s:1255   .rodata.str1.8:0000000000000090 .LC6
     /tmp/ccGQJ8tf.s:778    .text:00000000000004c0 .L0 
     /tmp/ccGQJ8tf.s:805    .text:00000000000004ec .L0 
     /tmp/ccGQJ8tf.s:934    .text:00000000000005a0 .L0 
     /tmp/ccGQJ8tf.s:950    .text:00000000000005c4 .L0 
     /tmp/ccGQJ8tf.s:1258   .rodata.str1.8:00000000000000a8 .LC7
     /tmp/ccGQJ8tf.s:1029   .text:000000000000062c .L0 
     /tmp/ccGQJ8tf.s:1056   .text:0000000000000660 .L0 
     /tmp/ccGQJ8tf.s:1068   .text:0000000000000684 .L0 
     /tmp/ccGQJ8tf.s:1080   .text:00000000000006a8 .L0 
     /tmp/ccGQJ8tf.s:1260   .rodata.str1.8:00000000000000c8 .LC8
     /tmp/ccGQJ8tf.s:1093   .text:00000000000006c0 .L0 
     /tmp/ccGQJ8tf.s:1263   .rodata.str1.8:00000000000000e0 .LC9
     /tmp/ccGQJ8tf.s:1101   .text:00000000000006d4 .L0 
     /tmp/ccGQJ8tf.s:1265   .rodata.str1.8:0000000000000100 .LC10
     /tmp/ccGQJ8tf.s:1140   .text:0000000000000710 .L0 
     /tmp/ccGQJ8tf.s:1167   .text:0000000000000744 .L0 
GAS LISTING /tmp/ccGQJ8tf.s 			page 44


     /tmp/ccGQJ8tf.s:1179   .text:0000000000000768 .L0 
     /tmp/ccGQJ8tf.s:1191   .text:000000000000078c .L0 
     /tmp/ccGQJ8tf.s:1196   .text:000000000000079c .L0 
     /tmp/ccGQJ8tf.s:1209   .text:00000000000007b4 .L0 
     /tmp/ccGQJ8tf.s:1217   .text:00000000000007c8 .L0 
     /tmp/ccGQJ8tf.s:33     .text:0000000000000020 .L12
     /tmp/ccGQJ8tf.s:174    .text:0000000000000164 .L13
     /tmp/ccGQJ8tf.s:184    .text:0000000000000174 .L4
     /tmp/ccGQJ8tf.s:283    .text:00000000000001dc .L17
     /tmp/ccGQJ8tf.s:306    .text:0000000000000200 .L15
     /tmp/ccGQJ8tf.s:275    .text:00000000000001d4 .L16
     /tmp/ccGQJ8tf.s:268    .text:00000000000001cc .L23
     /tmp/ccGQJ8tf.s:339    .text:000000000000022c .L14
     /tmp/ccGQJ8tf.s:362    .text:0000000000000250 .L26
     /tmp/ccGQJ8tf.s:393    .text:0000000000000284 .L27
     /tmp/ccGQJ8tf.s:320    .text:0000000000000214 .L20
     /tmp/ccGQJ8tf.s:326    .text:000000000000021c .L22
     /tmp/ccGQJ8tf.s:482    .text:0000000000000300 .L34
     /tmp/ccGQJ8tf.s:496    .text:0000000000000310 .L35
     /tmp/ccGQJ8tf.s:454    .text:00000000000002d8 .L30
     /tmp/ccGQJ8tf.s:435    .text:00000000000002c0 .L31
     /tmp/ccGQJ8tf.s:503    .text:0000000000000318 .L36
     /tmp/ccGQJ8tf.s:474    .text:00000000000002f4 .L32
     /tmp/ccGQJ8tf.s:486    .text:0000000000000304 .L29
     /tmp/ccGQJ8tf.s:464    .text:00000000000002e8 .L33
     /tmp/ccGQJ8tf.s:617    .text:00000000000003b0 .L44
     /tmp/ccGQJ8tf.s:622    .text:00000000000003b8 .L45
     /tmp/ccGQJ8tf.s:579    .text:0000000000000380 .L40
     /tmp/ccGQJ8tf.s:560    .text:0000000000000368 .L41
     /tmp/ccGQJ8tf.s:596    .text:0000000000000394 .L38
     /tmp/ccGQJ8tf.s:608    .text:00000000000003a4 .L42
     /tmp/ccGQJ8tf.s:590    .text:0000000000000390 .L43
     /tmp/ccGQJ8tf.s:656    .text:00000000000003e0 .L53
     /tmp/ccGQJ8tf.s:754    .text:000000000000047c .L65
     /tmp/ccGQJ8tf.s:813    .text:0000000000000504 .L66
     /tmp/ccGQJ8tf.s:838    .text:0000000000000520 .L57
     /tmp/ccGQJ8tf.s:878    .text:0000000000000568 .L56
     /tmp/ccGQJ8tf.s:848    .text:0000000000000534 .L58
     /tmp/ccGQJ8tf.s:825    .text:0000000000000510 .L59
     /tmp/ccGQJ8tf.s:831    .text:0000000000000518 .L60
     /tmp/ccGQJ8tf.s:861    .text:000000000000054c .L61
     /tmp/ccGQJ8tf.s:900    .text:0000000000000588 .L62
     /tmp/ccGQJ8tf.s:994    .text:0000000000000604 .L71
     /tmp/ccGQJ8tf.s:1001   .text:000000000000060c .L72
     /tmp/ccGQJ8tf.s:968    .text:00000000000005e0 .L70
     /tmp/ccGQJ8tf.s:984    .text:00000000000005f8 .L67
     /tmp/ccGQJ8tf.s:963    .text:00000000000005dc .L69
     /tmp/ccGQJ8tf.s:1089   .text:00000000000006c0 .L79
     /tmp/ccGQJ8tf.s:1098   .text:00000000000006d4 .L76
     /tmp/ccGQJ8tf.s:1044   .text:0000000000000648 .L77
     /tmp/ccGQJ8tf.s:1038   .text:0000000000000644 .L75
     /tmp/ccGQJ8tf.s:1205   .text:00000000000007b4 .L85
     /tmp/ccGQJ8tf.s:1214   .text:00000000000007c8 .L82
     /tmp/ccGQJ8tf.s:1155   .text:000000000000072c .L83
     /tmp/ccGQJ8tf.s:1149   .text:0000000000000728 .L81
     /tmp/ccGQJ8tf.s:50     .text:0000000000000038 .LEHB0
     /tmp/ccGQJ8tf.s:13     .text:0000000000000000 .LFB113
GAS LISTING /tmp/ccGQJ8tf.s 			page 45


     /tmp/ccGQJ8tf.s:65     .text:0000000000000060 .LEHE0
     /tmp/ccGQJ8tf.s:72     .text:000000000000007c .LEHB1
     /tmp/ccGQJ8tf.s:75     .text:0000000000000084 .LEHE1
     /tmp/ccGQJ8tf.s:187    .text:0000000000000178 .L6
     /tmp/ccGQJ8tf.s:89     .text:00000000000000a0 .LEHB2
     /tmp/ccGQJ8tf.s:183    .text:0000000000000174 .LEHE2
     /tmp/ccGQJ8tf.s:194    .text:000000000000018c .LEHB3
     /tmp/ccGQJ8tf.s:197    .text:0000000000000194 .LEHE3
     /tmp/ccGQJ8tf.s:4039   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccGQJ8tf.s:6170   .debug_str:00000000000006ab .LASF263
     /tmp/ccGQJ8tf.s:6312   .debug_str:0000000000000c5f .LASF264
     /tmp/ccGQJ8tf.s:6362   .debug_str:0000000000000dab .LASF265
     /tmp/ccGQJ8tf.s:8      .text:0000000000000000 .Ltext0
     /tmp/ccGQJ8tf.s:1274   .text:00000000000007ec .Letext0
     /tmp/ccGQJ8tf.s:5958   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccGQJ8tf.s:6002   .debug_str:000000000000012e .LASF0
     /tmp/ccGQJ8tf.s:6460   .debug_str:0000000000001081 .LASF1
     /tmp/ccGQJ8tf.s:6458   .debug_str:000000000000107b .LASF3
     /tmp/ccGQJ8tf.s:6406   .debug_str:0000000000000eeb .LASF2
     /tmp/ccGQJ8tf.s:6372   .debug_str:0000000000000df3 .LASF4
     /tmp/ccGQJ8tf.s:6386   .debug_str:0000000000000e4f .LASF5
     /tmp/ccGQJ8tf.s:6122   .debug_str:000000000000054b .LASF6
     /tmp/ccGQJ8tf.s:6192   .debug_str:000000000000084c .LASF7
     /tmp/ccGQJ8tf.s:6330   .debug_str:0000000000000ce2 .LASF8
     /tmp/ccGQJ8tf.s:6030   .debug_str:00000000000001f2 .LASF9
     /tmp/ccGQJ8tf.s:6450   .debug_str:0000000000001035 .LASF10
     /tmp/ccGQJ8tf.s:6130   .debug_str:0000000000000564 .LASF11
     /tmp/ccGQJ8tf.s:6074   .debug_str:0000000000000381 .LASF12
     /tmp/ccGQJ8tf.s:6218   .debug_str:0000000000000942 .LASF13
     /tmp/ccGQJ8tf.s:6140   .debug_str:0000000000000596 .LASF14
     /tmp/ccGQJ8tf.s:6358   .debug_str:0000000000000d9a .LASF15
     /tmp/ccGQJ8tf.s:6144   .debug_str:00000000000005b6 .LASF16
     /tmp/ccGQJ8tf.s:6112   .debug_str:00000000000004ea .LASF17
     /tmp/ccGQJ8tf.s:6488   .debug_str:00000000000011a0 .LASF64
     /tmp/ccGQJ8tf.s:6004   .debug_str:000000000000013b .LASF18
     /tmp/ccGQJ8tf.s:6040   .debug_str:0000000000000241 .LASF19
     /tmp/ccGQJ8tf.s:6046   .debug_str:000000000000029c .LASF66
     /tmp/ccGQJ8tf.s:6342   .debug_str:0000000000000d2d .LASF25
     /tmp/ccGQJ8tf.s:6166   .debug_str:0000000000000695 .LASF266
     /tmp/ccGQJ8tf.s:6008   .debug_str:0000000000000151 .LASF20
     /tmp/ccGQJ8tf.s:6420   .debug_str:0000000000000f31 .LASF21
     /tmp/ccGQJ8tf.s:6474   .debug_str:000000000000110b .LASF22
     /tmp/ccGQJ8tf.s:5992   .debug_str:00000000000000df .LASF23
     /tmp/ccGQJ8tf.s:6228   .debug_str:0000000000000984 .LASF24
     /tmp/ccGQJ8tf.s:6104   .debug_str:0000000000000485 .LASF30
     /tmp/ccGQJ8tf.s:6044   .debug_str:0000000000000269 .LASF27
     /tmp/ccGQJ8tf.s:6302   .debug_str:0000000000000c03 .LASF26
     /tmp/ccGQJ8tf.s:6308   .debug_str:0000000000000c45 .LASF28
     /tmp/ccGQJ8tf.s:6296   .debug_str:0000000000000bd9 .LASF38
     /tmp/ccGQJ8tf.s:6154   .debug_str:0000000000000631 .LASF40
     /tmp/ccGQJ8tf.s:6164   .debug_str:000000000000068b .LASF29
     /tmp/ccGQJ8tf.s:6184   .debug_str:000000000000080c .LASF31
     /tmp/ccGQJ8tf.s:6198   .debug_str:0000000000000882 .LASF32
     /tmp/ccGQJ8tf.s:6280   .debug_str:0000000000000b25 .LASF33
     /tmp/ccGQJ8tf.s:6298   .debug_str:0000000000000be9 .LASF34
     /tmp/ccGQJ8tf.s:6236   .debug_str:00000000000009be .LASF35
     /tmp/ccGQJ8tf.s:6410   .debug_str:0000000000000f00 .LASF36
GAS LISTING /tmp/ccGQJ8tf.s 			page 46


     /tmp/ccGQJ8tf.s:6288   .debug_str:0000000000000b8b .LASF37
     /tmp/ccGQJ8tf.s:6448   .debug_str:0000000000001028 .LASF39
     /tmp/ccGQJ8tf.s:6284   .debug_str:0000000000000b4c .LASF41
     /tmp/ccGQJ8tf.s:5984   .debug_str:0000000000000084 .LASF42
     /tmp/ccGQJ8tf.s:6286   .debug_str:0000000000000b6e .LASF43
     /tmp/ccGQJ8tf.s:6364   .debug_str:0000000000000dce .LASF44
     /tmp/ccGQJ8tf.s:6032   .debug_str:0000000000000202 .LASF45
     /tmp/ccGQJ8tf.s:6400   .debug_str:0000000000000ecb .LASF46
     /tmp/ccGQJ8tf.s:6404   .debug_str:0000000000000ee6 .LASF47
     /tmp/ccGQJ8tf.s:6266   .debug_str:0000000000000aac .LASF48
     /tmp/ccGQJ8tf.s:6256   .debug_str:0000000000000a78 .LASF49
     /tmp/ccGQJ8tf.s:6394   .debug_str:0000000000000e86 .LASF50
     /tmp/ccGQJ8tf.s:6344   .debug_str:0000000000000d39 .LASF51
     /tmp/ccGQJ8tf.s:6010   .debug_str:0000000000000156 .LASF52
     /tmp/ccGQJ8tf.s:6324   .debug_str:0000000000000cce .LASF53
     /tmp/ccGQJ8tf.s:6434   .debug_str:0000000000000fba .LASF54
     /tmp/ccGQJ8tf.s:6278   .debug_str:0000000000000aff .LASF55
     /tmp/ccGQJ8tf.s:6270   .debug_str:0000000000000ac1 .LASF56
     /tmp/ccGQJ8tf.s:6354   .debug_str:0000000000000d67 .LASF57
     /tmp/ccGQJ8tf.s:6156   .debug_str:0000000000000647 .LASF58
     /tmp/ccGQJ8tf.s:6042   .debug_str:0000000000000246 .LASF59
     /tmp/ccGQJ8tf.s:6392   .debug_str:0000000000000e78 .LASF60
     /tmp/ccGQJ8tf.s:6150   .debug_str:0000000000000600 .LASF61
     /tmp/ccGQJ8tf.s:6456   .debug_str:000000000000106a .LASF62
     /tmp/ccGQJ8tf.s:6108   .debug_str:00000000000004ad .LASF63
     /tmp/ccGQJ8tf.s:6438   .debug_str:0000000000000fc9 .LASF65
     /tmp/ccGQJ8tf.s:6146   .debug_str:00000000000005cc .LASF67
     /tmp/ccGQJ8tf.s:6186   .debug_str:0000000000000829 .LASF68
     /tmp/ccGQJ8tf.s:6360   .debug_str:0000000000000da6 .LASF69
     /tmp/ccGQJ8tf.s:6500   .debug_str:0000000000001210 .LASF143
     /tmp/ccGQJ8tf.s:6326   .debug_str:0000000000000cd3 .LASF70
     /tmp/ccGQJ8tf.s:6018   .debug_str:000000000000019e .LASF71
     /tmp/ccGQJ8tf.s:6242   .debug_str:00000000000009ed .LASF72
     /tmp/ccGQJ8tf.s:6374   .debug_str:0000000000000dfa .LASF73
     /tmp/ccGQJ8tf.s:6082   .debug_str:00000000000003bf .LASF74
     /tmp/ccGQJ8tf.s:6246   .debug_str:00000000000009f9 .LASF75
     /tmp/ccGQJ8tf.s:6496   .debug_str:00000000000011f5 .LASF76
     /tmp/ccGQJ8tf.s:6472   .debug_str:00000000000010f8 .LASF77
     /tmp/ccGQJ8tf.s:6318   .debug_str:0000000000000cac .LASF78
     /tmp/ccGQJ8tf.s:6210   .debug_str:00000000000008f6 .LASF79
     /tmp/ccGQJ8tf.s:6124   .debug_str:0000000000000552 .LASF80
     /tmp/ccGQJ8tf.s:6300   .debug_str:0000000000000bf0 .LASF81
     /tmp/ccGQJ8tf.s:6094   .debug_str:0000000000000420 .LASF82
     /tmp/ccGQJ8tf.s:6254   .debug_str:0000000000000a6e .LASF112
     /tmp/ccGQJ8tf.s:6072   .debug_str:0000000000000371 .LASF114
     /tmp/ccGQJ8tf.s:5966   .debug_str:0000000000000026 .LASF83
     /tmp/ccGQJ8tf.s:6490   .debug_str:00000000000011a7 .LASF84
     /tmp/ccGQJ8tf.s:6328   .debug_str:0000000000000cda .LASF85
     /tmp/ccGQJ8tf.s:6306   .debug_str:0000000000000c31 .LASF86
     /tmp/ccGQJ8tf.s:5972   .debug_str:0000000000000048 .LASF87
     /tmp/ccGQJ8tf.s:6494   .debug_str:00000000000011e5 .LASF88
     /tmp/ccGQJ8tf.s:6162   .debug_str:0000000000000686 .LASF89
     /tmp/ccGQJ8tf.s:6078   .debug_str:000000000000039c .LASF90
     /tmp/ccGQJ8tf.s:6034   .debug_str:0000000000000208 .LASF91
     /tmp/ccGQJ8tf.s:6096   .debug_str:000000000000042d .LASF92
     /tmp/ccGQJ8tf.s:6168   .debug_str:00000000000006a2 .LASF93
     /tmp/ccGQJ8tf.s:6214   .debug_str:000000000000091d .LASF94
GAS LISTING /tmp/ccGQJ8tf.s 			page 47


     /tmp/ccGQJ8tf.s:6352   .debug_str:0000000000000d62 .LASF95
     /tmp/ccGQJ8tf.s:6076   .debug_str:0000000000000390 .LASF96
     /tmp/ccGQJ8tf.s:6258   .debug_str:0000000000000a82 .LASF97
     /tmp/ccGQJ8tf.s:6436   .debug_str:0000000000000fc4 .LASF98
     /tmp/ccGQJ8tf.s:6216   .debug_str:0000000000000932 .LASF99
     /tmp/ccGQJ8tf.s:6380   .debug_str:0000000000000e2d .LASF100
     /tmp/ccGQJ8tf.s:6282   .debug_str:0000000000000b42 .LASF101
     /tmp/ccGQJ8tf.s:6232   .debug_str:0000000000000999 .LASF102
     /tmp/ccGQJ8tf.s:5960   .debug_str:0000000000000000 .LASF103
     /tmp/ccGQJ8tf.s:5976   .debug_str:000000000000005e .LASF130
     /tmp/ccGQJ8tf.s:6052   .debug_str:00000000000002d0 .LASF104
     /tmp/ccGQJ8tf.s:6294   .debug_str:0000000000000bc7 .LASF105
     /tmp/ccGQJ8tf.s:6492   .debug_str:00000000000011ba .LASF106
     /tmp/ccGQJ8tf.s:6430   .debug_str:0000000000000f81 .LASF107
     /tmp/ccGQJ8tf.s:6174   .debug_str:0000000000000782 .LASF108
     /tmp/ccGQJ8tf.s:6220   .debug_str:0000000000000952 .LASF109
     /tmp/ccGQJ8tf.s:6252   .debug_str:0000000000000a3b .LASF110
     /tmp/ccGQJ8tf.s:6486   .debug_str:0000000000001184 .LASF111
     /tmp/ccGQJ8tf.s:6268   .debug_str:0000000000000ab6 .LASF113
     /tmp/ccGQJ8tf.s:6378   .debug_str:0000000000000e11 .LASF115
     /tmp/ccGQJ8tf.s:6194   .debug_str:000000000000085f .LASF116
     /tmp/ccGQJ8tf.s:6062   .debug_str:0000000000000329 .LASF117
     /tmp/ccGQJ8tf.s:6012   .debug_str:000000000000015b .LASF118
     /tmp/ccGQJ8tf.s:6136   .debug_str:000000000000057d .LASF119
     /tmp/ccGQJ8tf.s:6206   .debug_str:00000000000008c6 .LASF120
     /tmp/ccGQJ8tf.s:6024   .debug_str:00000000000001c9 .LASF133
     /tmp/ccGQJ8tf.s:6478   .debug_str:0000000000001129 .LASF135
     /tmp/ccGQJ8tf.s:5970   .debug_str:000000000000003e .LASF121
     /tmp/ccGQJ8tf.s:6304   .debug_str:0000000000000c10 .LASF122
     /tmp/ccGQJ8tf.s:5978   .debug_str:0000000000000068 .LASF123
     /tmp/ccGQJ8tf.s:6036   .debug_str:0000000000000213 .LASF124
     /tmp/ccGQJ8tf.s:6350   .debug_str:0000000000000d57 .LASF125
     /tmp/ccGQJ8tf.s:6114   .debug_str:0000000000000500 .LASF126
     /tmp/ccGQJ8tf.s:6240   .debug_str:00000000000009de .LASF127
     /tmp/ccGQJ8tf.s:6396   .debug_str:0000000000000e90 .LASF128
     /tmp/ccGQJ8tf.s:6028   .debug_str:00000000000001ea .LASF129
     /tmp/ccGQJ8tf.s:5980   .debug_str:0000000000000071 .LASF131
     /tmp/ccGQJ8tf.s:5974   .debug_str:000000000000004d .LASF132
     /tmp/ccGQJ8tf.s:6100   .debug_str:000000000000045c .LASF139
     /tmp/ccGQJ8tf.s:6138   .debug_str:0000000000000588 .LASF134
     /tmp/ccGQJ8tf.s:6160   .debug_str:0000000000000669 .LASF136
     /tmp/ccGQJ8tf.s:6480   .debug_str:000000000000114d .LASF137
     /tmp/ccGQJ8tf.s:6050   .debug_str:00000000000002c7 .LASF138
     /tmp/ccGQJ8tf.s:6048   .debug_str:00000000000002b0 .LASF140
     /tmp/ccGQJ8tf.s:6426   .debug_str:0000000000000f65 .LASF141
     /tmp/ccGQJ8tf.s:6422   .debug_str:0000000000000f3a .LASF142
     /tmp/ccGQJ8tf.s:6088   .debug_str:00000000000003f7 .LASF144
     /tmp/ccGQJ8tf.s:6224   .debug_str:000000000000096b .LASF145
     /tmp/ccGQJ8tf.s:6274   .debug_str:0000000000000adf .LASF146
     /tmp/ccGQJ8tf.s:6230   .debug_str:000000000000098e .LASF147
     /tmp/ccGQJ8tf.s:6348   .debug_str:0000000000000d4c .LASF148
     /tmp/ccGQJ8tf.s:5982   .debug_str:0000000000000079 .LASF149
     /tmp/ccGQJ8tf.s:6384   .debug_str:0000000000000e38 .LASF150
     /tmp/ccGQJ8tf.s:5968   .debug_str:000000000000002e .LASF151
     /tmp/ccGQJ8tf.s:5994   .debug_str:00000000000000e7 .LASF152
     /tmp/ccGQJ8tf.s:6056   .debug_str:00000000000002fd .LASF153
     /tmp/ccGQJ8tf.s:6106   .debug_str:000000000000049a .LASF154
GAS LISTING /tmp/ccGQJ8tf.s 			page 48


     /tmp/ccGQJ8tf.s:6098   .debug_str:0000000000000444 .LASF155
     /tmp/ccGQJ8tf.s:6190   .debug_str:0000000000000835 .LASF156
     /tmp/ccGQJ8tf.s:6316   .debug_str:0000000000000c93 .LASF157
     /tmp/ccGQJ8tf.s:6084   .debug_str:00000000000003ca .LASF158
     /tmp/ccGQJ8tf.s:6038   .debug_str:0000000000000234 .LASF159
     /tmp/ccGQJ8tf.s:5986   .debug_str:000000000000008d .LASF160
     /tmp/ccGQJ8tf.s:6152   .debug_str:0000000000000623 .LASF161
     /tmp/ccGQJ8tf.s:6470   .debug_str:00000000000010c7 .LASF162
     /tmp/ccGQJ8tf.s:6182   .debug_str:00000000000007ea .LASF163
     /tmp/ccGQJ8tf.s:6368   .debug_str:0000000000000ddd .LASF164
     /tmp/ccGQJ8tf.s:6454   .debug_str:0000000000001048 .LASF165
     /tmp/ccGQJ8tf.s:6414   .debug_str:0000000000000f19 .LASF166
     /tmp/ccGQJ8tf.s:6432   .debug_str:0000000000000f9d .LASF167
     /tmp/ccGQJ8tf.s:6262   .debug_str:0000000000000a94 .LASF168
     /tmp/ccGQJ8tf.s:6118   .debug_str:0000000000000528 .LASF169
     /tmp/ccGQJ8tf.s:6058   .debug_str:0000000000000315 .LASF170
     /tmp/ccGQJ8tf.s:6066   .debug_str:000000000000034d .LASF171
     /tmp/ccGQJ8tf.s:6026   .debug_str:00000000000001d5 .LASF172
     /tmp/ccGQJ8tf.s:6418   .debug_str:0000000000000f28 .LASF173
     /tmp/ccGQJ8tf.s:6446   .debug_str:0000000000001013 .LASF174
     /tmp/ccGQJ8tf.s:6120   .debug_str:0000000000000544 .LASF175
     /tmp/ccGQJ8tf.s:6020   .debug_str:00000000000001ab .LASF176
     /tmp/ccGQJ8tf.s:6090   .debug_str:0000000000000408 .LASF177
     /tmp/ccGQJ8tf.s:6158   .debug_str:0000000000000656 .LASF178
     /tmp/ccGQJ8tf.s:6014   .debug_str:0000000000000187 .LASF179
     /tmp/ccGQJ8tf.s:6398   .debug_str:0000000000000eb7 .LASF180
     /tmp/ccGQJ8tf.s:6314   .debug_str:0000000000000c8b .LASF181
     /tmp/ccGQJ8tf.s:6054   .debug_str:00000000000002e9 .LASF182
     /tmp/ccGQJ8tf.s:6466   .debug_str:00000000000010ad .LASF183
     /tmp/ccGQJ8tf.s:6356   .debug_str:0000000000000d86 .LASF184
     /tmp/ccGQJ8tf.s:6226   .debug_str:000000000000097c .LASF185
     /tmp/ccGQJ8tf.s:6202   .debug_str:000000000000089c .LASF186
     /tmp/ccGQJ8tf.s:6148   .debug_str:00000000000005f8 .LASF187
     /tmp/ccGQJ8tf.s:5964   .debug_str:0000000000000012 .LASF188
     /tmp/ccGQJ8tf.s:5962   .debug_str:000000000000000b .LASF189
     /tmp/ccGQJ8tf.s:6498   .debug_str:00000000000011fd .LASF190
     /tmp/ccGQJ8tf.s:6462   .debug_str:0000000000001094 .LASF191
     /tmp/ccGQJ8tf.s:6080   .debug_str:00000000000003ac .LASF192
     /tmp/ccGQJ8tf.s:6416   .debug_str:0000000000000f21 .LASF193
     /tmp/ccGQJ8tf.s:6272   .debug_str:0000000000000acc .LASF194
     /tmp/ccGQJ8tf.s:6196   .debug_str:000000000000087b .LASF195
     /tmp/ccGQJ8tf.s:6402   .debug_str:0000000000000ed3 .LASF196
     /tmp/ccGQJ8tf.s:6388   .debug_str:0000000000000e61 .LASF197
     /tmp/ccGQJ8tf.s:6212   .debug_str:000000000000090b .LASF198
     /tmp/ccGQJ8tf.s:6244   .debug_str:00000000000009f3 .LASF199
     /tmp/ccGQJ8tf.s:6468   .debug_str:00000000000010b5 .LASF200
     /tmp/ccGQJ8tf.s:6408   .debug_str:0000000000000ef9 .LASF201
     /tmp/ccGQJ8tf.s:6172   .debug_str:000000000000076f .LASF202
     /tmp/ccGQJ8tf.s:6188   .debug_str:000000000000082e .LASF203
     /tmp/ccGQJ8tf.s:6086   .debug_str:00000000000003e4 .LASF204
     /tmp/ccGQJ8tf.s:6382   .debug_str:0000000000000e32 .LASF205
     /tmp/ccGQJ8tf.s:6110   .debug_str:00000000000004d8 .LASF206
     /tmp/ccGQJ8tf.s:6238   .debug_str:00000000000009d8 .LASF207
     /tmp/ccGQJ8tf.s:6264   .debug_str:0000000000000a9a .LASF208
     /tmp/ccGQJ8tf.s:6340   .debug_str:0000000000000d22 .LASF209
     /tmp/ccGQJ8tf.s:6482   .debug_str:0000000000001165 .LASF210
     /tmp/ccGQJ8tf.s:6022   .debug_str:00000000000001be .LASF211
GAS LISTING /tmp/ccGQJ8tf.s 			page 49


     /tmp/ccGQJ8tf.s:6338   .debug_str:0000000000000d0a .LASF212
     /tmp/ccGQJ8tf.s:6370   .debug_str:0000000000000de9 .LASF213
     /tmp/ccGQJ8tf.s:6204   .debug_str:00000000000008b0 .LASF214
     /tmp/ccGQJ8tf.s:6366   .debug_str:0000000000000dd3 .LASF215
     /tmp/ccGQJ8tf.s:6102   .debug_str:000000000000046f .LASF216
     /tmp/ccGQJ8tf.s:6248   .debug_str:0000000000000a16 .LASF217
     /tmp/ccGQJ8tf.s:6176   .debug_str:00000000000007b7 .LASF218
     /tmp/ccGQJ8tf.s:6126   .debug_str:000000000000055a .LASF219
     /tmp/ccGQJ8tf.s:6390   .debug_str:0000000000000e67 .LASF220
     /tmp/ccGQJ8tf.s:6452   .debug_str:0000000000001043 .LASF221
     /tmp/ccGQJ8tf.s:6006   .debug_str:0000000000000140 .LASF222
     /tmp/ccGQJ8tf.s:6128   .debug_str:000000000000055f .LASF223
     /tmp/ccGQJ8tf.s:6064   .debug_str:000000000000033c .LASF224
     /tmp/ccGQJ8tf.s:6000   .debug_str:0000000000000129 .LASF225
     /tmp/ccGQJ8tf.s:6276   .debug_str:0000000000000aee .LASF226
     /tmp/ccGQJ8tf.s:6132   .debug_str:0000000000000573 .LASF227
     /tmp/ccGQJ8tf.s:6200   .debug_str:000000000000088b .LASF228
     /tmp/ccGQJ8tf.s:6134   .debug_str:0000000000000578 .LASF229
     /tmp/ccGQJ8tf.s:6092   .debug_str:000000000000040f .LASF230
     /tmp/ccGQJ8tf.s:6208   .debug_str:00000000000008e9 .LASF231
     /tmp/ccGQJ8tf.s:6424   .debug_str:0000000000000f4b .LASF232
     /tmp/ccGQJ8tf.s:6060   .debug_str:000000000000031b .LASF233
     /tmp/ccGQJ8tf.s:6234   .debug_str:00000000000009a3 .LASF234
     /tmp/ccGQJ8tf.s:6332   .debug_str:0000000000000cf5 .LASF235
     /tmp/ccGQJ8tf.s:6440   .debug_str:0000000000000fdb .LASF236
     /tmp/ccGQJ8tf.s:6068   .debug_str:0000000000000356 .LASF237
     /tmp/ccGQJ8tf.s:6180   .debug_str:00000000000007d2 .LASF238
     /tmp/ccGQJ8tf.s:6322   .debug_str:0000000000000cc0 .LASF239
     /tmp/ccGQJ8tf.s:5996   .debug_str:00000000000000fe .LASF240
     /tmp/ccGQJ8tf.s:6376   .debug_str:0000000000000dff .LASF241
     /tmp/ccGQJ8tf.s:6222   .debug_str:0000000000000960 .LASF242
     /tmp/ccGQJ8tf.s:6292   .debug_str:0000000000000bb5 .LASF243
     /tmp/ccGQJ8tf.s:6442   .debug_str:0000000000000ff3 .LASF244
     /tmp/ccGQJ8tf.s:5998   .debug_str:0000000000000119 .LASF245
     /tmp/ccGQJ8tf.s:6346   .debug_str:0000000000000d3e .LASF246
     /tmp/ccGQJ8tf.s:6016   .debug_str:000000000000018f .LASF247
     /tmp/ccGQJ8tf.s:6260   .debug_str:0000000000000a87 .LASF248
     /tmp/ccGQJ8tf.s:6142   .debug_str:00000000000005a6 .LASF249
     /tmp/ccGQJ8tf.s:6428   .debug_str:0000000000000f73 .LASF250
     /tmp/ccGQJ8tf.s:6464   .debug_str:000000000000109b .LASF251
     /tmp/ccGQJ8tf.s:6070   .debug_str:0000000000000361 .LASF252
     /tmp/ccGQJ8tf.s:6250   .debug_str:0000000000000a1b .LASF267
     /tmp/ccGQJ8tf.s:1123   .text:00000000000006f8 .LFB121
     /tmp/ccGQJ8tf.s:1233   .text:00000000000007ec .LFE121
     /tmp/ccGQJ8tf.s:6310   .debug_str:0000000000000c5a .LASF254
     /tmp/ccGQJ8tf.s:5300   .debug_loc:0000000000000000 .LLST30
     /tmp/ccGQJ8tf.s:1151   .text:0000000000000728 .LBB38
     /tmp/ccGQJ8tf.s:1206   .text:00000000000007b4 .LBE38
     /tmp/ccGQJ8tf.s:6334   .debug_str:0000000000000d00 .LASF253
     /tmp/ccGQJ8tf.s:5329   .debug_loc:0000000000000075 .LLST31
     /tmp/ccGQJ8tf.s:1164   .text:0000000000000744 .LVL122
     /tmp/ccGQJ8tf.s:1169   .text:0000000000000754 .LVL123
     /tmp/ccGQJ8tf.s:1176   .text:0000000000000768 .LVL124
     /tmp/ccGQJ8tf.s:1181   .text:0000000000000778 .LVL125
     /tmp/ccGQJ8tf.s:1188   .text:000000000000078c .LVL126
     /tmp/ccGQJ8tf.s:1193   .text:000000000000079c .LVL127
     /tmp/ccGQJ8tf.s:1198   .text:00000000000007ac .LVL128
GAS LISTING /tmp/ccGQJ8tf.s 			page 50


     /tmp/ccGQJ8tf.s:1143   .text:0000000000000720 .LVL120
     /tmp/ccGQJ8tf.s:1211   .text:00000000000007c4 .LVL131
     /tmp/ccGQJ8tf.s:1219   .text:00000000000007d8 .LVL133
     /tmp/ccGQJ8tf.s:1012   .text:0000000000000614 .LFB120
     /tmp/ccGQJ8tf.s:1117   .text:00000000000006f8 .LFE120
     /tmp/ccGQJ8tf.s:5340   .debug_loc:00000000000000ab .LLST28
     /tmp/ccGQJ8tf.s:1040   .text:0000000000000644 .LBB37
     /tmp/ccGQJ8tf.s:1090   .text:00000000000006c0 .LBE37
     /tmp/ccGQJ8tf.s:5369   .debug_loc:0000000000000120 .LLST29
     /tmp/ccGQJ8tf.s:1053   .text:0000000000000660 .LVL106
     /tmp/ccGQJ8tf.s:1058   .text:0000000000000670 .LVL107
     /tmp/ccGQJ8tf.s:1065   .text:0000000000000684 .LVL108
     /tmp/ccGQJ8tf.s:1070   .text:0000000000000694 .LVL109
     /tmp/ccGQJ8tf.s:1077   .text:00000000000006a8 .LVL110
     /tmp/ccGQJ8tf.s:1082   .text:00000000000006b8 .LVL111
     /tmp/ccGQJ8tf.s:1032   .text:000000000000063c .LVL104
     /tmp/ccGQJ8tf.s:1095   .text:00000000000006d0 .LVL114
     /tmp/ccGQJ8tf.s:1103   .text:00000000000006e4 .LVL116
     /tmp/ccGQJ8tf.s:919    .text:0000000000000594 .LFB119
     /tmp/ccGQJ8tf.s:1006   .text:0000000000000614 .LFE119
     /tmp/ccGQJ8tf.s:5380   .debug_loc:0000000000000156 .LLST24
     /tmp/ccGQJ8tf.s:5990   .debug_str:00000000000000d4 .LASF255
     /tmp/ccGQJ8tf.s:5416   .debug_loc:00000000000001e1 .LLST25
     /tmp/ccGQJ8tf.s:5427   .debug_loc:0000000000000217 .LLST26
     /tmp/ccGQJ8tf.s:5434   .debug_loc:000000000000023a .LLST27
     /tmp/ccGQJ8tf.s:930    .text:00000000000005a0 .LBB35
     /tmp/ccGQJ8tf.s:937    .text:00000000000005ac .LBE35
     /tmp/ccGQJ8tf.s:715    .text:0000000000000434 .LFB118
     /tmp/ccGQJ8tf.s:913    .text:0000000000000594 .LFE118
     /tmp/ccGQJ8tf.s:5441   .debug_loc:000000000000025d .LLST19
     /tmp/ccGQJ8tf.s:5463   .debug_loc:00000000000002bc .LLST20
     /tmp/ccGQJ8tf.s:6484   .debug_str:000000000000117d .LASF256
     /tmp/ccGQJ8tf.s:5485   .debug_loc:000000000000031b .LLST21
     /tmp/ccGQJ8tf.s:5942   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccGQJ8tf.s:5512   .debug_loc:000000000000039d .LLST22
     /tmp/ccGQJ8tf.s:5531   .debug_loc:00000000000003f9 .LLST23
     /tmp/ccGQJ8tf.s:860    .text:000000000000054c .LVL84
     /tmp/ccGQJ8tf.s:872    .text:0000000000000564 .LVL85
     /tmp/ccGQJ8tf.s:782    .text:00000000000004d0 .LBB30
     /tmp/ccGQJ8tf.s:798    .text:00000000000004dc .LBE30
     /tmp/ccGQJ8tf.s:783    .text:00000000000004d0 .LBB31
     /tmp/ccGQJ8tf.s:797    .text:00000000000004dc .LBE31
     /tmp/ccGQJ8tf.s:740    .text:0000000000000464 .LVL69
     /tmp/ccGQJ8tf.s:762    .text:000000000000048c .LVL71
     /tmp/ccGQJ8tf.s:766    .text:000000000000049c .LVL72
     /tmp/ccGQJ8tf.s:772    .text:00000000000004b0 .LVL73
     /tmp/ccGQJ8tf.s:776    .text:00000000000004c0 .LVL74
     /tmp/ccGQJ8tf.s:780    .text:00000000000004d0 .LVL75
     /tmp/ccGQJ8tf.s:803    .text:00000000000004ec .LVL76
     /tmp/ccGQJ8tf.s:807    .text:00000000000004fc .LVL77
     /tmp/ccGQJ8tf.s:632    .text:00000000000003c0 .LFB117
     /tmp/ccGQJ8tf.s:709    .text:0000000000000434 .LFE117
     /tmp/ccGQJ8tf.s:5547   .debug_loc:0000000000000443 .LLST16
     /tmp/ccGQJ8tf.s:5572   .debug_loc:00000000000004a5 .LLST17
     /tmp/ccGQJ8tf.s:670    .text:00000000000003f8 .LBB24
     /tmp/ccGQJ8tf.s:693    .text:000000000000041c .LBE24
     /tmp/ccGQJ8tf.s:5587   .debug_loc:00000000000004ee .LLST18
GAS LISTING /tmp/ccGQJ8tf.s 			page 51


     /tmp/ccGQJ8tf.s:691    .text:000000000000041c .LVL66
     /tmp/ccGQJ8tf.s:515    .text:0000000000000320 .LFB116
     /tmp/ccGQJ8tf.s:626    .text:00000000000003c0 .LFE116
     /tmp/ccGQJ8tf.s:5594   .debug_loc:0000000000000511 .LLST11
     /tmp/ccGQJ8tf.s:5612   .debug_loc:000000000000055d .LLST12
     /tmp/ccGQJ8tf.s:5623   .debug_loc:0000000000000593 .LLST13
     /tmp/ccGQJ8tf.s:5634   .debug_loc:00000000000005c9 .LLST14
     /tmp/ccGQJ8tf.s:5658   .debug_loc:0000000000000639 .LLST15
     /tmp/ccGQJ8tf.s:526    .text:000000000000032c .LBB21
     /tmp/ccGQJ8tf.s:533    .text:0000000000000338 .LBE21
     /tmp/ccGQJ8tf.s:405    .text:000000000000028c .LFB115
     /tmp/ccGQJ8tf.s:509    .text:0000000000000320 .LFE115
     /tmp/ccGQJ8tf.s:5678   .debug_loc:0000000000000696 .LLST7
     /tmp/ccGQJ8tf.s:5725   .debug_loc:000000000000074a .LLST8
     /tmp/ccGQJ8tf.s:5736   .debug_loc:0000000000000780 .LLST9
     /tmp/ccGQJ8tf.s:5760   .debug_loc:00000000000007f0 .LLST10
     /tmp/ccGQJ8tf.s:231    .text:0000000000000194 .LFB114
     /tmp/ccGQJ8tf.s:399    .text:000000000000028c .LFE114
     /tmp/ccGQJ8tf.s:5780   .debug_loc:000000000000084d .LLST1
     /tmp/ccGQJ8tf.s:5806   .debug_loc:00000000000008bf .LLST2
     /tmp/ccGQJ8tf.s:6336   .debug_str:0000000000000d05 .LASF257
     /tmp/ccGQJ8tf.s:5830   .debug_loc:0000000000000920 .LLST3
     /tmp/ccGQJ8tf.s:6320   .debug_str:0000000000000cb6 .LASF258
     /tmp/ccGQJ8tf.s:5850   .debug_loc:000000000000097d .LLST4
     /tmp/ccGQJ8tf.s:5874   .debug_loc:00000000000009ed .LLST5
     /tmp/ccGQJ8tf.s:5898   .debug_loc:0000000000000a5d .LLST6
     /tmp/ccGQJ8tf.s:369    .text:000000000000025c .LVL31
     /tmp/ccGQJ8tf.s:201    .text:0000000000000194 .LFE113
     /tmp/ccGQJ8tf.s:5922   .debug_loc:0000000000000acd .LLST0
     /tmp/ccGQJ8tf.s:102    .text:00000000000000c0 .LBB16
     /tmp/ccGQJ8tf.s:110    .text:00000000000000cc .LBE16
     /tmp/ccGQJ8tf.s:53     .text:0000000000000040 .LVL0
     /tmp/ccGQJ8tf.s:57     .text:000000000000004c .LVL1
     /tmp/ccGQJ8tf.s:64     .text:0000000000000060 .LVL2
     /tmp/ccGQJ8tf.s:74     .text:0000000000000084 .LVL3
     /tmp/ccGQJ8tf.s:91     .text:00000000000000a8 .LVL4
     /tmp/ccGQJ8tf.s:123    .text:00000000000000f0 .LVL6
     /tmp/ccGQJ8tf.s:129    .text:0000000000000104 .LVL7
     /tmp/ccGQJ8tf.s:133    .text:0000000000000114 .LVL8
     /tmp/ccGQJ8tf.s:182    .text:0000000000000174 .LVL10
     /tmp/ccGQJ8tf.s:192    .text:0000000000000188 .LVL11
     /tmp/ccGQJ8tf.s:196    .text:0000000000000194 .LVL12
     /tmp/ccGQJ8tf.s:6116   .debug_str:0000000000000523 .LASF268
     /tmp/ccGQJ8tf.s:6444   .debug_str:0000000000001003 .LASF259
     /tmp/ccGQJ8tf.s:6178   .debug_str:00000000000007c8 .LASF261
     /tmp/ccGQJ8tf.s:6476   .debug_str:0000000000001115 .LASF260
     /tmp/ccGQJ8tf.s:6290   .debug_str:0000000000000ba8 .LASF262
     /tmp/ccGQJ8tf.s:6412   .debug_str:0000000000000f0a .LASF269
     /tmp/ccGQJ8tf.s:5988   .debug_str:00000000000000bc .LASF270
     /tmp/ccGQJ8tf.s:1126   .text:00000000000006f8 .LVL118
     /tmp/ccGQJ8tf.s:1141   .text:0000000000000718 .LVL119
     /tmp/ccGQJ8tf.s:1154   .text:000000000000072c .LVL121
     /tmp/ccGQJ8tf.s:1204   .text:00000000000007b4 .LVL130
     /tmp/ccGQJ8tf.s:1213   .text:00000000000007c8 .LVL132
     /tmp/ccGQJ8tf.s:1228   .text:00000000000007e4 .LVL134
     /tmp/ccGQJ8tf.s:1015   .text:0000000000000614 .LVL102
     /tmp/ccGQJ8tf.s:1030   .text:0000000000000634 .LVL103
GAS LISTING /tmp/ccGQJ8tf.s 			page 52


     /tmp/ccGQJ8tf.s:1043   .text:0000000000000648 .LVL105
     /tmp/ccGQJ8tf.s:1088   .text:00000000000006c0 .LVL113
     /tmp/ccGQJ8tf.s:1097   .text:00000000000006d4 .LVL115
     /tmp/ccGQJ8tf.s:1112   .text:00000000000006f0 .LVL117
     /tmp/ccGQJ8tf.s:922    .text:0000000000000594 .LVL90
     /tmp/ccGQJ8tf.s:960    .text:00000000000005d8 .LVL94
     /tmp/ccGQJ8tf.s:993    .text:0000000000000604 .LVL98
     /tmp/ccGQJ8tf.s:998    .text:0000000000000608 .LVL99
     /tmp/ccGQJ8tf.s:1000   .text:000000000000060c .LVL100
     /tmp/ccGQJ8tf.s:1003   .text:0000000000000610 .LVL101
     /tmp/ccGQJ8tf.s:946    .text:00000000000005c0 .LVL91
     /tmp/ccGQJ8tf.s:951    .text:00000000000005cc .LVL92
     /tmp/ccGQJ8tf.s:956    .text:00000000000005d4 .LVL93
     /tmp/ccGQJ8tf.s:983    .text:00000000000005f8 .LVL97
     /tmp/ccGQJ8tf.s:718    .text:0000000000000434 .LVL68
     /tmp/ccGQJ8tf.s:895    .text:0000000000000580 .LVL88
     /tmp/ccGQJ8tf.s:899    .text:0000000000000588 .LVL89
     /tmp/ccGQJ8tf.s:890    .text:0000000000000578 .LVL87
     /tmp/ccGQJ8tf.s:760    .text:0000000000000484 .LVL70
     /tmp/ccGQJ8tf.s:812    .text:0000000000000504 .LVL78
     /tmp/ccGQJ8tf.s:821    .text:000000000000050c .LVL79
     /tmp/ccGQJ8tf.s:824    .text:0000000000000510 .LVL80
     /tmp/ccGQJ8tf.s:858    .text:0000000000000544 .LVL83
     /tmp/ccGQJ8tf.s:877    .text:0000000000000568 .LVL86
     /tmp/ccGQJ8tf.s:832    .text:0000000000000518 .LVL81
     /tmp/ccGQJ8tf.s:837    .text:0000000000000520 .LVL82
     /tmp/ccGQJ8tf.s:635    .text:00000000000003c0 .LVL60
     /tmp/ccGQJ8tf.s:653    .text:00000000000003dc .LVL61
     /tmp/ccGQJ8tf.s:655    .text:00000000000003e0 .LVL62
     /tmp/ccGQJ8tf.s:689    .text:0000000000000414 .LVL65
     /tmp/ccGQJ8tf.s:687    .text:0000000000000410 .LVL64
     /tmp/ccGQJ8tf.s:704    .text:000000000000042c .LVL67
     /tmp/ccGQJ8tf.s:678    .text:0000000000000404 .LVL63
     /tmp/ccGQJ8tf.s:518    .text:0000000000000320 .LVL46
     /tmp/ccGQJ8tf.s:599    .text:0000000000000398 .LVL56
     /tmp/ccGQJ8tf.s:607    .text:00000000000003a4 .LVL57
     /tmp/ccGQJ8tf.s:542    .text:000000000000034c .LVL47
     /tmp/ccGQJ8tf.s:547    .text:0000000000000358 .LVL48
     /tmp/ccGQJ8tf.s:616    .text:00000000000003b0 .LVL58
     /tmp/ccGQJ8tf.s:620    .text:00000000000003b4 .LVL59
     /tmp/ccGQJ8tf.s:552    .text:0000000000000360 .LVL49
     /tmp/ccGQJ8tf.s:595    .text:0000000000000394 .LVL55
     /tmp/ccGQJ8tf.s:559    .text:0000000000000368 .LVL51
     /tmp/ccGQJ8tf.s:570    .text:0000000000000374 .LVL52
     /tmp/ccGQJ8tf.s:576    .text:000000000000037c .LVL53
     /tmp/ccGQJ8tf.s:556    .text:0000000000000364 .LVL50
     /tmp/ccGQJ8tf.s:408    .text:000000000000028c .LVL32
     /tmp/ccGQJ8tf.s:471    .text:00000000000002f0 .LVL38
     /tmp/ccGQJ8tf.s:473    .text:00000000000002f4 .LVL39
     /tmp/ccGQJ8tf.s:485    .text:0000000000000304 .LVL41
     /tmp/ccGQJ8tf.s:495    .text:0000000000000310 .LVL42
     /tmp/ccGQJ8tf.s:500    .text:0000000000000314 .LVL43
     /tmp/ccGQJ8tf.s:502    .text:0000000000000318 .LVL44
     /tmp/ccGQJ8tf.s:506    .text:000000000000031c .LVL45
     /tmp/ccGQJ8tf.s:427    .text:00000000000002b8 .LVL33
     /tmp/ccGQJ8tf.s:481    .text:0000000000000300 .LVL40
     /tmp/ccGQJ8tf.s:434    .text:00000000000002c0 .LVL35
GAS LISTING /tmp/ccGQJ8tf.s 			page 53


     /tmp/ccGQJ8tf.s:445    .text:00000000000002cc .LVL36
     /tmp/ccGQJ8tf.s:451    .text:00000000000002d4 .LVL37
     /tmp/ccGQJ8tf.s:431    .text:00000000000002bc .LVL34
     /tmp/ccGQJ8tf.s:234    .text:0000000000000194 .LVL13
     /tmp/ccGQJ8tf.s:319    .text:0000000000000214 .LVL25
     /tmp/ccGQJ8tf.s:338    .text:000000000000022c .LVL26
     /tmp/ccGQJ8tf.s:361    .text:0000000000000250 .LVL29
     /tmp/ccGQJ8tf.s:367    .text:0000000000000254 .LVL30
     /tmp/ccGQJ8tf.s:259    .text:00000000000001bc .LVL16
     /tmp/ccGQJ8tf.s:352    .text:0000000000000240 .LVL27
     /tmp/ccGQJ8tf.s:252    .text:00000000000001b4 .LVL14
     /tmp/ccGQJ8tf.s:267    .text:00000000000001cc .LVL17
     /tmp/ccGQJ8tf.s:303    .text:00000000000001fc .LVL22
     /tmp/ccGQJ8tf.s:305    .text:0000000000000200 .LVL23
     /tmp/ccGQJ8tf.s:271    .text:00000000000001d0 .LVL18
     /tmp/ccGQJ8tf.s:274    .text:00000000000001d4 .LVL19
     /tmp/ccGQJ8tf.s:300    .text:00000000000001f8 .LVL21
     /tmp/ccGQJ8tf.s:357    .text:0000000000000248 .LVL28
     /tmp/ccGQJ8tf.s:255    .text:00000000000001b8 .LVL15
     /tmp/ccGQJ8tf.s:282    .text:00000000000001dc .LVL20
     /tmp/ccGQJ8tf.s:313    .text:000000000000020c .LVL24
     /tmp/ccGQJ8tf.s:119    .text:00000000000000e0 .LVL5
     /tmp/ccGQJ8tf.s:147    .text:0000000000000134 .LVL9
     /tmp/ccGQJ8tf.s:1283   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccGQJ8tf.s:48     .text:0000000000000038 .LBB15
     /tmp/ccGQJ8tf.s:154    .text:0000000000000140 .LBE15
     /tmp/ccGQJ8tf.s:177    .text:0000000000000164 .LBB18
     /tmp/ccGQJ8tf.s:198    .text:0000000000000194 .LBE18
     /tmp/ccGQJ8tf.s:750    .text:0000000000000474 .LBB27
     /tmp/ccGQJ8tf.s:755    .text:000000000000047c .LBE27
     /tmp/ccGQJ8tf.s:826    .text:0000000000000510 .LBB28
     /tmp/ccGQJ8tf.s:873    .text:0000000000000564 .LBE28
     /tmp/ccGQJ8tf.s:903    .text:0000000000000588 .LBB29
     /tmp/ccGQJ8tf.s:907    .text:000000000000058c .LBE29
     /tmp/ccGQJ8tf.s:204    .gcc_except_table:0000000000000000 .LLSDA113

UNDEFINED SYMBOLS
_ZN13SlabAllocator11getInstanceEv
_ZN13SlabAllocator7kmallocEm
_ZN11ObjectCachenwEm
_ZN11ObjectCacheC1EPKcmPFvPvES4_NS_12SlabMetaTypeE
_ZN11ObjectCache9alloc_objEv
_ZN7NoAlloc16NOALLOC_END_ADDRE
_Z12kprintStringPKc
_Z9kprintIntmib
HEAP_END_ADDR
_ZN11ObjectCachedlEPv
_Unwind_Resume
__gxx_personality_v0
HEAP_START_ADDR
_ZN11ObjectCache8free_objEPv
