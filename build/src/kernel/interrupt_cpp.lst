GAS LISTING /tmp/ccP4HCkU.s 			page 1


   1              		.file	"interrupt_cpp.cpp"
   2              		.option nopic
   3              		.option norelax
   4              		.attribute arch, "rv64i2p0_m2p0_a2p0"
   5              		.attribute unaligned_access, 0
   6              		.attribute stack_align, 16
   7              		.text
   8              	.Ltext0:
   9              		.align	2
  10              		.globl	_Z13timer_handlerv
  12              	_Z13timer_handlerv:
  13              	.LFB91:
  14              		.file 1 "src/kernel/interrupt_cpp.cpp"
   1:src/kernel/interrupt_cpp.cpp **** #include"../../h/kernel_lib.h"
   2:src/kernel/interrupt_cpp.cpp **** 
   3:src/kernel/interrupt_cpp.cpp **** enum sysCallNum
   4:src/kernel/interrupt_cpp.cpp **** {
   5:src/kernel/interrupt_cpp.cpp ****     MA = 0x1, 
   6:src/kernel/interrupt_cpp.cpp ****     MF = 0x2,
   7:src/kernel/interrupt_cpp.cpp ****     TC = 0x11,
   8:src/kernel/interrupt_cpp.cpp ****     TE = 0x12,
   9:src/kernel/interrupt_cpp.cpp ****     TD = 0x13,
  10:src/kernel/interrupt_cpp.cpp ****     SO = 0x21,
  11:src/kernel/interrupt_cpp.cpp ****     SC = 0x22,
  12:src/kernel/interrupt_cpp.cpp ****     SW = 0x23,
  13:src/kernel/interrupt_cpp.cpp ****     SS = 0x24,
  14:src/kernel/interrupt_cpp.cpp ****     DTH = 0x69,
  15:src/kernel/interrupt_cpp.cpp ****     TS = 0x31,
  16:src/kernel/interrupt_cpp.cpp ****     GC = 0x41,
  17:src/kernel/interrupt_cpp.cpp ****     PC = 0x42,     
  18:src/kernel/interrupt_cpp.cpp **** };
  19:src/kernel/interrupt_cpp.cpp **** 
  20:src/kernel/interrupt_cpp.cpp **** enum intNum
  21:src/kernel/interrupt_cpp.cpp **** {
  22:src/kernel/interrupt_cpp.cpp ****     IH = 0x8000000000000009,
  23:src/kernel/interrupt_cpp.cpp ****     IT = 0x8000000000000001,
  24:src/kernel/interrupt_cpp.cpp ****     IS = 9,
  25:src/kernel/interrupt_cpp.cpp ****     IU = 8,
  26:src/kernel/interrupt_cpp.cpp ****     II = 2,
  27:src/kernel/interrupt_cpp.cpp ****     IR = 5,
  28:src/kernel/interrupt_cpp.cpp ****     IW = 7,
  29:src/kernel/interrupt_cpp.cpp **** 
  30:src/kernel/interrupt_cpp.cpp **** };
  31:src/kernel/interrupt_cpp.cpp **** 
  32:src/kernel/interrupt_cpp.cpp **** void timer_handler()
  33:src/kernel/interrupt_cpp.cpp **** {
  15              		.loc 1 33 1
  16              		.cfi_startproc
  17 0000 130101FD 		addi	sp,sp,-48
  18              		.cfi_def_cfa_offset 48
  19 0004 23341102 		sd	ra,40(sp)
  20 0008 23308102 		sd	s0,32(sp)
  21 000c 233C9100 		sd	s1,24(sp)
  22 0010 23382101 		sd	s2,16(sp)
  23              		.cfi_offset 1, -8
  24              		.cfi_offset 8, -16
  25              		.cfi_offset 9, -24
GAS LISTING /tmp/ccP4HCkU.s 			page 2


  26              		.cfi_offset 18, -32
  27 0014 13040103 		addi	s0,sp,48
  28              		.cfi_def_cfa 8, 0
  34:src/kernel/interrupt_cpp.cpp ****     Scheduler::update_sleep();
  29              		.loc 1 34 5
  30              		.loc 1 34 28 is_stmt 0
  31 0018 97000000 		call	_ZN9Scheduler12update_sleepEv
  31      E7800000 
  32              	.LVL0:
  35:src/kernel/interrupt_cpp.cpp **** 
  36:src/kernel/interrupt_cpp.cpp ****     //uvecavanje vremena koriscenja procesora tekuceg thread
  37:src/kernel/interrupt_cpp.cpp ****     TCB::timeSliceCounter++;
  33              		.loc 1 37 5 is_stmt 1
  34              		.loc 1 37 26 is_stmt 0
  35 0020 17070000 		lla	a4,_ZN3TCB16timeSliceCounterE
  35      13070700 
  36 0028 83370700 		ld	a5,0(a4)
  37 002c 93871700 		addi	a5,a5,1
  38 0030 2330F700 		sd	a5,0(a4)
  38:src/kernel/interrupt_cpp.cpp ****     
  39:src/kernel/interrupt_cpp.cpp ****     if(TCB::timeSliceCounter >= TCB::running->getTimeSlice())
  39              		.loc 1 39 5 is_stmt 1
  40              	.LBB109:
  41              		.loc 1 39 59 is_stmt 0
  42 0034 17070000 		lla	a4,_ZN3TCB7runningE
  42      13070700 
  43 003c 03370700 		ld	a4,0(a4)
  44              	.LVL1:
  45              	.LBB110:
  46              	.LBB111:
  47              		.file 2 "src/kernel/../../h/../h/tcb.hpp"
   1:src/kernel/../../h/../h/tcb.hpp **** #ifndef __tcb__h
   2:src/kernel/../../h/../h/tcb.hpp **** #define __tcb__h
   3:src/kernel/../../h/../h/tcb.hpp **** 
   4:src/kernel/../../h/../h/tcb.hpp **** #include"../h/memory_allocator.hpp"
   5:src/kernel/../../h/../h/tcb.hpp **** 
   6:src/kernel/../../h/../h/tcb.hpp **** class KSemaphore;
   7:src/kernel/../../h/../h/tcb.hpp **** 
   8:src/kernel/../../h/../h/tcb.hpp **** class TCB{
   9:src/kernel/../../h/../h/tcb.hpp ****     
  10:src/kernel/../../h/../h/tcb.hpp **** public:
  11:src/kernel/../../h/../h/tcb.hpp ****     //alokacija
  12:src/kernel/../../h/../h/tcb.hpp ****     #include"../h/kernel_operators.hpp"
  13:src/kernel/../../h/../h/tcb.hpp ****     
  14:src/kernel/../../h/../h/tcb.hpp ****     using Body = void (*)(void*);
  15:src/kernel/../../h/../h/tcb.hpp ****     enum TCBState{
  16:src/kernel/../../h/../h/tcb.hpp ****         BLOCKED,
  17:src/kernel/../../h/../h/tcb.hpp ****         READY,
  18:src/kernel/../../h/../h/tcb.hpp ****         FINISHED,
  19:src/kernel/../../h/../h/tcb.hpp ****         SLEEPING
  20:src/kernel/../../h/../h/tcb.hpp ****     };
  21:src/kernel/../../h/../h/tcb.hpp ****     
  22:src/kernel/../../h/../h/tcb.hpp ****     ~TCB(){ 
  23:src/kernel/../../h/../h/tcb.hpp ****         MemoryAllocator& allocator = MemoryAllocator::getInstance(); 
  24:src/kernel/../../h/../h/tcb.hpp ****         allocator.mem_free(this->stack);
  25:src/kernel/../../h/../h/tcb.hpp ****     }
  26:src/kernel/../../h/../h/tcb.hpp ****     
GAS LISTING /tmp/ccP4HCkU.s 			page 3


  27:src/kernel/../../h/../h/tcb.hpp ****     //nestaticki metodi
  28:src/kernel/../../h/../h/tcb.hpp ****     void setState(TCBState s) {state = s;}
  29:src/kernel/../../h/../h/tcb.hpp ****     TCBState getState() const{ return state; }
  30:src/kernel/../../h/../h/tcb.hpp ****     void finish() { state = FINISHED; }
  31:src/kernel/../../h/../h/tcb.hpp ****     bool isFinished(){ return state == FINISHED; }
  32:src/kernel/../../h/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  48              		.loc 2 32 35 is_stmt 1
  49              		.loc 2 32 42 is_stmt 0
  50 0040 03378702 		ld	a4,40(a4)
  51              	.LVL2:
  52              	.LBE111:
  53              	.LBE110:
  54              		.loc 1 39 5
  55 0044 63F2E702 		bgeu	a5,a4,.L4
  56              	.L2:
  57              	.LBE109:
  40:src/kernel/interrupt_cpp.cpp ****     {
  41:src/kernel/interrupt_cpp.cpp ****         uint64 sstatus = Riscv::r_sstatus(),
  42:src/kernel/interrupt_cpp.cpp ****         sepc = Riscv::r_sepc();
  43:src/kernel/interrupt_cpp.cpp ****         
  44:src/kernel/interrupt_cpp.cpp ****         TCB::timeSliceCounter = 0;
  45:src/kernel/interrupt_cpp.cpp ****         
  46:src/kernel/interrupt_cpp.cpp ****         TCB::yield();
  47:src/kernel/interrupt_cpp.cpp **** 
  48:src/kernel/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
  49:src/kernel/interrupt_cpp.cpp ****         Riscv::w_sepc(sepc);
  50:src/kernel/interrupt_cpp.cpp ****     } 
  51:src/kernel/interrupt_cpp.cpp **** 
  52:src/kernel/interrupt_cpp.cpp ****     
  53:src/kernel/interrupt_cpp.cpp ****     Riscv::mc_sip(Riscv::SIP_SSIE);
  58              		.loc 1 53 5 is_stmt 1
  59              	.LVL3:
  60              	.LBB121:
  61              	.LBB122:
  62              		.file 3 "src/kernel/../../h/../h/riscv.hpp"
   1:src/kernel/../../h/../h/riscv.hpp **** #ifndef __riscv__
   2:src/kernel/../../h/../h/riscv.hpp **** #define __riscv__
   3:src/kernel/../../h/../h/riscv.hpp **** 
   4:src/kernel/../../h/../h/riscv.hpp **** #include"../lib/hw.h"
   5:src/kernel/../../h/../h/riscv.hpp **** 
   6:src/kernel/../../h/../h/riscv.hpp **** class Riscv{
   7:src/kernel/../../h/../h/riscv.hpp **** public:
   8:src/kernel/../../h/../h/riscv.hpp ****     
   9:src/kernel/../../h/../h/riscv.hpp ****     static void w_scause(uint64);
  10:src/kernel/../../h/../h/riscv.hpp ****     static uint64 r_scause(); 
  11:src/kernel/../../h/../h/riscv.hpp **** 
  12:src/kernel/../../h/../h/riscv.hpp ****     static void w_sepc(uint64);
  13:src/kernel/../../h/../h/riscv.hpp ****     static uint64 r_sepc();
  14:src/kernel/../../h/../h/riscv.hpp ****     static void ni_sepc();
  15:src/kernel/../../h/../h/riscv.hpp **** 
  16:src/kernel/../../h/../h/riscv.hpp ****     static void w_stvec(uint64);
  17:src/kernel/../../h/../h/riscv.hpp ****     static uint64 r_stvec();
  18:src/kernel/../../h/../h/riscv.hpp ****      
  19:src/kernel/../../h/../h/riscv.hpp ****     static void w_stval(uint64);
  20:src/kernel/../../h/../h/riscv.hpp ****     static uint64 r_stval();
  21:src/kernel/../../h/../h/riscv.hpp ****     
  22:src/kernel/../../h/../h/riscv.hpp ****     enum BitMaskSip{
GAS LISTING /tmp/ccP4HCkU.s 			page 4


  23:src/kernel/../../h/../h/riscv.hpp ****         SIP_SSIE = (1<<1),
  24:src/kernel/../../h/../h/riscv.hpp ****         SIP_STIE = (1<<5),
  25:src/kernel/../../h/../h/riscv.hpp ****         SIP_SEIE = (1<<9),
  26:src/kernel/../../h/../h/riscv.hpp ****     };
  27:src/kernel/../../h/../h/riscv.hpp **** 
  28:src/kernel/../../h/../h/riscv.hpp ****     static void ms_sip(uint64);
  29:src/kernel/../../h/../h/riscv.hpp ****     static void mc_sip(uint64);
  30:src/kernel/../../h/../h/riscv.hpp **** 
  31:src/kernel/../../h/../h/riscv.hpp ****     static void w_sip(uint64);
  32:src/kernel/../../h/../h/riscv.hpp ****     static uint64 r_sip();
  33:src/kernel/../../h/../h/riscv.hpp **** 
  34:src/kernel/../../h/../h/riscv.hpp ****     enum BitMaskSstatus{
  35:src/kernel/../../h/../h/riscv.hpp ****         SSTATUS_SIE = (1<<1),
  36:src/kernel/../../h/../h/riscv.hpp ****         SSTATUS_SPIE = (1<<5),
  37:src/kernel/../../h/../h/riscv.hpp ****         SSTATUS_SPP = (1<<8),
  38:src/kernel/../../h/../h/riscv.hpp ****     };
  39:src/kernel/../../h/../h/riscv.hpp **** 
  40:src/kernel/../../h/../h/riscv.hpp ****     static void ms_sstatus(uint64);
  41:src/kernel/../../h/../h/riscv.hpp ****     static void mc_sstatus(uint64);
  42:src/kernel/../../h/../h/riscv.hpp **** 
  43:src/kernel/../../h/../h/riscv.hpp ****     static void w_sstatus(uint64);
  44:src/kernel/../../h/../h/riscv.hpp ****     static uint64 r_sstatus();
  45:src/kernel/../../h/../h/riscv.hpp **** 
  46:src/kernel/../../h/../h/riscv.hpp ****     static uint64 r_a0();
  47:src/kernel/../../h/../h/riscv.hpp ****     static uint64 s_a0(uint64 a0);
  48:src/kernel/../../h/../h/riscv.hpp ****     static uint64 r_a1();
  49:src/kernel/../../h/../h/riscv.hpp ****     static uint64 r_a2();
  50:src/kernel/../../h/../h/riscv.hpp ****     static uint64 r_a3();
  51:src/kernel/../../h/../h/riscv.hpp ****     static uint64 r_a4();
  52:src/kernel/../../h/../h/riscv.hpp **** 
  53:src/kernel/../../h/../h/riscv.hpp ****     static void popRegisters();
  54:src/kernel/../../h/../h/riscv.hpp ****     static void pushRegisters();
  55:src/kernel/../../h/../h/riscv.hpp **** 
  56:src/kernel/../../h/../h/riscv.hpp ****     static void popSppSpie();
  57:src/kernel/../../h/../h/riscv.hpp **** 
  58:src/kernel/../../h/../h/riscv.hpp ****     static void mc_cstatus(uint64 mask);
  59:src/kernel/../../h/../h/riscv.hpp ****     static bool cstatus_ready(uint64 mask);
  60:src/kernel/../../h/../h/riscv.hpp **** };
  61:src/kernel/../../h/../h/riscv.hpp **** 
  62:src/kernel/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a0(){
  63:src/kernel/../../h/../h/riscv.hpp ****     uint64 a0;
  64:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("mv %0, a0" : "=r" (a0));
  65:src/kernel/../../h/../h/riscv.hpp ****     return a0;
  66:src/kernel/../../h/../h/riscv.hpp **** }
  67:src/kernel/../../h/../h/riscv.hpp **** 
  68:src/kernel/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a1(){
  69:src/kernel/../../h/../h/riscv.hpp ****     uint64 a0;
  70:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("mv %0, a1" : "=r" (a0));
  71:src/kernel/../../h/../h/riscv.hpp ****     return a0;
  72:src/kernel/../../h/../h/riscv.hpp **** }
  73:src/kernel/../../h/../h/riscv.hpp **** 
  74:src/kernel/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a2(){
  75:src/kernel/../../h/../h/riscv.hpp ****     uint64 a0;
  76:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("mv %0, a2" : "=r" (a0));
  77:src/kernel/../../h/../h/riscv.hpp ****     return a0;
  78:src/kernel/../../h/../h/riscv.hpp **** }
  79:src/kernel/../../h/../h/riscv.hpp **** 
GAS LISTING /tmp/ccP4HCkU.s 			page 5


  80:src/kernel/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a3(){
  81:src/kernel/../../h/../h/riscv.hpp ****     uint64 a0;
  82:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("mv %0, a3" : "=r" (a0));
  83:src/kernel/../../h/../h/riscv.hpp ****     return a0;
  84:src/kernel/../../h/../h/riscv.hpp **** }
  85:src/kernel/../../h/../h/riscv.hpp **** 
  86:src/kernel/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_a4(){
  87:src/kernel/../../h/../h/riscv.hpp ****     uint64 a0;
  88:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("mv %0, a4" : "=r" (a0));
  89:src/kernel/../../h/../h/riscv.hpp ****     return a0;
  90:src/kernel/../../h/../h/riscv.hpp **** }
  91:src/kernel/../../h/../h/riscv.hpp **** 
  92:src/kernel/../../h/../h/riscv.hpp **** 
  93:src/kernel/../../h/../h/riscv.hpp **** inline uint64 Riscv::s_a0(uint64 a0){
  94:src/kernel/../../h/../h/riscv.hpp ****     return a0;
  95:src/kernel/../../h/../h/riscv.hpp **** }
  96:src/kernel/../../h/../h/riscv.hpp **** 
  97:src/kernel/../../h/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause){
  98:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("csrw scause, %0" : : "r" (scause));
  99:src/kernel/../../h/../h/riscv.hpp **** }
 100:src/kernel/../../h/../h/riscv.hpp **** 
 101:src/kernel/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_scause(){
 102:src/kernel/../../h/../h/riscv.hpp ****     uint64 volatile scause;
 103:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, scause" : "=r" (scause));
 104:src/kernel/../../h/../h/riscv.hpp ****     return scause;
 105:src/kernel/../../h/../h/riscv.hpp **** } 
 106:src/kernel/../../h/../h/riscv.hpp **** 
 107:src/kernel/../../h/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc){
 108:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("csrw sepc, %0" : : "r" (sepc));
 109:src/kernel/../../h/../h/riscv.hpp **** }
 110:src/kernel/../../h/../h/riscv.hpp **** 
 111:src/kernel/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_sepc(){
 112:src/kernel/../../h/../h/riscv.hpp ****     uint64 volatile sepc;
 113:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sepc" : "=r" (sepc));
 114:src/kernel/../../h/../h/riscv.hpp ****     return sepc;
 115:src/kernel/../../h/../h/riscv.hpp **** } 
 116:src/kernel/../../h/../h/riscv.hpp **** 
 117:src/kernel/../../h/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec){
 118:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("csrw stvec, %0" : : "r" (stvec));
 119:src/kernel/../../h/../h/riscv.hpp **** }
 120:src/kernel/../../h/../h/riscv.hpp **** 
 121:src/kernel/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_stvec(){
 122:src/kernel/../../h/../h/riscv.hpp ****     uint64 volatile stvec;
 123:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, stvec" : "=r" (stvec));
 124:src/kernel/../../h/../h/riscv.hpp ****     return stvec;
 125:src/kernel/../../h/../h/riscv.hpp **** } 
 126:src/kernel/../../h/../h/riscv.hpp **** 
 127:src/kernel/../../h/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval){
 128:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("csrw stval, %0" : : "r" (stval));
 129:src/kernel/../../h/../h/riscv.hpp **** }
 130:src/kernel/../../h/../h/riscv.hpp **** 
 131:src/kernel/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_stval(){
 132:src/kernel/../../h/../h/riscv.hpp ****     uint64 volatile stval;
 133:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, stval" : "=r" (stval));
 134:src/kernel/../../h/../h/riscv.hpp ****     return stval;
 135:src/kernel/../../h/../h/riscv.hpp **** } 
 136:src/kernel/../../h/../h/riscv.hpp **** 
GAS LISTING /tmp/ccP4HCkU.s 			page 6


 137:src/kernel/../../h/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask){
 138:src/kernel/../../h/../h/riscv.hpp ****     asm volatile ("csrs sip, %0" : : "r" (mask));
 139:src/kernel/../../h/../h/riscv.hpp **** }
 140:src/kernel/../../h/../h/riscv.hpp **** 
 141:src/kernel/../../h/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask){
 142:src/kernel/../../h/../h/riscv.hpp ****     asm volatile ("csrc sip, %0" : : "r" (mask));
  63              		.loc 3 142 5
  64              		.loc 3 142 49 is_stmt 0
  65 0048 93072000 		li	a5,2
  66              	 #APP
  67              	# 142 "src/kernel/../../h/../h/riscv.hpp" 1
 143              	}
  68              		csrc sip, a5
  69              	# 0 "" 2
  70              	.LVL4:
  71              	 #NO_APP
  72              	.LBE122:
  73              	.LBE121:
  54:src/kernel/interrupt_cpp.cpp **** }
  74              		.loc 1 54 1
  75 0050 83308102 		ld	ra,40(sp)
  76              		.cfi_remember_state
  77              		.cfi_restore 1
  78 0054 03340102 		ld	s0,32(sp)
  79              		.cfi_restore 8
  80              		.cfi_def_cfa 2, 48
  81 0058 83348101 		ld	s1,24(sp)
  82              		.cfi_restore 9
  83 005c 03390101 		ld	s2,16(sp)
  84              		.cfi_restore 18
  85 0060 13010103 		addi	sp,sp,48
  86              		.cfi_def_cfa_offset 0
  87 0064 67800000 		jr	ra
  88              	.L4:
  89              		.cfi_restore_state
  90              	.LBB123:
  91              	.LBB112:
  41:src/kernel/interrupt_cpp.cpp ****         sepc = Riscv::r_sepc();
  92              		.loc 1 41 9 is_stmt 1
  93              	.LBB113:
  94              	.LBB114:
 144:src/kernel/../../h/../h/riscv.hpp **** 
 145:src/kernel/../../h/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip){
 146:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("csrw sip, %0" : : "r" (sip));
 147:src/kernel/../../h/../h/riscv.hpp **** }
 148:src/kernel/../../h/../h/riscv.hpp **** 
 149:src/kernel/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_sip(){
 150:src/kernel/../../h/../h/riscv.hpp ****     uint64 volatile sip;
 151:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sip" : "=r" (sip));
 152:src/kernel/../../h/../h/riscv.hpp ****     return sip;
 153:src/kernel/../../h/../h/riscv.hpp **** } 
 154:src/kernel/../../h/../h/riscv.hpp **** 
 155:src/kernel/../../h/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask){
 156:src/kernel/../../h/../h/riscv.hpp ****     asm volatile ("csrs sstatus, %0" : : "r" (mask));
 157:src/kernel/../../h/../h/riscv.hpp **** }
 158:src/kernel/../../h/../h/riscv.hpp **** 
 159:src/kernel/../../h/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask){
GAS LISTING /tmp/ccP4HCkU.s 			page 7


 160:src/kernel/../../h/../h/riscv.hpp ****     asm volatile ("csrc sstatus, %0" : : "r" (mask));
 161:src/kernel/../../h/../h/riscv.hpp **** }
 162:src/kernel/../../h/../h/riscv.hpp **** 
 163:src/kernel/../../h/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus){
 164:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("csrw sstatus, %0" : : "r" (sstatus));
 165:src/kernel/../../h/../h/riscv.hpp **** }
 166:src/kernel/../../h/../h/riscv.hpp **** 
 167:src/kernel/../../h/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus(){
 168:src/kernel/../../h/../h/riscv.hpp ****     uint64 volatile sstatus;
  95              		.loc 3 168 5
 169:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sstatus" : "=r" (sstatus));
  96              		.loc 3 169 5
  97              		.loc 3 169 54 is_stmt 0
  98              	 #APP
  99              	# 169 "src/kernel/../../h/../h/riscv.hpp" 1
 170              	    return sstatus;
 100              		csrr a5, sstatus
 101              	# 0 "" 2
 102              	 #NO_APP
 103 006c 233CF4FC 		sd	a5,-40(s0)
 104              		.loc 3 170 5 is_stmt 1
 105              		.loc 3 170 12 is_stmt 0
 106 0070 033984FD 		ld	s2,-40(s0)
 107              	.LVL5:
 108              	.LBE114:
 109              	.LBE113:
 110              	.LBB115:
 111              	.LBB116:
 112:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sepc" : "=r" (sepc));
 112              		.loc 3 112 5 is_stmt 1
 113:src/kernel/../../h/../h/riscv.hpp ****     return sepc;
 113              		.loc 3 113 5
 113:src/kernel/../../h/../h/riscv.hpp ****     return sepc;
 114              		.loc 3 113 48 is_stmt 0
 115              	 #APP
 116              	# 113 "src/kernel/../../h/../h/riscv.hpp" 1
 117              		csrr a5, sepc
 118              	# 0 "" 2
 119              	 #NO_APP
 120 0078 2338F4FC 		sd	a5,-48(s0)
 114:src/kernel/../../h/../h/riscv.hpp **** } 
 121              		.loc 3 114 5 is_stmt 1
 114:src/kernel/../../h/../h/riscv.hpp **** } 
 122              		.loc 3 114 12 is_stmt 0
 123 007c 833404FD 		ld	s1,-48(s0)
 124              	.LVL6:
 125              	.LBE116:
 126              	.LBE115:
  44:src/kernel/interrupt_cpp.cpp ****         
 127              		.loc 1 44 9 is_stmt 1
  44:src/kernel/interrupt_cpp.cpp ****         
 128              		.loc 1 44 31 is_stmt 0
 129 0080 97070000 		sd	zero,_ZN3TCB16timeSliceCounterE,a5
 129      23B00700 
  46:src/kernel/interrupt_cpp.cpp **** 
 130              		.loc 1 46 9 is_stmt 1
  46:src/kernel/interrupt_cpp.cpp **** 
GAS LISTING /tmp/ccP4HCkU.s 			page 8


 131              		.loc 1 46 19 is_stmt 0
 132 0088 97000000 		call	_ZN3TCB5yieldEv
 132      E7800000 
 133              	.LVL7:
  48:src/kernel/interrupt_cpp.cpp ****         Riscv::w_sepc(sepc);
 134              		.loc 1 48 9 is_stmt 1
 135              	.LBB117:
 136              	.LBB118:
 164:src/kernel/../../h/../h/riscv.hpp **** }
 137              		.loc 3 164 5
 164:src/kernel/../../h/../h/riscv.hpp **** }
 138              		.loc 3 164 55 is_stmt 0
 139              	 #APP
 140              	# 164 "src/kernel/../../h/../h/riscv.hpp" 1
 141              		csrw sstatus, s2
 142              	# 0 "" 2
 143              	.LVL8:
 144              	 #NO_APP
 145              	.LBE118:
 146              	.LBE117:
  49:src/kernel/interrupt_cpp.cpp ****     } 
 147              		.loc 1 49 9 is_stmt 1
 148              	.LBB119:
 149              	.LBB120:
 108:src/kernel/../../h/../h/riscv.hpp **** }
 150              		.loc 3 108 5
 108:src/kernel/../../h/../h/riscv.hpp **** }
 151              		.loc 3 108 49 is_stmt 0
 152              	 #APP
 153              	# 108 "src/kernel/../../h/../h/riscv.hpp" 1
 154              		csrw sepc, s1
 155              	# 0 "" 2
 156              	 #NO_APP
 157 0098 6FF01FFB 		j	.L2
 158              	.LBE120:
 159              	.LBE119:
 160              	.LBE112:
 161              	.LBE123:
 162              		.cfi_endproc
 163              	.LFE91:
 165              		.align	2
 166              		.globl	_Z8usrEcallmmmmm
 168              	_Z8usrEcallmmmmm:
 169              	.LFB92:
  55:src/kernel/interrupt_cpp.cpp **** 
  56:src/kernel/interrupt_cpp.cpp **** uint64 usrEcall(uint64 a0, uint64 a1, uint64 a2, uint64 a3, uint64 a4)
  57:src/kernel/interrupt_cpp.cpp **** {
 170              		.loc 1 57 1 is_stmt 1
 171              		.cfi_startproc
 172              	.LVL9:
 173 009c 130101FB 		addi	sp,sp,-80
 174              		.cfi_def_cfa_offset 80
 175 00a0 23341104 		sd	ra,72(sp)
 176 00a4 23308104 		sd	s0,64(sp)
 177 00a8 233C9102 		sd	s1,56(sp)
 178 00ac 23382103 		sd	s2,48(sp)
 179 00b0 23343103 		sd	s3,40(sp)
GAS LISTING /tmp/ccP4HCkU.s 			page 9


 180 00b4 23304103 		sd	s4,32(sp)
 181 00b8 233C5101 		sd	s5,24(sp)
 182 00bc 23386101 		sd	s6,16(sp)
 183              		.cfi_offset 1, -8
 184              		.cfi_offset 8, -16
 185              		.cfi_offset 9, -24
 186              		.cfi_offset 18, -32
 187              		.cfi_offset 19, -40
 188              		.cfi_offset 20, -48
 189              		.cfi_offset 21, -56
 190              		.cfi_offset 22, -64
 191 00c0 13040105 		addi	s0,sp,80
 192              		.cfi_def_cfa 8, 0
 193 00c4 138A0500 		mv	s4,a1
  58:src/kernel/interrupt_cpp.cpp ****     uint64 sepc = Riscv::r_sepc()+4, sstatus = Riscv::r_sstatus(), ret = a0;
 194              		.loc 1 58 5
 195              	.LBB161:
 196              	.LBB162:
 112:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sepc" : "=r" (sepc));
 197              		.loc 3 112 5
 113:src/kernel/../../h/../h/riscv.hpp ****     return sepc;
 198              		.loc 3 113 5
 113:src/kernel/../../h/../h/riscv.hpp ****     return sepc;
 199              		.loc 3 113 48 is_stmt 0
 200              	 #APP
 201              	# 113 "src/kernel/../../h/../h/riscv.hpp" 1
 202              		csrr a5, sepc
 203              	# 0 "" 2
 204              	 #NO_APP
 205 00cc 233CF4FA 		sd	a5,-72(s0)
 114:src/kernel/../../h/../h/riscv.hpp **** } 
 206              		.loc 3 114 5 is_stmt 1
 114:src/kernel/../../h/../h/riscv.hpp **** } 
 207              		.loc 3 114 12 is_stmt 0
 208 00d0 033984FB 		ld	s2,-72(s0)
 209              	.LBE162:
 210              	.LBE161:
 211              		.loc 1 58 35
 212 00d4 13094900 		addi	s2,s2,4
 213              	.LVL10:
 214              	.LBB163:
 215              	.LBB164:
 168:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sstatus" : "=r" (sstatus));
 216              		.loc 3 168 5 is_stmt 1
 169:src/kernel/../../h/../h/riscv.hpp ****     return sstatus;
 217              		.loc 3 169 5
 169:src/kernel/../../h/../h/riscv.hpp ****     return sstatus;
 218              		.loc 3 169 54 is_stmt 0
 219              	 #APP
 220              	# 169 "src/kernel/../../h/../h/riscv.hpp" 1
 221              		csrr a5, sstatus
 222              	# 0 "" 2
 223              	 #NO_APP
 224 00dc 2338F4FA 		sd	a5,-80(s0)
 225              		.loc 3 170 5 is_stmt 1
 226              		.loc 3 170 12 is_stmt 0
 227 00e0 833904FB 		ld	s3,-80(s0)
GAS LISTING /tmp/ccP4HCkU.s 			page 10


 228              	.LVL11:
 229              	.LBE164:
 230              	.LBE163:
  59:src/kernel/interrupt_cpp.cpp **** 
  60:src/kernel/interrupt_cpp.cpp ****     if(a0 == MA){
 231              		.loc 1 60 5 is_stmt 1
 232              	.LBB165:
 233 00e4 93071000 		li	a5,1
 234 00e8 6306F50E 		beq	a0,a5,.L24
 235 00ec 93040500 		mv	s1,a0
 236 00f0 930A0600 		mv	s5,a2
 237              	.LBE165:
  61:src/kernel/interrupt_cpp.cpp ****         //mem_alloc
  62:src/kernel/interrupt_cpp.cpp ****         ret = (uint64)MemoryAllocator::getInstance().mem_alloc(a1);
  63:src/kernel/interrupt_cpp.cpp ****     }
  64:src/kernel/interrupt_cpp.cpp ****     else if(a0 == MF)
 238              		.loc 1 64 10
 239              	.LBB258:
 240              	.LBB166:
 241 00f4 93072000 		li	a5,2
 242 00f8 6300F512 		beq	a0,a5,.L25
 243              	.LBE166:
 244              	.LBE258:
  65:src/kernel/interrupt_cpp.cpp ****     {
  66:src/kernel/interrupt_cpp.cpp ****         //mem_free
  67:src/kernel/interrupt_cpp.cpp ****         ret = (uint64)MemoryAllocator::getInstance().mem_free((void*)a1);
  68:src/kernel/interrupt_cpp.cpp **** 
  69:src/kernel/interrupt_cpp.cpp ****     }
  70:src/kernel/interrupt_cpp.cpp ****     else if(a0 == TC)
 245              		.loc 1 70 10
 246              	.LBB259:
 247              	.LBB245:
 248              	.LBB167:
 249 00fc 93071001 		li	a5,17
 250 0100 6308F512 		beq	a0,a5,.L26
 251              	.LBE167:
 252              	.LBE245:
 253              	.LBE259:
  71:src/kernel/interrupt_cpp.cpp ****     {
  72:src/kernel/interrupt_cpp.cpp ****         //thread_create
  73:src/kernel/interrupt_cpp.cpp ****         uint64* t = (uint64*)a1;
  74:src/kernel/interrupt_cpp.cpp ****         *t = (uint64)TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
  75:src/kernel/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
  76:src/kernel/interrupt_cpp.cpp ****         else ret = 0;
  77:src/kernel/interrupt_cpp.cpp ****     }
  78:src/kernel/interrupt_cpp.cpp ****     else if(a0 == TE)
 254              		.loc 1 78 10
 255              	.LBB260:
 256              	.LBB246:
 257              	.LBB233:
 258              	.LBB168:
 259 0104 93072001 		li	a5,18
 260 0108 630AF514 		beq	a0,a5,.L27
 261              	.LBE168:
 262              	.LBE233:
 263              	.LBE246:
 264              	.LBE260:
GAS LISTING /tmp/ccP4HCkU.s 			page 11


  79:src/kernel/interrupt_cpp.cpp ****     {
  80:src/kernel/interrupt_cpp.cpp ****         //thread_exit
  81:src/kernel/interrupt_cpp.cpp ****         TCB::running->finish();
  82:src/kernel/interrupt_cpp.cpp ****         TCB::dispatch();
  83:src/kernel/interrupt_cpp.cpp ****     }
  84:src/kernel/interrupt_cpp.cpp ****     else if(a0 == TD)
 265              		.loc 1 84 10
 266              	.LBB261:
 267              	.LBB247:
 268              	.LBB234:
 269              	.LBB221:
 270              	.LBB169:
 271 010c 93073001 		li	a5,19
 272 0110 6308F516 		beq	a0,a5,.L28
 273              	.LBE169:
 274              	.LBE221:
 275              	.LBE234:
 276              	.LBE247:
 277              	.LBE261:
  85:src/kernel/interrupt_cpp.cpp ****     {
  86:src/kernel/interrupt_cpp.cpp ****         //thread_dispatch
  87:src/kernel/interrupt_cpp.cpp ****         TCB::timeSliceCounter = 0;
  88:src/kernel/interrupt_cpp.cpp ****         TCB::yield();
  89:src/kernel/interrupt_cpp.cpp ****     }
  90:src/kernel/interrupt_cpp.cpp ****     else if(a0 == DTH)
 278              		.loc 1 90 10
 279              	.LBB262:
 280              	.LBB248:
 281              	.LBB235:
 282              	.LBB222:
 283              	.LBB210:
 284              	.LBB170:
 285 0114 93079006 		li	a5,105
 286 0118 6300F518 		beq	a0,a5,.L29
 287              	.LBE170:
 288              	.LBE210:
 289              	.LBE222:
 290              	.LBE235:
 291              	.LBE248:
 292              	.LBE262:
  91:src/kernel/interrupt_cpp.cpp ****     {
  92:src/kernel/interrupt_cpp.cpp ****         //delete thread handle
  93:src/kernel/interrupt_cpp.cpp ****         TCB::deleteThread((TCB*)a1);
  94:src/kernel/interrupt_cpp.cpp ****     }
  95:src/kernel/interrupt_cpp.cpp ****     else if(a0 == SO)
 293              		.loc 1 95 10
 294              	.LBB263:
 295              	.LBB249:
 296              	.LBB236:
 297              	.LBB223:
 298              	.LBB211:
 299              	.LBB203:
 300              	.LBB171:
 301 011c 93071002 		li	a5,33
 302 0120 6306F518 		beq	a0,a5,.L30
 303              	.LBE171:
 304              	.LBE203:
GAS LISTING /tmp/ccP4HCkU.s 			page 12


 305              	.LBE211:
 306              	.LBE223:
 307              	.LBE236:
 308              	.LBE249:
 309              	.LBE263:
  96:src/kernel/interrupt_cpp.cpp ****     {
  97:src/kernel/interrupt_cpp.cpp ****         uint64* t = (uint64*)a1;
  98:src/kernel/interrupt_cpp.cpp ****         *t = (uint64)(new KSemaphore(a2));
  99:src/kernel/interrupt_cpp.cpp ****         if(!(*t)) ret = -2;
 100:src/kernel/interrupt_cpp.cpp ****         else ret = 0;
 101:src/kernel/interrupt_cpp.cpp ****     }
 102:src/kernel/interrupt_cpp.cpp ****     else if(a0 == SC)
 310              		.loc 1 102 10
 311              	.LBB264:
 312              	.LBB250:
 313              	.LBB237:
 314              	.LBB224:
 315              	.LBB212:
 316              	.LBB204:
 317              	.LBB198:
 318              	.LBB172:
 319 0124 93072002 		li	a5,34
 320 0128 6304F51C 		beq	a0,a5,.L31
 321              	.LBE172:
 322              	.LBE198:
 323              	.LBE204:
 324              	.LBE212:
 325              	.LBE224:
 326              	.LBE237:
 327              	.LBE250:
 328              	.LBE264:
 103:src/kernel/interrupt_cpp.cpp ****     {
 104:src/kernel/interrupt_cpp.cpp ****         KSemaphore* t = (KSemaphore*)a1;
 105:src/kernel/interrupt_cpp.cpp ****         ret = KSemaphore::close(t);
 106:src/kernel/interrupt_cpp.cpp ****     }
 107:src/kernel/interrupt_cpp.cpp ****     else if(a0 == SW)
 329              		.loc 1 107 10
 330              	.LBB265:
 331              	.LBB251:
 332              	.LBB238:
 333              	.LBB225:
 334              	.LBB213:
 335              	.LBB205:
 336              	.LBB199:
 337              	.LBB187:
 338              	.LBB173:
 339 012c 93073002 		li	a5,35
 340 0130 6308F51C 		beq	a0,a5,.L32
 341              	.LBE173:
 342              	.LBE187:
 343              	.LBE199:
 344              	.LBE205:
 345              	.LBE213:
 346              	.LBE225:
 347              	.LBE238:
 348              	.LBE251:
 349              	.LBE265:
GAS LISTING /tmp/ccP4HCkU.s 			page 13


 108:src/kernel/interrupt_cpp.cpp ****     {
 109:src/kernel/interrupt_cpp.cpp ****         KSemaphore* t = (KSemaphore*)a1;
 110:src/kernel/interrupt_cpp.cpp ****         if(KSemaphore::exists(t))
 111:src/kernel/interrupt_cpp.cpp ****             ret = t->wait();
 112:src/kernel/interrupt_cpp.cpp ****         else
 113:src/kernel/interrupt_cpp.cpp ****             ret = -1;
 114:src/kernel/interrupt_cpp.cpp ****     }
 115:src/kernel/interrupt_cpp.cpp ****     else if(a0 == SS)
 350              		.loc 1 115 10
 351              	.LBB266:
 352              	.LBB252:
 353              	.LBB239:
 354              	.LBB226:
 355              	.LBB214:
 356              	.LBB206:
 357              	.LBB200:
 358              	.LBB188:
 359              	.LBB183:
 360              	.LBB174:
 361 0134 93074002 		li	a5,36
 362 0138 6308F51E 		beq	a0,a5,.L33
 116:src/kernel/interrupt_cpp.cpp ****     {
 117:src/kernel/interrupt_cpp.cpp ****         KSemaphore* t = (KSemaphore*)a1;
 118:src/kernel/interrupt_cpp.cpp ****         if(KSemaphore::exists(t))
 119:src/kernel/interrupt_cpp.cpp ****             ret = t->signal();
 120:src/kernel/interrupt_cpp.cpp ****         else
 121:src/kernel/interrupt_cpp.cpp ****             ret = -1;
 122:src/kernel/interrupt_cpp.cpp ****     }
 123:src/kernel/interrupt_cpp.cpp ****     else if(a0 == TS)
 363              		.loc 1 123 10
 364 013c 93071003 		li	a5,49
 365 0140 6308F520 		beq	a0,a5,.L34
 124:src/kernel/interrupt_cpp.cpp ****     {
 125:src/kernel/interrupt_cpp.cpp ****         TCB::sleep(a1);
 126:src/kernel/interrupt_cpp.cpp ****     }
 127:src/kernel/interrupt_cpp.cpp ****     else if(a0 == GC)
 366              		.loc 1 127 10
 367 0144 93071004 		li	a5,65
 368 0148 630EF520 		beq	a0,a5,.L35
 128:src/kernel/interrupt_cpp.cpp ****     {
 129:src/kernel/interrupt_cpp.cpp ****         ret = StdIO::ibuffer->get();
 130:src/kernel/interrupt_cpp.cpp ****     }
 131:src/kernel/interrupt_cpp.cpp ****     else if(a0 == PC)
 369              		.loc 1 131 10
 370 014c 93072004 		li	a5,66
 371 0150 631CF508 		bne	a0,a5,.L7
 132:src/kernel/interrupt_cpp.cpp ****     {
 133:src/kernel/interrupt_cpp.cpp ****         StdIO::obuffer->put((char)a1); 
 372              		.loc 1 133 9
 373              		.loc 1 133 28 is_stmt 0
 374 0154 97070000 		lla	a5,_ZN5StdIO7obufferE
 374      93870700 
 375 015c 83BA0700 		ld	s5,0(a5)
 376 0160 13FAF50F 		andi	s4,a1,0xff
 377              	.LVL12:
 378              	.LBB175:
 379              	.LBB176:
GAS LISTING /tmp/ccP4HCkU.s 			page 14


 380              		.file 4 "src/kernel/../../h/../h/../h/shared_buffer.hpp"
   1:src/kernel/../../h/../h/../h/shared_buffer.hpp **** #ifndef __shared_buffer__hpp
   2:src/kernel/../../h/../h/../h/shared_buffer.hpp **** #define __shared_buffer__hpp
   3:src/kernel/../../h/../h/../h/shared_buffer.hpp **** 
   4:src/kernel/../../h/../h/../h/shared_buffer.hpp **** #include"../h/ksemaphore.hpp"
   5:src/kernel/../../h/../h/../h/shared_buffer.hpp **** 
   6:src/kernel/../../h/../h/../h/shared_buffer.hpp **** template<typename T>
   7:src/kernel/../../h/../h/../h/shared_buffer.hpp **** class SharedBuffer{
   8:src/kernel/../../h/../h/../h/shared_buffer.hpp **** public:
   9:src/kernel/../../h/../h/../h/shared_buffer.hpp ****     static const int BUFFER_SIZE = 1024;
  10:src/kernel/../../h/../h/../h/shared_buffer.hpp **** private:
  11:src/kernel/../../h/../h/../h/shared_buffer.hpp ****     T buffer[BUFFER_SIZE];
  12:src/kernel/../../h/../h/../h/shared_buffer.hpp ****     KSemaphore mutex, itemAvailable, spaceAvailable; 
  13:src/kernel/../../h/../h/../h/shared_buffer.hpp ****     int head, tail;
  14:src/kernel/../../h/../h/../h/shared_buffer.hpp **** 
  15:src/kernel/../../h/../h/../h/shared_buffer.hpp **** public: 
  16:src/kernel/../../h/../h/../h/shared_buffer.hpp ****     int tmpLen;
  17:src/kernel/../../h/../h/../h/shared_buffer.hpp ****     #include"../h/kernel_operators.hpp"
  18:src/kernel/../../h/../h/../h/shared_buffer.hpp ****     SharedBuffer():mutex(1), itemAvailable(0), 
  19:src/kernel/../../h/../h/../h/shared_buffer.hpp ****     spaceAvailable(BUFFER_SIZE), head(0), tail(0), tmpLen(0){}
  20:src/kernel/../../h/../h/../h/shared_buffer.hpp **** 
  21:src/kernel/../../h/../h/../h/shared_buffer.hpp ****     void put(T c){
  22:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         spaceAvailable.wait();
 381              		.loc 4 22 28
 382 0164 13850A45 		addi	a0,s5,1104
 383              	.LVL13:
 384 0168 97000000 		call	_ZN10KSemaphore4waitEv
 384      E7800000 
 385              	.LVL14:
  23:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         mutex.wait();
 386              		.loc 4 23 19
 387 0170 138B0A40 		addi	s6,s5,1024
 388 0174 13050B00 		mv	a0,s6
 389 0178 97000000 		call	_ZN10KSemaphore4waitEv
 389      E7800000 
 390              	.LVL15:
  24:src/kernel/../../h/../h/../h/shared_buffer.hpp **** 
  25:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         tmpLen++;
 391              		.loc 4 25 9
 392 0180 83A70A48 		lw	a5,1152(s5)
 393 0184 9B871700 		addiw	a5,a5,1
 394 0188 23A0FA48 		sw	a5,1152(s5)
  26:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         buffer[tail]=c;
 395              		.loc 4 26 16
 396 018c 83A7CA47 		lw	a5,1148(s5)
 397              		.loc 4 26 9
 398 0190 3387FA00 		add	a4,s5,a5
 399 0194 23004701 		sb	s4,0(a4)
  27:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         tail=(tail+1)%BUFFER_SIZE;
 400              		.loc 4 27 19
 401 0198 9B871700 		addiw	a5,a5,1
 402              		.loc 4 27 22
 403 019c 1BD7F741 		sraiw	a4,a5,31
 404 01a0 1B576701 		srliw	a4,a4,22
 405 01a4 BB87E700 		addw	a5,a5,a4
 406 01a8 93F7F73F 		andi	a5,a5,1023
 407 01ac BB87E740 		subw	a5,a5,a4
GAS LISTING /tmp/ccP4HCkU.s 			page 15


 408              		.loc 4 27 9
 409 01b0 23AEFA46 		sw	a5,1148(s5)
  28:src/kernel/../../h/../h/../h/shared_buffer.hpp ****     
  29:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         itemAvailable.signal();
 410              		.loc 4 29 29
 411 01b4 13858A42 		addi	a0,s5,1064
 412 01b8 97000000 		call	_ZN10KSemaphore6signalEv
 412      E7800000 
 413              	.LVL16:
  30:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         mutex.signal();
 414              		.loc 4 30 21
 415 01c0 13050B00 		mv	a0,s6
 416 01c4 97000000 		call	_ZN10KSemaphore6signalEv
 416      E7800000 
 417              	.LVL17:
 418              	.LBE176:
 419              	.LBE175:
 420              	.LBE174:
 421              	.LBE183:
 422              	.LBE188:
 423              	.LBE200:
 424              	.LBE206:
 425              	.LBE214:
 426              	.LBE226:
 427              	.LBE239:
 428              	.LBE252:
 429              	.LBE266:
  58:src/kernel/interrupt_cpp.cpp **** 
 430              		.loc 1 58 68
 431 01cc 13850400 		mv	a0,s1
 432 01d0 6F008001 		j	.L7
 433              	.LVL18:
 434              	.L24:
 435              	.LBB267:
  62:src/kernel/interrupt_cpp.cpp ****     }
 436              		.loc 1 62 9 is_stmt 1
  62:src/kernel/interrupt_cpp.cpp ****     }
 437              		.loc 1 62 52 is_stmt 0
 438 01d4 97000000 		call	_ZN15MemoryAllocator11getInstanceEv
 438      E7800000 
 439              	.LVL19:
  62:src/kernel/interrupt_cpp.cpp ****     }
 440              		.loc 1 62 63
 441 01dc 93050A00 		mv	a1,s4
 442 01e0 97000000 		call	_ZN15MemoryAllocator9mem_allocEm
 442      E7800000 
 443              	.LVL20:
 444              	.L7:
 445              	.LBE267:
 134:src/kernel/interrupt_cpp.cpp ****     }
 135:src/kernel/interrupt_cpp.cpp ****     Riscv::w_sstatus(sstatus);
 446              		.loc 1 135 5 is_stmt 1
 447              	.LBB268:
 448              	.LBB269:
 164:src/kernel/../../h/../h/riscv.hpp **** }
 449              		.loc 3 164 5
 164:src/kernel/../../h/../h/riscv.hpp **** }
GAS LISTING /tmp/ccP4HCkU.s 			page 16


 450              		.loc 3 164 55 is_stmt 0
 451              	 #APP
 452              	# 164 "src/kernel/../../h/../h/riscv.hpp" 1
 453              		csrw sstatus, s3
 454              	# 0 "" 2
 455              	.LVL21:
 456              	 #NO_APP
 457              	.LBE269:
 458              	.LBE268:
 136:src/kernel/interrupt_cpp.cpp ****     Riscv::w_sepc(sepc);
 459              		.loc 1 136 5 is_stmt 1
 460              	.LBB270:
 461              	.LBB271:
 108:src/kernel/../../h/../h/riscv.hpp **** }
 462              		.loc 3 108 5
 108:src/kernel/../../h/../h/riscv.hpp **** }
 463              		.loc 3 108 49 is_stmt 0
 464              	 #APP
 465              	# 108 "src/kernel/../../h/../h/riscv.hpp" 1
 466              		csrw sepc, s2
 467              	# 0 "" 2
 468              	.LVL22:
 469              	 #NO_APP
 470              	.LBE271:
 471              	.LBE270:
 137:src/kernel/interrupt_cpp.cpp ****     return ret;
 472              		.loc 1 137 5 is_stmt 1
 138:src/kernel/interrupt_cpp.cpp **** }
 473              		.loc 1 138 1 is_stmt 0
 474 01f0 83308104 		ld	ra,72(sp)
 475              		.cfi_remember_state
 476              		.cfi_restore 1
 477 01f4 03340104 		ld	s0,64(sp)
 478              		.cfi_restore 8
 479              		.cfi_def_cfa 2, 80
 480 01f8 83348103 		ld	s1,56(sp)
 481              		.cfi_restore 9
 482 01fc 03390103 		ld	s2,48(sp)
 483              		.cfi_restore 18
 484              	.LVL23:
 485 0200 83398102 		ld	s3,40(sp)
 486              		.cfi_restore 19
 487              	.LVL24:
 488 0204 033A0102 		ld	s4,32(sp)
 489              		.cfi_restore 20
 490 0208 833A8101 		ld	s5,24(sp)
 491              		.cfi_restore 21
 492 020c 033B0101 		ld	s6,16(sp)
 493              		.cfi_restore 22
 494 0210 13010105 		addi	sp,sp,80
 495              		.cfi_def_cfa_offset 0
 496 0214 67800000 		jr	ra
 497              	.LVL25:
 498              	.L25:
 499              		.cfi_restore_state
 500              	.LBB272:
 501              	.LBB253:
GAS LISTING /tmp/ccP4HCkU.s 			page 17


  67:src/kernel/interrupt_cpp.cpp **** 
 502              		.loc 1 67 9 is_stmt 1
  67:src/kernel/interrupt_cpp.cpp **** 
 503              		.loc 1 67 52 is_stmt 0
 504 0218 97000000 		call	_ZN15MemoryAllocator11getInstanceEv
 504      E7800000 
 505              	.LVL26:
  67:src/kernel/interrupt_cpp.cpp **** 
 506              		.loc 1 67 62
 507 0220 93050A00 		mv	a1,s4
 508 0224 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv
 508      E7800000 
 509              	.LVL27:
 510 022c 6FF0DFFB 		j	.L7
 511              	.LVL28:
 512              	.L26:
 513              	.LBB240:
 514              	.LBB227:
  73:src/kernel/interrupt_cpp.cpp ****         *t = (uint64)TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 515              		.loc 1 73 9 is_stmt 1
  74:src/kernel/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
 516              		.loc 1 74 9
  74:src/kernel/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
 517              		.loc 1 74 39 is_stmt 0
 518 0230 13060700 		mv	a2,a4
 519              	.LVL29:
 520 0234 93850600 		mv	a1,a3
 521              	.LVL30:
 522 0238 13850A00 		mv	a0,s5
 523 023c 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm
 523      E7800000 
 524              	.LVL31:
  74:src/kernel/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
 525              		.loc 1 74 12
 526 0244 2330AA00 		sd	a0,0(s4)
  75:src/kernel/interrupt_cpp.cpp ****         else ret = 0;
 527              		.loc 1 75 9 is_stmt 1
 528 0248 63060500 		beq	a0,zero,.L36
  76:src/kernel/interrupt_cpp.cpp ****     }
 529              		.loc 1 76 18 is_stmt 0
 530 024c 13050000 		li	a0,0
 531 0250 6FF09FF9 		j	.L7
 532              	.L36:
  75:src/kernel/interrupt_cpp.cpp ****         else ret = 0;
 533              		.loc 1 75 23
 534 0254 1305C0FF 		li	a0,-4
 535 0258 6FF01FF9 		j	.L7
 536              	.LVL32:
 537              	.L27:
 538              	.LBE227:
 539              	.LBB228:
  81:src/kernel/interrupt_cpp.cpp ****         TCB::dispatch();
 540              		.loc 1 81 9 is_stmt 1
  81:src/kernel/interrupt_cpp.cpp ****         TCB::dispatch();
 541              		.loc 1 81 29 is_stmt 0
 542 025c 97070000 		lla	a5,_ZN3TCB7runningE
 542      93870700 
GAS LISTING /tmp/ccP4HCkU.s 			page 18


 543 0264 83B70700 		ld	a5,0(a5)
 544              	.LVL33:
 545              	.LBB215:
 546              	.LBB216:
  30:src/kernel/../../h/../h/tcb.hpp ****     bool isFinished(){ return state == FINISHED; }
 547              		.loc 2 30 21 is_stmt 1
  30:src/kernel/../../h/../h/tcb.hpp ****     bool isFinished(){ return state == FINISHED; }
 548              		.loc 2 30 27 is_stmt 0
 549 0268 13072000 		li	a4,2
 550              	.LVL34:
 551 026c 23A8E702 		sw	a4,48(a5)
 552              	.LVL35:
 553              	.LBE216:
 554              	.LBE215:
  82:src/kernel/interrupt_cpp.cpp ****     }
 555              		.loc 1 82 9 is_stmt 1
  82:src/kernel/interrupt_cpp.cpp ****     }
 556              		.loc 1 82 22 is_stmt 0
 557 0270 97000000 		call	_ZN3TCB8dispatchEv
 557      E7800000 
 558              	.LVL36:
 559              	.LBE228:
 560              	.LBE240:
 561              	.LBE253:
 562              	.LBE272:
  58:src/kernel/interrupt_cpp.cpp **** 
 563              		.loc 1 58 68
 564 0278 13850400 		mv	a0,s1
 565              	.LBB273:
 566              	.LBB254:
 567              	.LBB241:
 568              	.LBB229:
 569 027c 6FF0DFF6 		j	.L7
 570              	.LVL37:
 571              	.L28:
 572              	.LBB217:
  87:src/kernel/interrupt_cpp.cpp ****         TCB::yield();
 573              		.loc 1 87 9 is_stmt 1
  87:src/kernel/interrupt_cpp.cpp ****         TCB::yield();
 574              		.loc 1 87 31 is_stmt 0
 575 0280 97070000 		sd	zero,_ZN3TCB16timeSliceCounterE,a5
 575      23B00700 
  88:src/kernel/interrupt_cpp.cpp ****     }
 576              		.loc 1 88 9 is_stmt 1
  88:src/kernel/interrupt_cpp.cpp ****     }
 577              		.loc 1 88 19 is_stmt 0
 578 0288 97000000 		call	_ZN3TCB5yieldEv
 578      E7800000 
 579              	.LVL38:
 580              	.LBE217:
 581              	.LBE229:
 582              	.LBE241:
 583              	.LBE254:
 584              	.LBE273:
  58:src/kernel/interrupt_cpp.cpp **** 
 585              		.loc 1 58 68
 586 0290 13850400 		mv	a0,s1
GAS LISTING /tmp/ccP4HCkU.s 			page 19


 587              	.LBB274:
 588              	.LBB255:
 589              	.LBB242:
 590              	.LBB230:
 591              	.LBB218:
 592 0294 6FF05FF5 		j	.L7
 593              	.LVL39:
 594              	.L29:
 595              	.LBB207:
  93:src/kernel/interrupt_cpp.cpp ****     }
 596              		.loc 1 93 9 is_stmt 1
  93:src/kernel/interrupt_cpp.cpp ****     }
 597              		.loc 1 93 26 is_stmt 0
 598 0298 13850500 		mv	a0,a1
 599 029c 97000000 		call	_ZN3TCB12deleteThreadEPS_
 599      E7800000 
 600              	.LVL40:
 601              	.LBE207:
 602              	.LBE218:
 603              	.LBE230:
 604              	.LBE242:
 605              	.LBE255:
 606              	.LBE274:
  58:src/kernel/interrupt_cpp.cpp **** 
 607              		.loc 1 58 68
 608 02a4 13850400 		mv	a0,s1
 609              	.LBB275:
 610              	.LBB256:
 611              	.LBB243:
 612              	.LBB231:
 613              	.LBB219:
 614              	.LBB208:
 615 02a8 6FF01FF4 		j	.L7
 616              	.LVL41:
 617              	.L30:
 618              	.LBB201:
 619              	.LBB189:
  97:src/kernel/interrupt_cpp.cpp ****         *t = (uint64)(new KSemaphore(a2));
 620              		.loc 1 97 9 is_stmt 1
  98:src/kernel/interrupt_cpp.cpp ****         if(!(*t)) ret = -2;
 621              		.loc 1 98 9
 622              	.LBB190:
 623              	.LBB191:
 624              		.file 5 "src/kernel/../../h/../h/../h/kernel_operators.hpp"
   1:src/kernel/../../h/../h/../h/kernel_operators.hpp **** void* operator new(size_t sz){return MemoryAllocator::getInstance().mem_alloc((sz-1)/MEM_BLOCK_SIZE
 625              		.loc 5 1 31
 626              		.loc 5 1 67 is_stmt 0
 627 02ac 97000000 		call	_ZN15MemoryAllocator11getInstanceEv
 627      E7800000 
 628              	.LVL42:
 629              		.loc 5 1 78
 630 02b4 93051000 		li	a1,1
 631 02b8 97000000 		call	_ZN15MemoryAllocator9mem_allocEm
 631      E7800000 
 632              	.LVL43:
 633              	.LBE191:
 634              	.LBE190:
GAS LISTING /tmp/ccP4HCkU.s 			page 20


 635              	.LBB192:
 636              	.LBB193:
 637              		.file 6 "src/kernel/../../h/../h/ksemaphore.hpp"
   1:src/kernel/../../h/../h/ksemaphore.hpp **** #ifndef __semaphore__
   2:src/kernel/../../h/../h/ksemaphore.hpp **** #define __semaphore__
   3:src/kernel/../../h/../h/ksemaphore.hpp **** 
   4:src/kernel/../../h/../h/ksemaphore.hpp **** #include"../h/ptr_queue.hpp"
   5:src/kernel/../../h/../h/ksemaphore.hpp **** class KSemaphore
   6:src/kernel/../../h/../h/ksemaphore.hpp **** {
   7:src/kernel/../../h/../h/ksemaphore.hpp **** public:
   8:src/kernel/../../h/../h/ksemaphore.hpp ****     #include"../h/kernel_operators.hpp"
   9:src/kernel/../../h/../h/ksemaphore.hpp ****     KSemaphore(unsigned val):val(val)
 638              		.loc 6 9 37
 639 02c0 23245501 		sw	s5,8(a0)
 640              	.LVL44:
 641              	.LBB194:
 642              	.LBB195:
 643              		.file 7 "src/kernel/../../h/../h/ptr_queue.hpp"
   1:src/kernel/../../h/../h/ptr_queue.hpp **** #ifndef _queue_h
   2:src/kernel/../../h/../h/ptr_queue.hpp **** #define _queue_h
   3:src/kernel/../../h/../h/ptr_queue.hpp **** 
   4:src/kernel/../../h/../h/ptr_queue.hpp **** //#include"../h/tcb.hpp"
   5:src/kernel/../../h/../h/ptr_queue.hpp **** //#include"../h/testing.hpp"
   6:src/kernel/../../h/../h/ptr_queue.hpp **** #include"../lib/hw.h"
   7:src/kernel/../../h/../h/ptr_queue.hpp **** #include"../h/memory_allocator.hpp"
   8:src/kernel/../../h/../h/ptr_queue.hpp **** 
   9:src/kernel/../../h/../h/ptr_queue.hpp **** class TCB;
  10:src/kernel/../../h/../h/ptr_queue.hpp **** 
  11:src/kernel/../../h/../h/ptr_queue.hpp **** class TcbQueue{
  12:src/kernel/../../h/../h/ptr_queue.hpp ****        
  13:src/kernel/../../h/../h/ptr_queue.hpp ****     TCB *head, *tail;
  14:src/kernel/../../h/../h/ptr_queue.hpp ****     int tmpNum;
  15:src/kernel/../../h/../h/ptr_queue.hpp ****     void brisi(){
  16:src/kernel/../../h/../h/ptr_queue.hpp ****         while(!isEmpty())
  17:src/kernel/../../h/../h/ptr_queue.hpp ****             remove();
  18:src/kernel/../../h/../h/ptr_queue.hpp ****     }
  19:src/kernel/../../h/../h/ptr_queue.hpp **** 
  20:src/kernel/../../h/../h/ptr_queue.hpp **** public:
  21:src/kernel/../../h/../h/ptr_queue.hpp ****     #include"../h/kernel_operators.hpp"
  22:src/kernel/../../h/../h/ptr_queue.hpp ****     TcbQueue():head(nullptr), tail(nullptr), tmpNum(0){}
 644              		.loc 7 22 54
 645 02c4 23380500 		sd	zero,16(a0)
 646 02c8 233C0500 		sd	zero,24(a0)
 647 02cc 23200502 		sw	zero,32(a0)
 648              	.LVL45:
 649              	.LBE195:
 650              	.LBE194:
  10:src/kernel/../../h/../h/ksemaphore.hpp ****     {
  11:src/kernel/../../h/../h/ksemaphore.hpp ****         next = activeSemaphores;
 651              		.loc 6 11 9 is_stmt 1
 652              		.loc 6 11 14 is_stmt 0
 653 02d0 97070000 		lla	a5,_ZN10KSemaphore16activeSemaphoresE
 653      93870700 
 654 02d8 03B70700 		ld	a4,0(a5)
 655 02dc 2330E500 		sd	a4,0(a0)
  12:src/kernel/../../h/../h/ksemaphore.hpp ****         activeSemaphores = this;
 656              		.loc 6 12 9 is_stmt 1
GAS LISTING /tmp/ccP4HCkU.s 			page 21


 657              		.loc 6 12 26 is_stmt 0
 658 02e0 23B0A700 		sd	a0,0(a5)
 659              	.LVL46:
 660              	.LBE193:
 661              	.LBE192:
  98:src/kernel/interrupt_cpp.cpp ****         if(!(*t)) ret = -2;
 662              		.loc 1 98 12
 663 02e4 2330AA00 		sd	a0,0(s4)
  99:src/kernel/interrupt_cpp.cpp ****         else ret = 0;
 664              		.loc 1 99 9 is_stmt 1
 100:src/kernel/interrupt_cpp.cpp ****     }
 665              		.loc 1 100 14
 666              	.LVL47:
 100:src/kernel/interrupt_cpp.cpp ****     }
 667              		.loc 1 100 18 is_stmt 0
 668 02e8 13050000 		li	a0,0
 669 02ec 6FF0DFEF 		j	.L7
 670              	.LVL48:
 671              	.L31:
 672              	.LBE189:
 673              	.LBB196:
 674              	.LBB184:
 104:src/kernel/interrupt_cpp.cpp ****         ret = KSemaphore::close(t);
 675              		.loc 1 104 9 is_stmt 1
 105:src/kernel/interrupt_cpp.cpp ****     }
 676              		.loc 1 105 9
 105:src/kernel/interrupt_cpp.cpp ****     }
 677              		.loc 1 105 32 is_stmt 0
 678 02f0 13850500 		mv	a0,a1
 679 02f4 97000000 		call	_ZN10KSemaphore5closeEPS_
 679      E7800000 
 680              	.LVL49:
 681              	.LBE184:
 682 02fc 6FF0DFEE 		j	.L7
 683              	.LVL50:
 684              	.L32:
 685              	.LBB185:
 686              	.LBB180:
 109:src/kernel/interrupt_cpp.cpp ****         if(KSemaphore::exists(t))
 687              		.loc 1 109 9 is_stmt 1
 110:src/kernel/interrupt_cpp.cpp ****             ret = t->wait();
 688              		.loc 1 110 9
 110:src/kernel/interrupt_cpp.cpp ****             ret = t->wait();
 689              		.loc 1 110 30 is_stmt 0
 690 0300 13850500 		mv	a0,a1
 691 0304 97000000 		call	_ZN10KSemaphore6existsEPS_
 691      E7800000 
 692              	.LVL51:
 110:src/kernel/interrupt_cpp.cpp ****             ret = t->wait();
 693              		.loc 1 110 9
 694 030c 63160500 		bne	a0,zero,.L37
 113:src/kernel/interrupt_cpp.cpp ****     }
 695              		.loc 1 113 17
 696 0310 1305F0FF 		li	a0,-1
 697 0314 6FF05FED 		j	.L7
 698              	.L37:
 111:src/kernel/interrupt_cpp.cpp ****         else
GAS LISTING /tmp/ccP4HCkU.s 			page 22


 699              		.loc 1 111 13 is_stmt 1
 111:src/kernel/interrupt_cpp.cpp ****         else
 700              		.loc 1 111 26 is_stmt 0
 701 0318 13050A00 		mv	a0,s4
 702 031c 97000000 		call	_ZN10KSemaphore4waitEv
 702      E7800000 
 703              	.LVL52:
 704 0324 6FF05FEC 		j	.L7
 705              	.LVL53:
 706              	.L33:
 707              	.LBE180:
 708              	.LBB181:
 709              	.LBB177:
 117:src/kernel/interrupt_cpp.cpp ****         if(KSemaphore::exists(t))
 710              		.loc 1 117 9 is_stmt 1
 118:src/kernel/interrupt_cpp.cpp ****             ret = t->signal();
 711              		.loc 1 118 9
 118:src/kernel/interrupt_cpp.cpp ****             ret = t->signal();
 712              		.loc 1 118 30 is_stmt 0
 713 0328 13850500 		mv	a0,a1
 714 032c 97000000 		call	_ZN10KSemaphore6existsEPS_
 714      E7800000 
 715              	.LVL54:
 118:src/kernel/interrupt_cpp.cpp ****             ret = t->signal();
 716              		.loc 1 118 9
 717 0334 63160500 		bne	a0,zero,.L38
 121:src/kernel/interrupt_cpp.cpp ****     }
 718              		.loc 1 121 17
 719 0338 1305F0FF 		li	a0,-1
 720 033c 6FF0DFEA 		j	.L7
 721              	.L38:
 119:src/kernel/interrupt_cpp.cpp ****         else
 722              		.loc 1 119 13 is_stmt 1
 119:src/kernel/interrupt_cpp.cpp ****         else
 723              		.loc 1 119 28 is_stmt 0
 724 0340 13050A00 		mv	a0,s4
 725 0344 97000000 		call	_ZN10KSemaphore6signalEv
 725      E7800000 
 726              	.LVL55:
 727 034c 6FF0DFE9 		j	.L7
 728              	.LVL56:
 729              	.L34:
 730              	.LBE177:
 125:src/kernel/interrupt_cpp.cpp ****     }
 731              		.loc 1 125 9 is_stmt 1
 125:src/kernel/interrupt_cpp.cpp ****     }
 732              		.loc 1 125 19 is_stmt 0
 733 0350 13850500 		mv	a0,a1
 734 0354 97000000 		call	_ZN3TCB5sleepEm
 734      E7800000 
 735              	.LVL57:
 736              	.LBE181:
 737              	.LBE185:
 738              	.LBE196:
 739              	.LBE201:
 740              	.LBE208:
 741              	.LBE219:
GAS LISTING /tmp/ccP4HCkU.s 			page 23


 742              	.LBE231:
 743              	.LBE243:
 744              	.LBE256:
 745              	.LBE275:
  58:src/kernel/interrupt_cpp.cpp **** 
 746              		.loc 1 58 68
 747 035c 13850400 		mv	a0,s1
 748              	.LBB276:
 749              	.LBB257:
 750              	.LBB244:
 751              	.LBB232:
 752              	.LBB220:
 753              	.LBB209:
 754              	.LBB202:
 755              	.LBB197:
 756              	.LBB186:
 757              	.LBB182:
 758 0360 6FF09FE8 		j	.L7
 759              	.LVL58:
 760              	.L35:
 129:src/kernel/interrupt_cpp.cpp ****     }
 761              		.loc 1 129 9 is_stmt 1
 129:src/kernel/interrupt_cpp.cpp ****     }
 762              		.loc 1 129 34 is_stmt 0
 763 0364 97070000 		lla	a5,_ZN5StdIO7ibufferE
 763      93870700 
 764 036c 03BA0700 		ld	s4,0(a5)
 765              	.LVL59:
 766              	.LBB178:
 767              	.LBB179:
  31:src/kernel/../../h/../h/../h/shared_buffer.hpp ****     }
  32:src/kernel/../../h/../h/../h/shared_buffer.hpp **** 
  33:src/kernel/../../h/../h/../h/shared_buffer.hpp ****     T get(){
  34:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         itemAvailable.wait();
 768              		.loc 4 34 27
 769 0370 13058A42 		addi	a0,s4,1064
 770 0374 97000000 		call	_ZN10KSemaphore4waitEv
 770      E7800000 
 771              	.LVL60:
  35:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         mutex.wait();
 772              		.loc 4 35 19
 773 037c 930A0A40 		addi	s5,s4,1024
 774              	.LVL61:
 775 0380 13850A00 		mv	a0,s5
 776 0384 97000000 		call	_ZN10KSemaphore4waitEv
 776      E7800000 
 777              	.LVL62:
  36:src/kernel/../../h/../h/../h/shared_buffer.hpp **** 
  37:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         tmpLen--;
 778              		.loc 4 37 9
 779 038c 83270A48 		lw	a5,1152(s4)
 780 0390 9B87F7FF 		addiw	a5,a5,-1
 781 0394 2320FA48 		sw	a5,1152(s4)
  38:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         T r = buffer[head];
 782              		.loc 4 38 22
 783 0398 83278A47 		lw	a5,1144(s4)
 784              		.loc 4 38 11
GAS LISTING /tmp/ccP4HCkU.s 			page 24


 785 039c 3307FA00 		add	a4,s4,a5
 786 03a0 83440700 		lbu	s1,0(a4)
 787              	.LVL63:
  39:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         head = (head+1)%BUFFER_SIZE;
 788              		.loc 4 39 21
 789 03a4 9B871700 		addiw	a5,a5,1
 790              		.loc 4 39 24
 791 03a8 1BD7F741 		sraiw	a4,a5,31
 792 03ac 1B576701 		srliw	a4,a4,22
 793 03b0 BB87E700 		addw	a5,a5,a4
 794 03b4 93F7F73F 		andi	a5,a5,1023
 795 03b8 BB87E740 		subw	a5,a5,a4
 796              		.loc 4 39 9
 797 03bc 232CFA46 		sw	a5,1144(s4)
  40:src/kernel/../../h/../h/../h/shared_buffer.hpp **** 
  41:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         spaceAvailable.signal();
 798              		.loc 4 41 30
 799 03c0 13050A45 		addi	a0,s4,1104
 800 03c4 97000000 		call	_ZN10KSemaphore6signalEv
 800      E7800000 
 801              	.LVL64:
  42:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         mutex.signal();
 802              		.loc 4 42 21
 803 03cc 13850A00 		mv	a0,s5
 804 03d0 97000000 		call	_ZN10KSemaphore6signalEv
 804      E7800000 
 805              	.LVL65:
 806              	.LBE179:
 807              	.LBE178:
 129:src/kernel/interrupt_cpp.cpp ****     }
 808              		.loc 1 129 13
 809 03d8 13850400 		mv	a0,s1
 810              	.LVL66:
 811 03dc 6FF0DFE0 		j	.L7
 812              	.LBE182:
 813              	.LBE186:
 814              	.LBE197:
 815              	.LBE202:
 816              	.LBE209:
 817              	.LBE220:
 818              	.LBE232:
 819              	.LBE244:
 820              	.LBE257:
 821              	.LBE276:
 822              		.cfi_endproc
 823              	.LFE92:
 825              		.align	2
 826              		.globl	_Z8sysEcallmmmmm
 828              	_Z8sysEcallmmmmm:
 829              	.LFB93:
 139:src/kernel/interrupt_cpp.cpp **** 
 140:src/kernel/interrupt_cpp.cpp **** uint64 sysEcall(uint64 a0, uint64 a1, uint64 a2, uint64 a3, uint64 a4)
 141:src/kernel/interrupt_cpp.cpp **** {    
 830              		.loc 1 141 1 is_stmt 1
 831              		.cfi_startproc
 832              	.LVL67:
 833 03e0 130101FB 		addi	sp,sp,-80
GAS LISTING /tmp/ccP4HCkU.s 			page 25


 834              		.cfi_def_cfa_offset 80
 835 03e4 23341104 		sd	ra,72(sp)
 836 03e8 23308104 		sd	s0,64(sp)
 837 03ec 233C9102 		sd	s1,56(sp)
 838 03f0 23382103 		sd	s2,48(sp)
 839 03f4 23343103 		sd	s3,40(sp)
 840 03f8 23304103 		sd	s4,32(sp)
 841 03fc 233C5101 		sd	s5,24(sp)
 842              		.cfi_offset 1, -8
 843              		.cfi_offset 8, -16
 844              		.cfi_offset 9, -24
 845              		.cfi_offset 18, -32
 846              		.cfi_offset 19, -40
 847              		.cfi_offset 20, -48
 848              		.cfi_offset 21, -56
 849 0400 13040105 		addi	s0,sp,80
 850              		.cfi_def_cfa 8, 0
 851 0404 93890500 		mv	s3,a1
 142:src/kernel/interrupt_cpp.cpp ****     uint64 sepc = Riscv::r_sepc()+4, sstatus = Riscv::r_sstatus(), ret = a0;
 852              		.loc 1 142 5
 853              	.LBB322:
 854              	.LBB323:
 112:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sepc" : "=r" (sepc));
 855              		.loc 3 112 5
 113:src/kernel/../../h/../h/riscv.hpp ****     return sepc;
 856              		.loc 3 113 5
 113:src/kernel/../../h/../h/riscv.hpp ****     return sepc;
 857              		.loc 3 113 48 is_stmt 0
 858              	 #APP
 859              	# 113 "src/kernel/../../h/../h/riscv.hpp" 1
 860              		csrr a5, sepc
 861              	# 0 "" 2
 862              	 #NO_APP
 863 040c 233CF4FA 		sd	a5,-72(s0)
 114:src/kernel/../../h/../h/riscv.hpp **** } 
 864              		.loc 3 114 5 is_stmt 1
 114:src/kernel/../../h/../h/riscv.hpp **** } 
 865              		.loc 3 114 12 is_stmt 0
 866 0410 033984FB 		ld	s2,-72(s0)
 867              	.LBE323:
 868              	.LBE322:
 869              		.loc 1 142 35
 870 0414 13094900 		addi	s2,s2,4
 871              	.LVL68:
 872              	.LBB324:
 873              	.LBB325:
 168:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sstatus" : "=r" (sstatus));
 874              		.loc 3 168 5 is_stmt 1
 169:src/kernel/../../h/../h/riscv.hpp ****     return sstatus;
 875              		.loc 3 169 5
 169:src/kernel/../../h/../h/riscv.hpp ****     return sstatus;
 876              		.loc 3 169 54 is_stmt 0
 877              	 #APP
 878              	# 169 "src/kernel/../../h/../h/riscv.hpp" 1
 879              		csrr a5, sstatus
 880              	# 0 "" 2
 881              	 #NO_APP
GAS LISTING /tmp/ccP4HCkU.s 			page 26


 882 041c 2338F4FA 		sd	a5,-80(s0)
 883              		.loc 3 170 5 is_stmt 1
 884              		.loc 3 170 12 is_stmt 0
 885 0420 033A04FB 		ld	s4,-80(s0)
 886              	.LVL69:
 887              	.LBE325:
 888              	.LBE324:
 143:src/kernel/interrupt_cpp.cpp ****     
 144:src/kernel/interrupt_cpp.cpp ****     if(a0 == MA){
 889              		.loc 1 144 5 is_stmt 1
 890              	.LBB326:
 891 0424 93071000 		li	a5,1
 892 0428 6306F50E 		beq	a0,a5,.L57
 893 042c 93040500 		mv	s1,a0
 894 0430 930A0600 		mv	s5,a2
 895              	.LBE326:
 145:src/kernel/interrupt_cpp.cpp ****         //mem_alloc
 146:src/kernel/interrupt_cpp.cpp ****         ret = (uint64)MemoryAllocator::getInstance().mem_alloc(a1);    
 147:src/kernel/interrupt_cpp.cpp ****     }
 148:src/kernel/interrupt_cpp.cpp ****     else if(a0 == MF)
 896              		.loc 1 148 10
 897              	.LBB451:
 898              	.LBB327:
 899 0434 93072000 		li	a5,2
 900 0438 630CF510 		beq	a0,a5,.L58
 901              	.LBE327:
 902              	.LBE451:
 149:src/kernel/interrupt_cpp.cpp ****     {
 150:src/kernel/interrupt_cpp.cpp ****         //mem_free
 151:src/kernel/interrupt_cpp.cpp ****         ret = (uint64)MemoryAllocator::getInstance().mem_free((void*)a1);
 152:src/kernel/interrupt_cpp.cpp ****     
 153:src/kernel/interrupt_cpp.cpp ****     }
 154:src/kernel/interrupt_cpp.cpp ****     else if(a0 == TC)
 903              		.loc 1 154 10
 904              	.LBB452:
 905              	.LBB435:
 906              	.LBB328:
 907 043c 93071001 		li	a5,17
 908 0440 6304F512 		beq	a0,a5,.L59
 909              	.LBE328:
 910              	.LBE435:
 911              	.LBE452:
 155:src/kernel/interrupt_cpp.cpp ****     {
 156:src/kernel/interrupt_cpp.cpp ****         //thread_create
 157:src/kernel/interrupt_cpp.cpp ****         uint64* t = (uint64*)a1;
 158:src/kernel/interrupt_cpp.cpp ****         *t = (uint64)TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4); 
 159:src/kernel/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
 160:src/kernel/interrupt_cpp.cpp ****         else ret = 0;
 161:src/kernel/interrupt_cpp.cpp ****     }
 162:src/kernel/interrupt_cpp.cpp ****     else if(a0 == TE)
 912              		.loc 1 162 10
 913              	.LBB453:
 914              	.LBB436:
 915              	.LBB420:
 916              	.LBB329:
 917 0444 93072001 		li	a5,18
 918 0448 6306F514 		beq	a0,a5,.L60
GAS LISTING /tmp/ccP4HCkU.s 			page 27


 919              	.LBE329:
 920              	.LBE420:
 921              	.LBE436:
 922              	.LBE453:
 163:src/kernel/interrupt_cpp.cpp ****     {
 164:src/kernel/interrupt_cpp.cpp ****         //thread_exit
 165:src/kernel/interrupt_cpp.cpp ****         TCB::running->finish();
 166:src/kernel/interrupt_cpp.cpp ****         TCB::dispatch();
 167:src/kernel/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 168:src/kernel/interrupt_cpp.cpp ****     }
 169:src/kernel/interrupt_cpp.cpp ****     else if(a0 == TD)
 923              		.loc 1 169 10
 924              	.LBB454:
 925              	.LBB437:
 926              	.LBB421:
 927              	.LBB405:
 928              	.LBB330:
 929 044c 93073001 		li	a5,19
 930 0450 6306F516 		beq	a0,a5,.L61
 931              	.LBE330:
 932              	.LBE405:
 933              	.LBE421:
 934              	.LBE437:
 935              	.LBE454:
 170:src/kernel/interrupt_cpp.cpp ****     {
 171:src/kernel/interrupt_cpp.cpp ****         //thread_dispatch
 172:src/kernel/interrupt_cpp.cpp ****         TCB::timeSliceCounter = 0; 
 173:src/kernel/interrupt_cpp.cpp ****         TCB::yield();
 174:src/kernel/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 175:src/kernel/interrupt_cpp.cpp ****     }
 176:src/kernel/interrupt_cpp.cpp ****     else if(a0 == DTH)
 936              		.loc 1 176 10
 937              	.LBB455:
 938              	.LBB438:
 939              	.LBB422:
 940              	.LBB406:
 941              	.LBB389:
 942              	.LBB331:
 943 0454 93079006 		li	a5,105
 944 0458 6300F518 		beq	a0,a5,.L62
 945              	.LBE331:
 946              	.LBE389:
 947              	.LBE406:
 948              	.LBE422:
 949              	.LBE438:
 950              	.LBE455:
 177:src/kernel/interrupt_cpp.cpp ****     {
 178:src/kernel/interrupt_cpp.cpp ****         //delete thread handle
 179:src/kernel/interrupt_cpp.cpp ****         TCB::deleteThread((TCB*)a1);
 180:src/kernel/interrupt_cpp.cpp ****     }
 181:src/kernel/interrupt_cpp.cpp ****     else if(a0 == SO)
 951              		.loc 1 181 10
 952              	.LBB456:
 953              	.LBB439:
 954              	.LBB423:
 955              	.LBB407:
 956              	.LBB390:
GAS LISTING /tmp/ccP4HCkU.s 			page 28


 957              	.LBB377:
 958              	.LBB332:
 959 045c 93071002 		li	a5,33
 960 0460 6306F518 		beq	a0,a5,.L63
 961              	.LBE332:
 962              	.LBE377:
 963              	.LBE390:
 964              	.LBE407:
 965              	.LBE423:
 966              	.LBE439:
 967              	.LBE456:
 182:src/kernel/interrupt_cpp.cpp ****     {
 183:src/kernel/interrupt_cpp.cpp ****         uint64* t = (uint64*)a1;
 184:src/kernel/interrupt_cpp.cpp ****         *t = (uint64)(new KSemaphore(a2));
 185:src/kernel/interrupt_cpp.cpp ****     }
 186:src/kernel/interrupt_cpp.cpp ****     else if(a0 == SC)
 968              		.loc 1 186 10
 969              	.LBB457:
 970              	.LBB440:
 971              	.LBB424:
 972              	.LBB408:
 973              	.LBB391:
 974              	.LBB378:
 975              	.LBB369:
 976              	.LBB333:
 977 0464 93072002 		li	a5,34
 978 0468 6304F51C 		beq	a0,a5,.L64
 979              	.LBE333:
 980              	.LBE369:
 981              	.LBE378:
 982              	.LBE391:
 983              	.LBE408:
 984              	.LBE424:
 985              	.LBE440:
 986              	.LBE457:
 187:src/kernel/interrupt_cpp.cpp ****     {
 188:src/kernel/interrupt_cpp.cpp ****         KSemaphore* t = (KSemaphore*)a1;
 189:src/kernel/interrupt_cpp.cpp ****         delete t;
 190:src/kernel/interrupt_cpp.cpp ****     }
 191:src/kernel/interrupt_cpp.cpp ****     else if(a0 == SW)
 987              		.loc 1 191 10
 988              	.LBB458:
 989              	.LBB441:
 990              	.LBB425:
 991              	.LBB409:
 992              	.LBB392:
 993              	.LBB379:
 994              	.LBB370:
 995              	.LBB356:
 996              	.LBB334:
 997 046c 93073002 		li	a5,35
 998 0470 6306F51E 		beq	a0,a5,.L65
 999              	.LBE334:
 1000              	.LBE356:
 1001              	.LBE370:
 1002              	.LBE379:
 1003              	.LBE392:
GAS LISTING /tmp/ccP4HCkU.s 			page 29


 1004              	.LBE409:
 1005              	.LBE425:
 1006              	.LBE441:
 1007              	.LBE458:
 192:src/kernel/interrupt_cpp.cpp ****     {
 193:src/kernel/interrupt_cpp.cpp ****         KSemaphore* t = (KSemaphore*)a1;
 194:src/kernel/interrupt_cpp.cpp ****         ret = t->wait();
 195:src/kernel/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 196:src/kernel/interrupt_cpp.cpp ****     }
 197:src/kernel/interrupt_cpp.cpp ****     else if(a0 == SS)
 1008              		.loc 1 197 10
 1009              	.LBB459:
 1010              	.LBB442:
 1011              	.LBB426:
 1012              	.LBB410:
 1013              	.LBB393:
 1014              	.LBB380:
 1015              	.LBB371:
 1016              	.LBB357:
 1017              	.LBB349:
 1018              	.LBB335:
 1019 0474 93074002 		li	a5,36
 1020 0478 630CF51E 		beq	a0,a5,.L66
 198:src/kernel/interrupt_cpp.cpp ****     {
 199:src/kernel/interrupt_cpp.cpp ****         KSemaphore* t = (KSemaphore*)a1;
 200:src/kernel/interrupt_cpp.cpp ****         t->signal();
 201:src/kernel/interrupt_cpp.cpp ****     }
 202:src/kernel/interrupt_cpp.cpp ****     else if(a0 == TS)
 1021              		.loc 1 202 10
 1022 047c 93071003 		li	a5,49
 1023 0480 6302F520 		beq	a0,a5,.L67
 203:src/kernel/interrupt_cpp.cpp ****     {      
 204:src/kernel/interrupt_cpp.cpp ****         TCB::sleep(a1);
 205:src/kernel/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 206:src/kernel/interrupt_cpp.cpp ****     }
 207:src/kernel/interrupt_cpp.cpp ****     else if(a0 == GC)
 1024              		.loc 1 207 10
 1025 0484 93071004 		li	a5,65
 1026 0488 630AF520 		beq	a0,a5,.L68
 208:src/kernel/interrupt_cpp.cpp ****     {
 209:src/kernel/interrupt_cpp.cpp ****         ret = StdIO::ibuffer->get();
 210:src/kernel/interrupt_cpp.cpp ****     }
 211:src/kernel/interrupt_cpp.cpp ****     else if(a0 == PC)
 1027              		.loc 1 211 10
 1028 048c 93072004 		li	a5,66
 1029 0490 631CF508 		bne	a0,a5,.L41
 212:src/kernel/interrupt_cpp.cpp ****     {
 213:src/kernel/interrupt_cpp.cpp ****         StdIO::obuffer->put((char)a1);
 1030              		.loc 1 213 9
 1031              		.loc 1 213 28 is_stmt 0
 1032 0494 97070000 		lla	a5,_ZN5StdIO7obufferE
 1032      93870700 
 1033 049c 03BA0700 		ld	s4,0(a5)
 1034              	.LVL70:
 1035 04a0 93F9F50F 		andi	s3,a1,0xff
 1036              	.LVL71:
 1037              	.LBB336:
GAS LISTING /tmp/ccP4HCkU.s 			page 30


 1038              	.LBB337:
  22:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         mutex.wait();
 1039              		.loc 4 22 28
 1040 04a4 13050A45 		addi	a0,s4,1104
 1041              	.LVL72:
 1042 04a8 97000000 		call	_ZN10KSemaphore4waitEv
 1042      E7800000 
 1043              	.LVL73:
  23:src/kernel/../../h/../h/../h/shared_buffer.hpp **** 
 1044              		.loc 4 23 19
 1045 04b0 930A0A40 		addi	s5,s4,1024
 1046              	.LVL74:
 1047 04b4 13850A00 		mv	a0,s5
 1048 04b8 97000000 		call	_ZN10KSemaphore4waitEv
 1048      E7800000 
 1049              	.LVL75:
  25:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         buffer[tail]=c;
 1050              		.loc 4 25 9
 1051 04c0 83270A48 		lw	a5,1152(s4)
 1052 04c4 9B871700 		addiw	a5,a5,1
 1053 04c8 2320FA48 		sw	a5,1152(s4)
  26:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         tail=(tail+1)%BUFFER_SIZE;
 1054              		.loc 4 26 16
 1055 04cc 8327CA47 		lw	a5,1148(s4)
  26:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         tail=(tail+1)%BUFFER_SIZE;
 1056              		.loc 4 26 9
 1057 04d0 3307FA00 		add	a4,s4,a5
 1058 04d4 23003701 		sb	s3,0(a4)
  27:src/kernel/../../h/../h/../h/shared_buffer.hpp ****     
 1059              		.loc 4 27 19
 1060 04d8 9B871700 		addiw	a5,a5,1
  27:src/kernel/../../h/../h/../h/shared_buffer.hpp ****     
 1061              		.loc 4 27 22
 1062 04dc 1BD7F741 		sraiw	a4,a5,31
 1063 04e0 1B576701 		srliw	a4,a4,22
 1064 04e4 BB87E700 		addw	a5,a5,a4
 1065 04e8 93F7F73F 		andi	a5,a5,1023
 1066 04ec BB87E740 		subw	a5,a5,a4
  27:src/kernel/../../h/../h/../h/shared_buffer.hpp ****     
 1067              		.loc 4 27 9
 1068 04f0 232EFA46 		sw	a5,1148(s4)
  29:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         mutex.signal();
 1069              		.loc 4 29 29
 1070 04f4 13058A42 		addi	a0,s4,1064
 1071 04f8 97000000 		call	_ZN10KSemaphore6signalEv
 1071      E7800000 
 1072              	.LVL76:
  30:src/kernel/../../h/../h/../h/shared_buffer.hpp ****     }
 1073              		.loc 4 30 21
 1074 0500 13850A00 		mv	a0,s5
 1075 0504 97000000 		call	_ZN10KSemaphore6signalEv
 1075      E7800000 
 1076              	.LVL77:
 1077              	.LBE337:
 1078              	.LBE336:
 1079              	.LBE335:
 1080              	.LBE349:
GAS LISTING /tmp/ccP4HCkU.s 			page 31


 1081              	.LBE357:
 1082              	.LBE371:
 1083              	.LBE380:
 1084              	.LBE393:
 1085              	.LBE410:
 1086              	.LBE426:
 1087              	.LBE442:
 1088              	.LBE459:
 142:src/kernel/interrupt_cpp.cpp ****     
 1089              		.loc 1 142 68
 1090 050c 13850400 		mv	a0,s1
 1091 0510 6F008001 		j	.L41
 1092              	.LVL78:
 1093              	.L57:
 1094              	.LBB460:
 146:src/kernel/interrupt_cpp.cpp ****     }
 1095              		.loc 1 146 9 is_stmt 1
 146:src/kernel/interrupt_cpp.cpp ****     }
 1096              		.loc 1 146 52 is_stmt 0
 1097 0514 97000000 		call	_ZN15MemoryAllocator11getInstanceEv
 1097      E7800000 
 1098              	.LVL79:
 146:src/kernel/interrupt_cpp.cpp ****     }
 1099              		.loc 1 146 63
 1100 051c 93850900 		mv	a1,s3
 1101 0520 97000000 		call	_ZN15MemoryAllocator9mem_allocEm
 1101      E7800000 
 1102              	.LVL80:
 1103              	.L41:
 1104              	.LBE460:
 214:src/kernel/interrupt_cpp.cpp ****     }
 215:src/kernel/interrupt_cpp.cpp ****     Riscv::w_sepc(sepc);
 1105              		.loc 1 215 5 is_stmt 1
 1106              	.LBB461:
 1107              	.LBB462:
 108:src/kernel/../../h/../h/riscv.hpp **** }
 1108              		.loc 3 108 5
 108:src/kernel/../../h/../h/riscv.hpp **** }
 1109              		.loc 3 108 49 is_stmt 0
 1110              	 #APP
 1111              	# 108 "src/kernel/../../h/../h/riscv.hpp" 1
 1112              		csrw sepc, s2
 1113              	# 0 "" 2
 1114              	.LVL81:
 1115              	 #NO_APP
 1116              	.LBE462:
 1117              	.LBE461:
 216:src/kernel/interrupt_cpp.cpp ****     return ret;
 1118              		.loc 1 216 5 is_stmt 1
 217:src/kernel/interrupt_cpp.cpp **** }
 1119              		.loc 1 217 1 is_stmt 0
 1120 052c 83308104 		ld	ra,72(sp)
 1121              		.cfi_remember_state
 1122              		.cfi_restore 1
 1123 0530 03340104 		ld	s0,64(sp)
 1124              		.cfi_restore 8
 1125              		.cfi_def_cfa 2, 80
GAS LISTING /tmp/ccP4HCkU.s 			page 32


 1126 0534 83348103 		ld	s1,56(sp)
 1127              		.cfi_restore 9
 1128 0538 03390103 		ld	s2,48(sp)
 1129              		.cfi_restore 18
 1130              	.LVL82:
 1131 053c 83398102 		ld	s3,40(sp)
 1132              		.cfi_restore 19
 1133 0540 033A0102 		ld	s4,32(sp)
 1134              		.cfi_restore 20
 1135 0544 833A8101 		ld	s5,24(sp)
 1136              		.cfi_restore 21
 1137 0548 13010105 		addi	sp,sp,80
 1138              		.cfi_def_cfa_offset 0
 1139 054c 67800000 		jr	ra
 1140              	.LVL83:
 1141              	.L58:
 1142              		.cfi_restore_state
 1143              	.LBB463:
 1144              	.LBB443:
 151:src/kernel/interrupt_cpp.cpp ****     
 1145              		.loc 1 151 9 is_stmt 1
 151:src/kernel/interrupt_cpp.cpp ****     
 1146              		.loc 1 151 52 is_stmt 0
 1147 0550 97000000 		call	_ZN15MemoryAllocator11getInstanceEv
 1147      E7800000 
 1148              	.LVL84:
 151:src/kernel/interrupt_cpp.cpp ****     
 1149              		.loc 1 151 62
 1150 0558 93850900 		mv	a1,s3
 1151 055c 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv
 1151      E7800000 
 1152              	.LVL85:
 1153 0564 6FF05FFC 		j	.L41
 1154              	.LVL86:
 1155              	.L59:
 1156              	.LBB427:
 1157              	.LBB411:
 157:src/kernel/interrupt_cpp.cpp ****         *t = (uint64)TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4); 
 1158              		.loc 1 157 9 is_stmt 1
 158:src/kernel/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
 1159              		.loc 1 158 9
 158:src/kernel/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
 1160              		.loc 1 158 39 is_stmt 0
 1161 0568 13060700 		mv	a2,a4
 1162              	.LVL87:
 1163 056c 93850600 		mv	a1,a3
 1164              	.LVL88:
 1165 0570 13850A00 		mv	a0,s5
 1166 0574 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm
 1166      E7800000 
 1167              	.LVL89:
 158:src/kernel/interrupt_cpp.cpp ****         if(!(*t)) ret = -4;
 1168              		.loc 1 158 12
 1169 057c 23B0A900 		sd	a0,0(s3)
 159:src/kernel/interrupt_cpp.cpp ****         else ret = 0;
 1170              		.loc 1 159 9 is_stmt 1
 1171 0580 63060500 		beq	a0,zero,.L69
GAS LISTING /tmp/ccP4HCkU.s 			page 33


 160:src/kernel/interrupt_cpp.cpp ****     }
 1172              		.loc 1 160 18 is_stmt 0
 1173 0584 13050000 		li	a0,0
 1174 0588 6FF01FFA 		j	.L41
 1175              	.L69:
 159:src/kernel/interrupt_cpp.cpp ****         else ret = 0;
 1176              		.loc 1 159 23
 1177 058c 1305C0FF 		li	a0,-4
 1178 0590 6FF09FF9 		j	.L41
 1179              	.LVL90:
 1180              	.L60:
 1181              	.LBE411:
 1182              	.LBB412:
 165:src/kernel/interrupt_cpp.cpp ****         TCB::dispatch();
 1183              		.loc 1 165 9 is_stmt 1
 165:src/kernel/interrupt_cpp.cpp ****         TCB::dispatch();
 1184              		.loc 1 165 29 is_stmt 0
 1185 0594 97070000 		lla	a5,_ZN3TCB7runningE
 1185      93870700 
 1186 059c 83B70700 		ld	a5,0(a5)
 1187              	.LVL91:
 1188              	.LBB394:
 1189              	.LBB395:
  30:src/kernel/../../h/../h/tcb.hpp ****     bool isFinished(){ return state == FINISHED; }
 1190              		.loc 2 30 21 is_stmt 1
  30:src/kernel/../../h/../h/tcb.hpp ****     bool isFinished(){ return state == FINISHED; }
 1191              		.loc 2 30 27 is_stmt 0
 1192 05a0 13072000 		li	a4,2
 1193              	.LVL92:
 1194 05a4 23A8E702 		sw	a4,48(a5)
 1195              	.LVL93:
 1196              	.LBE395:
 1197              	.LBE394:
 166:src/kernel/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 1198              		.loc 1 166 9 is_stmt 1
 166:src/kernel/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 1199              		.loc 1 166 22 is_stmt 0
 1200 05a8 97000000 		call	_ZN3TCB8dispatchEv
 1200      E7800000 
 1201              	.LVL94:
 167:src/kernel/interrupt_cpp.cpp ****     }
 1202              		.loc 1 167 9 is_stmt 1
 1203              	.LBB396:
 1204              	.LBB397:
 164:src/kernel/../../h/../h/riscv.hpp **** }
 1205              		.loc 3 164 5
 164:src/kernel/../../h/../h/riscv.hpp **** }
 1206              		.loc 3 164 55 is_stmt 0
 1207              	 #APP
 1208              	# 164 "src/kernel/../../h/../h/riscv.hpp" 1
 1209              		csrw sstatus, s4
 1210              	# 0 "" 2
 1211              	 #NO_APP
 1212              	.LBE397:
 1213              	.LBE396:
 1214              	.LBE412:
 1215              	.LBE427:
GAS LISTING /tmp/ccP4HCkU.s 			page 34


 1216              	.LBE443:
 1217              	.LBE463:
 142:src/kernel/interrupt_cpp.cpp ****     
 1218              		.loc 1 142 68
 1219 05b4 13850400 		mv	a0,s1
 1220 05b8 6FF01FF7 		j	.L41
 1221              	.LVL95:
 1222              	.L61:
 1223              	.LBB464:
 1224              	.LBB444:
 1225              	.LBB428:
 1226              	.LBB413:
 1227              	.LBB398:
 172:src/kernel/interrupt_cpp.cpp ****         TCB::yield();
 1228              		.loc 1 172 9 is_stmt 1
 172:src/kernel/interrupt_cpp.cpp ****         TCB::yield();
 1229              		.loc 1 172 31 is_stmt 0
 1230 05bc 97070000 		sd	zero,_ZN3TCB16timeSliceCounterE,a5
 1230      23B00700 
 173:src/kernel/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 1231              		.loc 1 173 9 is_stmt 1
 173:src/kernel/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 1232              		.loc 1 173 19 is_stmt 0
 1233 05c4 97000000 		call	_ZN3TCB5yieldEv
 1233      E7800000 
 1234              	.LVL96:
 174:src/kernel/interrupt_cpp.cpp ****     }
 1235              		.loc 1 174 9 is_stmt 1
 1236              	.LBB381:
 1237              	.LBB382:
 164:src/kernel/../../h/../h/riscv.hpp **** }
 1238              		.loc 3 164 5
 164:src/kernel/../../h/../h/riscv.hpp **** }
 1239              		.loc 3 164 55 is_stmt 0
 1240              	 #APP
 1241              	# 164 "src/kernel/../../h/../h/riscv.hpp" 1
 1242              		csrw sstatus, s4
 1243              	# 0 "" 2
 1244              	 #NO_APP
 1245              	.LBE382:
 1246              	.LBE381:
 1247              	.LBE398:
 1248              	.LBE413:
 1249              	.LBE428:
 1250              	.LBE444:
 1251              	.LBE464:
 142:src/kernel/interrupt_cpp.cpp ****     
 1252              		.loc 1 142 68
 1253 05d0 13850400 		mv	a0,s1
 1254 05d4 6FF05FF5 		j	.L41
 1255              	.LVL97:
 1256              	.L62:
 1257              	.LBB465:
 1258              	.LBB445:
 1259              	.LBB429:
 1260              	.LBB414:
 1261              	.LBB399:
GAS LISTING /tmp/ccP4HCkU.s 			page 35


 1262              	.LBB383:
 179:src/kernel/interrupt_cpp.cpp ****     }
 1263              		.loc 1 179 9 is_stmt 1
 179:src/kernel/interrupt_cpp.cpp ****     }
 1264              		.loc 1 179 26 is_stmt 0
 1265 05d8 13850500 		mv	a0,a1
 1266 05dc 97000000 		call	_ZN3TCB12deleteThreadEPS_
 1266      E7800000 
 1267              	.LVL98:
 1268              	.LBE383:
 1269              	.LBE399:
 1270              	.LBE414:
 1271              	.LBE429:
 1272              	.LBE445:
 1273              	.LBE465:
 142:src/kernel/interrupt_cpp.cpp ****     
 1274              		.loc 1 142 68
 1275 05e4 13850400 		mv	a0,s1
 1276              	.LBB466:
 1277              	.LBB446:
 1278              	.LBB430:
 1279              	.LBB415:
 1280              	.LBB400:
 1281              	.LBB384:
 1282 05e8 6FF01FF4 		j	.L41
 1283              	.LVL99:
 1284              	.L63:
 1285              	.LBB372:
 1286              	.LBB358:
 183:src/kernel/interrupt_cpp.cpp ****         *t = (uint64)(new KSemaphore(a2));
 1287              		.loc 1 183 9 is_stmt 1
 184:src/kernel/interrupt_cpp.cpp ****     }
 1288              		.loc 1 184 9
 1289              	.LBB359:
 1290              	.LBB360:
 1291              		.loc 5 1 31
 1292              		.loc 5 1 67 is_stmt 0
 1293 05ec 97000000 		call	_ZN15MemoryAllocator11getInstanceEv
 1293      E7800000 
 1294              	.LVL100:
 1295              		.loc 5 1 78
 1296 05f4 93051000 		li	a1,1
 1297 05f8 97000000 		call	_ZN15MemoryAllocator9mem_allocEm
 1297      E7800000 
 1298              	.LVL101:
 1299              	.LBE360:
 1300              	.LBE359:
 1301              	.LBB361:
 1302              	.LBB362:
   9:src/kernel/../../h/../h/ksemaphore.hpp ****     {
 1303              		.loc 6 9 37
 1304 0600 23245501 		sw	s5,8(a0)
 1305              	.LVL102:
 1306              	.LBB363:
 1307              	.LBB364:
 1308              		.loc 7 22 54
 1309 0604 23380500 		sd	zero,16(a0)
GAS LISTING /tmp/ccP4HCkU.s 			page 36


 1310 0608 233C0500 		sd	zero,24(a0)
 1311 060c 23200502 		sw	zero,32(a0)
 1312              	.LVL103:
 1313              	.LBE364:
 1314              	.LBE363:
  11:src/kernel/../../h/../h/ksemaphore.hpp ****         activeSemaphores = this;
 1315              		.loc 6 11 9 is_stmt 1
  11:src/kernel/../../h/../h/ksemaphore.hpp ****         activeSemaphores = this;
 1316              		.loc 6 11 14 is_stmt 0
 1317 0610 97070000 		lla	a5,_ZN10KSemaphore16activeSemaphoresE
 1317      93870700 
 1318 0618 03B70700 		ld	a4,0(a5)
 1319 061c 2330E500 		sd	a4,0(a0)
 1320              		.loc 6 12 9 is_stmt 1
 1321              		.loc 6 12 26 is_stmt 0
 1322 0620 23B0A700 		sd	a0,0(a5)
 1323              	.LVL104:
 1324              	.LBE362:
 1325              	.LBE361:
 184:src/kernel/interrupt_cpp.cpp ****     }
 1326              		.loc 1 184 12
 1327 0624 23B0A900 		sd	a0,0(s3)
 1328              	.LBE358:
 1329              	.LBE372:
 1330              	.LBE384:
 1331              	.LBE400:
 1332              	.LBE415:
 1333              	.LBE430:
 1334              	.LBE446:
 1335              	.LBE466:
 142:src/kernel/interrupt_cpp.cpp ****     
 1336              		.loc 1 142 68
 1337 0628 13850400 		mv	a0,s1
 1338              	.LBB467:
 1339              	.LBB447:
 1340              	.LBB431:
 1341              	.LBB416:
 1342              	.LBB401:
 1343              	.LBB385:
 1344              	.LBB373:
 1345 062c 6FF0DFEF 		j	.L41
 1346              	.LVL105:
 1347              	.L64:
 1348              	.LBB365:
 1349              	.LBB350:
 188:src/kernel/interrupt_cpp.cpp ****         delete t;
 1350              		.loc 1 188 9 is_stmt 1
 189:src/kernel/interrupt_cpp.cpp ****     }
 1351              		.loc 1 189 9
 189:src/kernel/interrupt_cpp.cpp ****     }
 1352              		.loc 1 189 17 is_stmt 0
 1353 0630 E38C05EE 		beq	a1,zero,.L41
 189:src/kernel/interrupt_cpp.cpp ****     }
 1354              		.loc 1 189 16 discriminator 1
 1355 0634 13850500 		mv	a0,a1
 1356 0638 97000000 		call	_ZN10KSemaphoreD1Ev
 1356      E7800000 
GAS LISTING /tmp/ccP4HCkU.s 			page 37


 1357              	.LVL106:
 1358              	.LBB351:
 1359              	.LBB352:
   2:src/kernel/../../h/../h/../h/kernel_operators.hpp **** void* operator new[](size_t sz){ return MemoryAllocator::getInstance().mem_alloc((sz-1)/MEM_BLOCK_S
   3:src/kernel/../../h/../h/../h/kernel_operators.hpp **** void operator delete(void* ptr){MemoryAllocator::getInstance().mem_free(ptr);}
 1360              		.loc 5 3 33 is_stmt 1 discriminator 1
 1361              		.loc 5 3 62 is_stmt 0 discriminator 1
 1362 0640 97000000 		call	_ZN15MemoryAllocator11getInstanceEv
 1362      E7800000 
 1363              	.LVL107:
 1364              		.loc 5 3 72 discriminator 1
 1365 0648 93850900 		mv	a1,s3
 1366 064c 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv
 1366      E7800000 
 1367              	.LVL108:
 1368              	.LBE352:
 1369              	.LBE351:
 1370              	.LBE350:
 1371              	.LBE365:
 1372              	.LBE373:
 1373              	.LBE385:
 1374              	.LBE401:
 1375              	.LBE416:
 1376              	.LBE431:
 1377              	.LBE447:
 1378              	.LBE467:
 142:src/kernel/interrupt_cpp.cpp ****     
 1379              		.loc 1 142 68 discriminator 1
 1380 0654 13850400 		mv	a0,s1
 1381 0658 6FF01FED 		j	.L41
 1382              	.LVL109:
 1383              	.L65:
 1384              	.LBB468:
 1385              	.LBB448:
 1386              	.LBB432:
 1387              	.LBB417:
 1388              	.LBB402:
 1389              	.LBB386:
 1390              	.LBB374:
 1391              	.LBB366:
 1392              	.LBB353:
 1393              	.LBB343:
 193:src/kernel/interrupt_cpp.cpp ****         ret = t->wait();
 1394              		.loc 1 193 9 is_stmt 1
 194:src/kernel/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 1395              		.loc 1 194 9
 194:src/kernel/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 1396              		.loc 1 194 22 is_stmt 0
 1397 065c 13850500 		mv	a0,a1
 1398 0660 97000000 		call	_ZN10KSemaphore4waitEv
 1398      E7800000 
 1399              	.LVL110:
 195:src/kernel/interrupt_cpp.cpp ****     }
 1400              		.loc 1 195 9 is_stmt 1
 1401              	.LBB344:
 1402              	.LBB345:
 164:src/kernel/../../h/../h/riscv.hpp **** }
GAS LISTING /tmp/ccP4HCkU.s 			page 38


 1403              		.loc 3 164 5
 164:src/kernel/../../h/../h/riscv.hpp **** }
 1404              		.loc 3 164 55 is_stmt 0
 1405              	 #APP
 1406              	# 164 "src/kernel/../../h/../h/riscv.hpp" 1
 1407              		csrw sstatus, s4
 1408              	# 0 "" 2
 1409              	 #NO_APP
 1410 066c 6FF0DFEB 		j	.L41
 1411              	.LVL111:
 1412              	.L66:
 1413              	.LBE345:
 1414              	.LBE344:
 1415              	.LBE343:
 1416              	.LBB346:
 1417              	.LBB338:
 199:src/kernel/interrupt_cpp.cpp ****         t->signal();
 1418              		.loc 1 199 9 is_stmt 1
 200:src/kernel/interrupt_cpp.cpp ****     }
 1419              		.loc 1 200 9
 200:src/kernel/interrupt_cpp.cpp ****     }
 1420              		.loc 1 200 18 is_stmt 0
 1421 0670 13850500 		mv	a0,a1
 1422 0674 97000000 		call	_ZN10KSemaphore6signalEv
 1422      E7800000 
 1423              	.LVL112:
 1424              	.LBE338:
 1425              	.LBE346:
 1426              	.LBE353:
 1427              	.LBE366:
 1428              	.LBE374:
 1429              	.LBE386:
 1430              	.LBE402:
 1431              	.LBE417:
 1432              	.LBE432:
 1433              	.LBE448:
 1434              	.LBE468:
 142:src/kernel/interrupt_cpp.cpp ****     
 1435              		.loc 1 142 68
 1436 067c 13850400 		mv	a0,s1
 1437              	.LBB469:
 1438              	.LBB449:
 1439              	.LBB433:
 1440              	.LBB418:
 1441              	.LBB403:
 1442              	.LBB387:
 1443              	.LBB375:
 1444              	.LBB367:
 1445              	.LBB354:
 1446              	.LBB347:
 1447 0680 6FF09FEA 		j	.L41
 1448              	.LVL113:
 1449              	.L67:
 204:src/kernel/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 1450              		.loc 1 204 9 is_stmt 1
 204:src/kernel/interrupt_cpp.cpp ****         Riscv::w_sstatus(sstatus);
 1451              		.loc 1 204 19 is_stmt 0
GAS LISTING /tmp/ccP4HCkU.s 			page 39


 1452 0684 13850500 		mv	a0,a1
 1453 0688 97000000 		call	_ZN3TCB5sleepEm
 1453      E7800000 
 1454              	.LVL114:
 205:src/kernel/interrupt_cpp.cpp ****     }
 1455              		.loc 1 205 9 is_stmt 1
 1456              	.LBB339:
 1457              	.LBB340:
 164:src/kernel/../../h/../h/riscv.hpp **** }
 1458              		.loc 3 164 5
 164:src/kernel/../../h/../h/riscv.hpp **** }
 1459              		.loc 3 164 55 is_stmt 0
 1460              	 #APP
 1461              	# 164 "src/kernel/../../h/../h/riscv.hpp" 1
 1462              		csrw sstatus, s4
 1463              	# 0 "" 2
 1464              	 #NO_APP
 1465              	.LBE340:
 1466              	.LBE339:
 1467              	.LBE347:
 1468              	.LBE354:
 1469              	.LBE367:
 1470              	.LBE375:
 1471              	.LBE387:
 1472              	.LBE403:
 1473              	.LBE418:
 1474              	.LBE433:
 1475              	.LBE449:
 1476              	.LBE469:
 142:src/kernel/interrupt_cpp.cpp ****     
 1477              		.loc 1 142 68
 1478 0694 13850400 		mv	a0,s1
 1479 0698 6FF01FE9 		j	.L41
 1480              	.LVL115:
 1481              	.L68:
 1482              	.LBB470:
 1483              	.LBB450:
 1484              	.LBB434:
 1485              	.LBB419:
 1486              	.LBB404:
 1487              	.LBB388:
 1488              	.LBB376:
 1489              	.LBB368:
 1490              	.LBB355:
 1491              	.LBB348:
 209:src/kernel/interrupt_cpp.cpp ****     }
 1492              		.loc 1 209 9 is_stmt 1
 209:src/kernel/interrupt_cpp.cpp ****     }
 1493              		.loc 1 209 34 is_stmt 0
 1494 069c 97070000 		lla	a5,_ZN5StdIO7ibufferE
 1494      93870700 
 1495 06a4 83B90700 		ld	s3,0(a5)
 1496              	.LVL116:
 1497              	.LBB341:
 1498              	.LBB342:
  34:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         mutex.wait();
 1499              		.loc 4 34 27
GAS LISTING /tmp/ccP4HCkU.s 			page 40


 1500 06a8 13858942 		addi	a0,s3,1064
 1501 06ac 97000000 		call	_ZN10KSemaphore4waitEv
 1501      E7800000 
 1502              	.LVL117:
  35:src/kernel/../../h/../h/../h/shared_buffer.hpp **** 
 1503              		.loc 4 35 19
 1504 06b4 138A0940 		addi	s4,s3,1024
 1505              	.LVL118:
 1506 06b8 13050A00 		mv	a0,s4
 1507 06bc 97000000 		call	_ZN10KSemaphore4waitEv
 1507      E7800000 
 1508              	.LVL119:
  37:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         T r = buffer[head];
 1509              		.loc 4 37 9
 1510 06c4 83A70948 		lw	a5,1152(s3)
 1511 06c8 9B87F7FF 		addiw	a5,a5,-1
 1512 06cc 23A0F948 		sw	a5,1152(s3)
  38:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         head = (head+1)%BUFFER_SIZE;
 1513              		.loc 4 38 22
 1514 06d0 83A78947 		lw	a5,1144(s3)
  38:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         head = (head+1)%BUFFER_SIZE;
 1515              		.loc 4 38 11
 1516 06d4 3387F900 		add	a4,s3,a5
 1517 06d8 83440700 		lbu	s1,0(a4)
 1518              	.LVL120:
  39:src/kernel/../../h/../h/../h/shared_buffer.hpp **** 
 1519              		.loc 4 39 21
 1520 06dc 9B871700 		addiw	a5,a5,1
  39:src/kernel/../../h/../h/../h/shared_buffer.hpp **** 
 1521              		.loc 4 39 24
 1522 06e0 1BD7F741 		sraiw	a4,a5,31
 1523 06e4 1B576701 		srliw	a4,a4,22
 1524 06e8 BB87E700 		addw	a5,a5,a4
 1525 06ec 93F7F73F 		andi	a5,a5,1023
 1526 06f0 BB87E740 		subw	a5,a5,a4
  39:src/kernel/../../h/../h/../h/shared_buffer.hpp **** 
 1527              		.loc 4 39 9
 1528 06f4 23ACF946 		sw	a5,1144(s3)
  41:src/kernel/../../h/../h/../h/shared_buffer.hpp ****         mutex.signal();
 1529              		.loc 4 41 30
 1530 06f8 13850945 		addi	a0,s3,1104
 1531 06fc 97000000 		call	_ZN10KSemaphore6signalEv
 1531      E7800000 
 1532              	.LVL121:
 1533              		.loc 4 42 21
 1534 0704 13050A00 		mv	a0,s4
 1535 0708 97000000 		call	_ZN10KSemaphore6signalEv
 1535      E7800000 
 1536              	.LVL122:
 1537              	.LBE342:
 1538              	.LBE341:
 209:src/kernel/interrupt_cpp.cpp ****     }
 1539              		.loc 1 209 13
 1540 0710 13850400 		mv	a0,s1
 1541              	.LVL123:
 1542 0714 6FF05FE1 		j	.L41
 1543              	.LBE348:
GAS LISTING /tmp/ccP4HCkU.s 			page 41


 1544              	.LBE355:
 1545              	.LBE368:
 1546              	.LBE376:
 1547              	.LBE388:
 1548              	.LBE404:
 1549              	.LBE419:
 1550              	.LBE434:
 1551              	.LBE450:
 1552              	.LBE470:
 1553              		.cfi_endproc
 1554              	.LFE93:
 1556              		.align	2
 1557              		.globl	interrupt
 1559              	interrupt:
 1560              	.LFB94:
 218:src/kernel/interrupt_cpp.cpp **** 
 219:src/kernel/interrupt_cpp.cpp **** extern "C" volatile  void interrupt(uint64 a0, uint64 a1, uint64 a2, uint64 a3, uint64 a4)
 220:src/kernel/interrupt_cpp.cpp **** {
 1561              		.loc 1 220 1 is_stmt 1
 1562              		.cfi_startproc
 1563              	.LVL124:
 1564 0718 130101FD 		addi	sp,sp,-48
 1565              		.cfi_def_cfa_offset 48
 1566 071c 23341102 		sd	ra,40(sp)
 1567 0720 23308102 		sd	s0,32(sp)
 1568 0724 233C9100 		sd	s1,24(sp)
 1569 0728 23382101 		sd	s2,16(sp)
 1570              		.cfi_offset 1, -8
 1571              		.cfi_offset 8, -16
 1572              		.cfi_offset 9, -24
 1573              		.cfi_offset 18, -32
 1574 072c 13040103 		addi	s0,sp,48
 1575              		.cfi_def_cfa 8, 0
 221:src/kernel/interrupt_cpp.cpp ****     uint64 scause = Riscv::r_scause();
 1576              		.loc 1 221 5
 1577              	.LBB471:
 1578              	.LBB472:
 102:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, scause" : "=r" (scause));
 1579              		.loc 3 102 5
 103:src/kernel/../../h/../h/riscv.hpp ****     return scause;
 1580              		.loc 3 103 5
 103:src/kernel/../../h/../h/riscv.hpp ****     return scause;
 1581              		.loc 3 103 52 is_stmt 0
 1582              	 #APP
 1583              	# 103 "src/kernel/../../h/../h/riscv.hpp" 1
 1584              		csrr a5, scause
 1585              	# 0 "" 2
 1586              	 #NO_APP
 1587 0734 2338F4FC 		sd	a5,-48(s0)
 104:src/kernel/../../h/../h/riscv.hpp **** } 
 1588              		.loc 3 104 5 is_stmt 1
 104:src/kernel/../../h/../h/riscv.hpp **** } 
 1589              		.loc 3 104 12 is_stmt 0
 1590 0738 833404FD 		ld	s1,-48(s0)
 1591              	.LVL125:
 1592              	.LBE472:
 1593              	.LBE471:
GAS LISTING /tmp/ccP4HCkU.s 			page 42


 222:src/kernel/interrupt_cpp.cpp ****     //static bool panic = 0;
 223:src/kernel/interrupt_cpp.cpp **** 
 224:src/kernel/interrupt_cpp.cpp ****     if(scause == IS)
 1594              		.loc 1 224 5 is_stmt 1
 1595              	.LBB473:
 1596 073c 93079000 		li	a5,9
 1597 0740 6382F412 		beq	s1,a5,.L79
 1598              	.LBE473:
 225:src/kernel/interrupt_cpp.cpp ****     {
 226:src/kernel/interrupt_cpp.cpp ****         //ecall iz sistemskog rezima
 227:src/kernel/interrupt_cpp.cpp ****         a0 = sysEcall(a0, a1, a2, a3, a4);
 228:src/kernel/interrupt_cpp.cpp ****         asm volatile("sd %0, 10 * 8(s0)" :: "r" (a0));
 229:src/kernel/interrupt_cpp.cpp ****     
 230:src/kernel/interrupt_cpp.cpp ****     } 
 231:src/kernel/interrupt_cpp.cpp ****     else if(scause == IU)
 1599              		.loc 1 231 10
 1600              	.LBB501:
 1601              	.LBB474:
 1602 0744 93078000 		li	a5,8
 1603 0748 6380F414 		beq	s1,a5,.L80
 1604              	.LBE474:
 1605              	.LBE501:
 232:src/kernel/interrupt_cpp.cpp ****     {
 233:src/kernel/interrupt_cpp.cpp ****         //ecall iz korisnickog rezima
 234:src/kernel/interrupt_cpp.cpp ****         a0 = usrEcall(a0, a1, a2, a3, a4);
 235:src/kernel/interrupt_cpp.cpp ****         asm volatile("sd %0, 10 * 8(s0)" :: "r" (a0));
 236:src/kernel/interrupt_cpp.cpp ****         
 237:src/kernel/interrupt_cpp.cpp ****     } 
 238:src/kernel/interrupt_cpp.cpp ****     else if(scause == IH)
 1606              		.loc 1 238 10
 1607              	.LBB502:
 1608              	.LBB496:
 1609              	.LBB475:
 1610 074c 9307F0FF 		li	a5,-1
 1611 0750 9397F703 		slli	a5,a5,63
 1612 0754 93879700 		addi	a5,a5,9
 1613 0758 6380F414 		beq	s1,a5,.L81
 1614              	.LBE475:
 1615              	.LBE496:
 1616              	.LBE502:
 239:src/kernel/interrupt_cpp.cpp ****     {
 240:src/kernel/interrupt_cpp.cpp ****         //hardverski prekid
 241:src/kernel/interrupt_cpp.cpp ****        StdIO::console_handler();
 242:src/kernel/interrupt_cpp.cpp ****     
 243:src/kernel/interrupt_cpp.cpp ****     } 
 244:src/kernel/interrupt_cpp.cpp ****     else if(scause == IT)
 1617              		.loc 1 244 10
 1618              	.LBB503:
 1619              	.LBB497:
 1620              	.LBB492:
 1621              	.LBB476:
 1622 075c 9307F0FF 		li	a5,-1
 1623 0760 9397F703 		slli	a5,a5,63
 1624 0764 93871700 		addi	a5,a5,1
 1625 0768 638EF412 		beq	s1,a5,.L82
 1626              	.LBE476:
 1627              	.LBE492:
GAS LISTING /tmp/ccP4HCkU.s 			page 43


 1628              	.LBE497:
 1629              	.LBE503:
 245:src/kernel/interrupt_cpp.cpp ****     {
 246:src/kernel/interrupt_cpp.cpp ****         //prekid od timera
 247:src/kernel/interrupt_cpp.cpp ****         timer_handler();      
 248:src/kernel/interrupt_cpp.cpp ****     
 249:src/kernel/interrupt_cpp.cpp ****     }
 250:src/kernel/interrupt_cpp.cpp ****     else if(scause == II || scause == IR || scause == IW)
 1630              		.loc 1 250 10
 1631              	.LBB504:
 1632              	.LBB498:
 1633              	.LBB493:
 1634              	.LBB489:
 1635              	.LBB477:
 1636 076c 93072000 		li	a5,2
 1637 0770 638AF400 		beq	s1,a5,.L76
 1638              		.loc 1 250 26 is_stmt 0 discriminator 1
 1639 0774 93075000 		li	a5,5
 1640 0778 6386F400 		beq	s1,a5,.L76
 1641              		.loc 1 250 42 discriminator 2
 1642 077c 93077000 		li	a5,7
 1643 0780 6398F40E 		bne	s1,a5,.L70
 1644              	.L76:
 1645              	.LBE477:
 1646              	.LBE489:
 1647              	.LBE493:
 1648              	.LBE498:
 1649              	.LBE504:
 251:src/kernel/interrupt_cpp.cpp ****     {
 252:src/kernel/interrupt_cpp.cpp ****         //ilegalna instrukcija
 253:src/kernel/interrupt_cpp.cpp ****         if(!TCB::running->isKernelThread())
 1650              		.loc 1 253 9 is_stmt 1
 1651              	.LBB505:
 1652              	.LBB499:
 1653              	.LBB494:
 1654              	.LBB490:
 1655              	.LBB487:
 1656              	.LBB478:
 1657              		.loc 1 253 41 is_stmt 0
 1658 0784 97070000 		lla	a5,_ZN3TCB7runningE
 1658      93870700 
 1659 078c 83B70700 		ld	a5,0(a5)
 1660              	.LVL126:
 1661              	.LBB479:
 1662              	.LBB480:
  33:src/kernel/../../h/../h/tcb.hpp ****     bool isSuspended(){return state == BLOCKED || state == SLEEPING;}
  34:src/kernel/../../h/../h/tcb.hpp ****     void setKernelMode() { userMode = false; }
  35:src/kernel/../../h/../h/tcb.hpp ****     void setKernelLocked() { locked = true; }
  36:src/kernel/../../h/../h/tcb.hpp ****     bool isKernelThread() { return !userMode; } 
 1663              		.loc 2 36 29 is_stmt 1
 1664              		.loc 2 36 37 is_stmt 0
 1665 0790 83C75703 		lbu	a5,53(a5)
 1666              	.LVL127:
 1667              	.LBE480:
 1668              	.LBE479:
 1669              		.loc 1 253 9
 1670 0794 638E0710 		beq	a5,zero,.L77
GAS LISTING /tmp/ccP4HCkU.s 			page 44


 1671              	.LBB481:
 254:src/kernel/interrupt_cpp.cpp ****         {
 255:src/kernel/interrupt_cpp.cpp ****             uint64 stval;
 1672              		.loc 1 255 13 is_stmt 1
 256:src/kernel/interrupt_cpp.cpp ****             asm volatile("csrr %0, stval" : "=r" (stval));
 1673              		.loc 1 256 13
 1674              		.loc 1 256 58 is_stmt 0
 1675              	 #APP
 1676              	# 256 "src/kernel/interrupt_cpp.cpp" 1
 257              	            kprintString("\nERROR: Thread stopped due to unauthorised access!!\n");
 1677              		csrr s2, stval
 1678              	# 0 "" 2
 1679              	.LVL128:
 1680              		.loc 1 257 13 is_stmt 1
 1681              		.loc 1 257 25 is_stmt 0
 1682              	 #NO_APP
 1683 079c 17050000 		lla	a0,.LC0
 1683      13050500 
 1684              	.LVL129:
 1685 07a4 97000000 		call	_Z12kprintStringPKc
 1685      E7800000 
 1686              	.LVL130:
 258:src/kernel/interrupt_cpp.cpp ****             kprintString("SCAUSE: "); kprintInt(scause, 16); kprintString("\n"); 
 1687              		.loc 1 258 13 is_stmt 1
 1688              		.loc 1 258 25 is_stmt 0
 1689 07ac 17050000 		lla	a0,.LC1
 1689      13050500 
 1690 07b4 97000000 		call	_Z12kprintStringPKc
 1690      E7800000 
 1691              	.LVL131:
 1692              		.loc 1 258 39 is_stmt 1
 1693              		.loc 1 258 48 is_stmt 0
 1694 07bc 93050001 		li	a1,16
 1695 07c0 13850400 		mv	a0,s1
 1696 07c4 97000000 		call	_Z9kprintIntmi
 1696      E7800000 
 1697              	.LVL132:
 1698              		.loc 1 258 62 is_stmt 1
 1699              		.loc 1 258 74 is_stmt 0
 1700 07cc 17050000 		lla	a0,.LC2
 1700      13050500 
 1701 07d4 97000000 		call	_Z12kprintStringPKc
 1701      E7800000 
 1702              	.LVL133:
 259:src/kernel/interrupt_cpp.cpp ****             kprintString("SEPC: "); kprintInt(Riscv::r_sepc(),16); kprintString("\n");
 1703              		.loc 1 259 13 is_stmt 1
 1704              		.loc 1 259 25 is_stmt 0
 1705 07dc 17050000 		lla	a0,.LC3
 1705      13050500 
 1706 07e4 97000000 		call	_Z12kprintStringPKc
 1706      E7800000 
 1707              	.LVL134:
 1708              		.loc 1 259 37 is_stmt 1
 1709              	.LBB482:
 1710              	.LBB483:
 112:src/kernel/../../h/../h/riscv.hpp ****     asm volatile("csrr %0, sepc" : "=r" (sepc));
 1711              		.loc 3 112 5
GAS LISTING /tmp/ccP4HCkU.s 			page 45


 113:src/kernel/../../h/../h/riscv.hpp ****     return sepc;
 1712              		.loc 3 113 5
 113:src/kernel/../../h/../h/riscv.hpp ****     return sepc;
 1713              		.loc 3 113 48 is_stmt 0
 1714              	 #APP
 1715              	# 113 "src/kernel/../../h/../h/riscv.hpp" 1
 1716              		csrr a5, sepc
 1717              	# 0 "" 2
 1718              	 #NO_APP
 1719 07f0 233CF4FC 		sd	a5,-40(s0)
 114:src/kernel/../../h/../h/riscv.hpp **** } 
 1720              		.loc 3 114 5 is_stmt 1
 114:src/kernel/../../h/../h/riscv.hpp **** } 
 1721              		.loc 3 114 12 is_stmt 0
 1722 07f4 033584FD 		ld	a0,-40(s0)
 1723              	.LBE483:
 1724              	.LBE482:
 1725              		.loc 1 259 46
 1726 07f8 93050001 		li	a1,16
 1727 07fc 97000000 		call	_Z9kprintIntmi
 1727      E7800000 
 1728              	.LVL135:
 1729              		.loc 1 259 68 is_stmt 1
 1730              		.loc 1 259 80 is_stmt 0
 1731 0804 17050000 		lla	a0,.LC2
 1731      13050500 
 1732 080c 97000000 		call	_Z12kprintStringPKc
 1732      E7800000 
 1733              	.LVL136:
 260:src/kernel/interrupt_cpp.cpp ****             kprintString("STVAL: "); kprintInt(stval, 16); kprintString("\n\n");
 1734              		.loc 1 260 13 is_stmt 1
 1735              		.loc 1 260 25 is_stmt 0
 1736 0814 17050000 		lla	a0,.LC4
 1736      13050500 
 1737 081c 97000000 		call	_Z12kprintStringPKc
 1737      E7800000 
 1738              	.LVL137:
 1739              		.loc 1 260 38 is_stmt 1
 1740              		.loc 1 260 47 is_stmt 0
 1741 0824 93050001 		li	a1,16
 1742 0828 13050900 		mv	a0,s2
 1743 082c 97000000 		call	_Z9kprintIntmi
 1743      E7800000 
 1744              	.LVL138:
 1745              		.loc 1 260 60 is_stmt 1
 1746              		.loc 1 260 72 is_stmt 0
 1747 0834 17050000 		lla	a0,.LC5
 1747      13050500 
 1748 083c 97000000 		call	_Z12kprintStringPKc
 1748      E7800000 
 1749              	.LVL139:
 261:src/kernel/interrupt_cpp.cpp ****             TCB::running->finish();
 1750              		.loc 1 261 13 is_stmt 1
 1751              		.loc 1 261 33 is_stmt 0
 1752 0844 97070000 		lla	a5,_ZN3TCB7runningE
 1752      93870700 
 1753 084c 83B70700 		ld	a5,0(a5)
GAS LISTING /tmp/ccP4HCkU.s 			page 46


 1754              	.LVL140:
 1755              	.LBB484:
 1756              	.LBB485:
  30:src/kernel/../../h/../h/tcb.hpp ****     bool isFinished(){ return state == FINISHED; }
 1757              		.loc 2 30 21 is_stmt 1
  30:src/kernel/../../h/../h/tcb.hpp ****     bool isFinished(){ return state == FINISHED; }
 1758              		.loc 2 30 27 is_stmt 0
 1759 0850 13072000 		li	a4,2
 1760 0854 23A8E702 		sw	a4,48(a5)
 1761              	.LVL141:
 1762              	.LBE485:
 1763              	.LBE484:
 262:src/kernel/interrupt_cpp.cpp ****             TCB::dispatch();
 1764              		.loc 1 262 13 is_stmt 1
 1765              		.loc 1 262 26 is_stmt 0
 1766 0858 97000000 		call	_ZN3TCB8dispatchEv
 1766      E7800000 
 1767              	.LVL142:
 1768              	.LBE481:
 1769 0860 6F000001 		j	.L70
 1770              	.LVL143:
 1771              	.L79:
 1772              	.LBE478:
 1773              	.LBE487:
 1774              	.LBE490:
 1775              	.LBE494:
 1776              	.LBE499:
 227:src/kernel/interrupt_cpp.cpp ****         asm volatile("sd %0, 10 * 8(s0)" :: "r" (a0));
 1777              		.loc 1 227 9 is_stmt 1
 227:src/kernel/interrupt_cpp.cpp ****         asm volatile("sd %0, 10 * 8(s0)" :: "r" (a0));
 1778              		.loc 1 227 22 is_stmt 0
 1779 0864 97000000 		call	_Z8sysEcallmmmmm
 1779      E7800000 
 1780              	.LVL144:
 228:src/kernel/interrupt_cpp.cpp ****     
 1781              		.loc 1 228 9 is_stmt 1
 228:src/kernel/interrupt_cpp.cpp ****     
 1782              		.loc 1 228 54 is_stmt 0
 1783              	 #APP
 1784              	# 228 "src/kernel/interrupt_cpp.cpp" 1
 1785              		sd a0, 10 * 8(s0)
 1786              	# 0 "" 2
 1787              	.LVL145:
 1788              	 #NO_APP
 1789              	.L70:
 1790              	.LBE505:
 263:src/kernel/interrupt_cpp.cpp ****         }
 264:src/kernel/interrupt_cpp.cpp ****         else
 265:src/kernel/interrupt_cpp.cpp ****         {
 266:src/kernel/interrupt_cpp.cpp ****             kprintString("\nFATAL KERNEL ERROR: unauthorised access prompted!!\n");
 267:src/kernel/interrupt_cpp.cpp ****             TCB::panicDispatch();
 268:src/kernel/interrupt_cpp.cpp ****         }
 269:src/kernel/interrupt_cpp.cpp ****     }
 270:src/kernel/interrupt_cpp.cpp ****                     
 271:src/kernel/interrupt_cpp.cpp ****     
 272:src/kernel/interrupt_cpp.cpp ****     //print(a4);
 273:src/kernel/interrupt_cpp.cpp **** }...
GAS LISTING /tmp/ccP4HCkU.s 			page 47


 1791              		.loc 1 273 1
 1792 0870 83308102 		ld	ra,40(sp)
 1793              		.cfi_remember_state
 1794              		.cfi_restore 1
 1795 0874 03340102 		ld	s0,32(sp)
 1796              		.cfi_restore 8
 1797              		.cfi_def_cfa 2, 48
 1798 0878 83348101 		ld	s1,24(sp)
 1799              		.cfi_restore 9
 1800              	.LVL146:
 1801 087c 03390101 		ld	s2,16(sp)
 1802              		.cfi_restore 18
 1803 0880 13010103 		addi	sp,sp,48
 1804              		.cfi_def_cfa_offset 0
 1805 0884 67800000 		jr	ra
 1806              	.LVL147:
 1807              	.L80:
 1808              		.cfi_restore_state
 1809              	.LBB506:
 1810              	.LBB500:
 234:src/kernel/interrupt_cpp.cpp ****         a0 = usrEcall(a0, a1, a2, a3, a4);
 1811              		.loc 1 234 9 is_stmt 1
 234:src/kernel/interrupt_cpp.cpp ****         a0 = usrEcall(a0, a1, a2, a3, a4);
 1812              		.loc 1 234 22 is_stmt 0
 1813 0888 97000000 		call	_Z8usrEcallmmmmm
 1813      E7800000 
 1814              	.LVL148:
 235:src/kernel/interrupt_cpp.cpp ****         asm volatile("sd %0, 10 * 8(s0)" :: "r" (a0));
 1815              		.loc 1 235 9 is_stmt 1
 235:src/kernel/interrupt_cpp.cpp ****         asm volatile("sd %0, 10 * 8(s0)" :: "r" (a0));
 1816              		.loc 1 235 54 is_stmt 0
 1817              	 #APP
 1818              	# 235 "src/kernel/interrupt_cpp.cpp" 1
 1819              		sd a0, 10 * 8(s0)
 1820              	# 0 "" 2
 1821              	 #NO_APP
 1822 0894 6FF0DFFD 		j	.L70
 1823              	.LVL149:
 1824              	.L81:
 1825              	.LBB495:
 241:src/kernel/interrupt_cpp.cpp ****        StdIO::console_handler();
 1826              		.loc 1 241 8 is_stmt 1
 241:src/kernel/interrupt_cpp.cpp ****        StdIO::console_handler();
 1827              		.loc 1 241 30 is_stmt 0
 1828 0898 97000000 		call	_ZN5StdIO15console_handlerEv
 1828      E7800000 
 1829              	.LVL150:
 1830 08a0 6FF01FFD 		j	.L70
 1831              	.LVL151:
 1832              	.L82:
 1833              	.LBB491:
 247:src/kernel/interrupt_cpp.cpp ****         timer_handler();      
 1834              		.loc 1 247 9 is_stmt 1
 247:src/kernel/interrupt_cpp.cpp ****         timer_handler();      
 1835              		.loc 1 247 22 is_stmt 0
 1836 08a4 97000000 		call	_Z13timer_handlerv
 1836      E7800000 
GAS LISTING /tmp/ccP4HCkU.s 			page 48


 1837              	.LVL152:
 1838 08ac 6FF05FFC 		j	.L70
 1839              	.LVL153:
 1840              	.L77:
 1841              	.LBB488:
 1842              	.LBB486:
 266:src/kernel/interrupt_cpp.cpp ****             kprintString("\nFATAL KERNEL ERROR: unauthorised access prompted!!\n");
 1843              		.loc 1 266 13 is_stmt 1
 266:src/kernel/interrupt_cpp.cpp ****             kprintString("\nFATAL KERNEL ERROR: unauthorised access prompted!!\n");
 1844              		.loc 1 266 25 is_stmt 0
 1845 08b0 17050000 		lla	a0,.LC6
 1845      13050500 
 1846              	.LVL154:
 1847 08b8 97000000 		call	_Z12kprintStringPKc
 1847      E7800000 
 1848              	.LVL155:
 267:src/kernel/interrupt_cpp.cpp ****             TCB::panicDispatch();
 1849              		.loc 1 267 13 is_stmt 1
 267:src/kernel/interrupt_cpp.cpp ****             TCB::panicDispatch();
 1850              		.loc 1 267 31 is_stmt 0
 1851 08c0 97000000 		call	_ZN3TCB13panicDispatchEv
 1851      E7800000 
 1852              	.LVL156:
 1853              	.LBE486:
 1854              	.LBE488:
 1855              	.LBE491:
 1856              	.LBE495:
 1857              	.LBE500:
 1858              	.LBE506:
 1859              		.loc 1 273 1
 1860 08c8 6FF09FFA 		j	.L70
 1861              		.cfi_endproc
 1862              	.LFE94:
 1864              		.section	.rodata.str1.8,"aMS",@progbits,1
 1865              		.align	3
 1866              	.LC0:
 1867 0000 0A455252 		.string	"\nERROR: Thread stopped due to unauthorised access!!\n"
 1867      4F523A20 
 1867      54687265 
 1867      61642073 
 1867      746F7070 
 1868 0035 000000   		.zero	3
 1869              	.LC1:
 1870 0038 53434155 		.string	"SCAUSE: "
 1870      53453A20 
 1870      00
 1871 0041 00000000 		.zero	7
 1871      000000
 1872              	.LC2:
 1873 0048 0A00     		.string	"\n"
 1874 004a 00000000 		.zero	6
 1874      0000
 1875              	.LC3:
 1876 0050 53455043 		.string	"SEPC: "
 1876      3A2000
 1877 0057 00       		.zero	1
 1878              	.LC4:
GAS LISTING /tmp/ccP4HCkU.s 			page 49


 1879 0058 53545641 		.string	"STVAL: "
 1879      4C3A2000 
 1880              	.LC5:
 1881 0060 0A0A00   		.string	"\n\n"
 1882 0063 00000000 		.zero	5
 1882      00
 1883              	.LC6:
 1884 0068 0A464154 		.string	"\nFATAL KERNEL ERROR: unauthorised access prompted!!\n"
 1884      414C204B 
 1884      45524E45 
 1884      4C204552 
 1884      524F523A 
 1885              		.text
 1886              	.Letext0:
 1887              		.file 8 "src/kernel/../../h/../h/../lib/hw.h"
 1888              		.file 9 "src/kernel/../../h/../h/../h/memory_allocator.hpp"
 1889              		.file 10 "src/kernel/../../h/../h/stdio.hpp"
 1890              		.file 11 "src/kernel/../../h/../h/../h/../h/kernel_operators.hpp"
 1891              		.file 12 "src/kernel/../../h/../h/scheduler.hpp"
 1892              		.file 13 "src/kernel/../../h/../h/kernel_funs.h"
GAS LISTING /tmp/ccP4HCkU.s 			page 50


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interrupt_cpp.cpp
     /tmp/ccP4HCkU.s:12     .text:0000000000000000 _Z13timer_handlerv
     /tmp/ccP4HCkU.s:16     .text:0000000000000000 .L0 
     /tmp/ccP4HCkU.s:17     .text:0000000000000000 .L0 
     /tmp/ccP4HCkU.s:18     .text:0000000000000004 .L0 
     /tmp/ccP4HCkU.s:23     .text:0000000000000014 .L0 
     /tmp/ccP4HCkU.s:24     .text:0000000000000014 .L0 
     /tmp/ccP4HCkU.s:25     .text:0000000000000014 .L0 
     /tmp/ccP4HCkU.s:26     .text:0000000000000014 .L0 
     /tmp/ccP4HCkU.s:28     .text:0000000000000018 .L0 
     /tmp/ccP4HCkU.s:30     .text:0000000000000018 .L0 
     /tmp/ccP4HCkU.s:31     .text:0000000000000018 .L0 
     /tmp/ccP4HCkU.s:34     .text:0000000000000020 .L0 
     /tmp/ccP4HCkU.s:35     .text:0000000000000020 .L0 
     /tmp/ccP4HCkU.s:41     .text:0000000000000034 .L0 
     /tmp/ccP4HCkU.s:42     .text:0000000000000034 .L0 
     /tmp/ccP4HCkU.s:49     .text:0000000000000040 .L0 
     /tmp/ccP4HCkU.s:50     .text:0000000000000040 .L0 
     /tmp/ccP4HCkU.s:55     .text:0000000000000044 .L0 
     /tmp/ccP4HCkU.s:63     .text:0000000000000048 .L0 
     /tmp/ccP4HCkU.s:64     .text:0000000000000048 .L0 
     /tmp/ccP4HCkU.s:65     .text:0000000000000048 .L0 
     /tmp/ccP4HCkU.s:75     .text:0000000000000050 .L0 
     /tmp/ccP4HCkU.s:76     .text:0000000000000054 .L0 
     /tmp/ccP4HCkU.s:77     .text:0000000000000054 .L0 
     /tmp/ccP4HCkU.s:79     .text:0000000000000058 .L0 
     /tmp/ccP4HCkU.s:80     .text:0000000000000058 .L0 
     /tmp/ccP4HCkU.s:82     .text:000000000000005c .L0 
     /tmp/ccP4HCkU.s:84     .text:0000000000000060 .L0 
     /tmp/ccP4HCkU.s:86     .text:0000000000000064 .L0 
     /tmp/ccP4HCkU.s:89     .text:0000000000000068 .L0 
     /tmp/ccP4HCkU.s:95     .text:0000000000000068 .L0 
     /tmp/ccP4HCkU.s:96     .text:0000000000000068 .L0 
     /tmp/ccP4HCkU.s:97     .text:0000000000000068 .L0 
src/kernel/../../h/../h/riscv.hpp:169    .text:0000000000000068 .L0 
     /tmp/ccP4HCkU.s:105    .text:0000000000000070 .L0 
     /tmp/ccP4HCkU.s:106    .text:0000000000000070 .L0 
     /tmp/ccP4HCkU.s:113    .text:0000000000000074 .L0 
     /tmp/ccP4HCkU.s:114    .text:0000000000000074 .L0 
src/kernel/../../h/../h/riscv.hpp:113    .text:0000000000000074 .L0 
     /tmp/ccP4HCkU.s:122    .text:000000000000007c .L0 
     /tmp/ccP4HCkU.s:123    .text:000000000000007c .L0 
     /tmp/ccP4HCkU.s:128    .text:0000000000000080 .L0 
     /tmp/ccP4HCkU.s:129    .text:0000000000000080 .L0 
     /tmp/ccP4HCkU.s:131    .text:0000000000000088 .L0 
     /tmp/ccP4HCkU.s:132    .text:0000000000000088 .L0 
     /tmp/ccP4HCkU.s:137    .text:0000000000000090 .L0 
     /tmp/ccP4HCkU.s:138    .text:0000000000000090 .L0 
src/kernel/../../h/../h/riscv.hpp:164    .text:0000000000000090 .L0 
     /tmp/ccP4HCkU.s:150    .text:0000000000000094 .L0 
     /tmp/ccP4HCkU.s:151    .text:0000000000000094 .L0 
src/kernel/../../h/../h/riscv.hpp:108    .text:0000000000000094 .L0 
     /tmp/ccP4HCkU.s:162    .text:000000000000009c .L0 
     /tmp/ccP4HCkU.s:168    .text:000000000000009c _Z8usrEcallmmmmm
     /tmp/ccP4HCkU.s:171    .text:000000000000009c .L0 
     /tmp/ccP4HCkU.s:173    .text:000000000000009c .L0 
GAS LISTING /tmp/ccP4HCkU.s 			page 51


     /tmp/ccP4HCkU.s:174    .text:00000000000000a0 .L0 
     /tmp/ccP4HCkU.s:183    .text:00000000000000c0 .L0 
     /tmp/ccP4HCkU.s:184    .text:00000000000000c0 .L0 
     /tmp/ccP4HCkU.s:185    .text:00000000000000c0 .L0 
     /tmp/ccP4HCkU.s:186    .text:00000000000000c0 .L0 
     /tmp/ccP4HCkU.s:187    .text:00000000000000c0 .L0 
     /tmp/ccP4HCkU.s:188    .text:00000000000000c0 .L0 
     /tmp/ccP4HCkU.s:189    .text:00000000000000c0 .L0 
     /tmp/ccP4HCkU.s:190    .text:00000000000000c0 .L0 
     /tmp/ccP4HCkU.s:192    .text:00000000000000c4 .L0 
     /tmp/ccP4HCkU.s:197    .text:00000000000000c8 .L0 
     /tmp/ccP4HCkU.s:198    .text:00000000000000c8 .L0 
     /tmp/ccP4HCkU.s:199    .text:00000000000000c8 .L0 
src/kernel/../../h/../h/riscv.hpp:113    .text:00000000000000c8 .L0 
     /tmp/ccP4HCkU.s:207    .text:00000000000000d0 .L0 
     /tmp/ccP4HCkU.s:208    .text:00000000000000d0 .L0 
     /tmp/ccP4HCkU.s:212    .text:00000000000000d4 .L0 
     /tmp/ccP4HCkU.s:217    .text:00000000000000d8 .L0 
     /tmp/ccP4HCkU.s:218    .text:00000000000000d8 .L0 
src/kernel/../../h/../h/riscv.hpp:169    .text:00000000000000d8 .L0 
     /tmp/ccP4HCkU.s:226    .text:00000000000000e0 .L0 
     /tmp/ccP4HCkU.s:227    .text:00000000000000e0 .L0 
     /tmp/ccP4HCkU.s:233    .text:00000000000000e4 .L0 
     /tmp/ccP4HCkU.s:241    .text:00000000000000f4 .L0 
     /tmp/ccP4HCkU.s:249    .text:00000000000000fc .L0 
     /tmp/ccP4HCkU.s:259    .text:0000000000000104 .L0 
     /tmp/ccP4HCkU.s:271    .text:000000000000010c .L0 
     /tmp/ccP4HCkU.s:285    .text:0000000000000114 .L0 
     /tmp/ccP4HCkU.s:301    .text:000000000000011c .L0 
     /tmp/ccP4HCkU.s:319    .text:0000000000000124 .L0 
     /tmp/ccP4HCkU.s:339    .text:000000000000012c .L0 
     /tmp/ccP4HCkU.s:361    .text:0000000000000134 .L0 
     /tmp/ccP4HCkU.s:364    .text:000000000000013c .L0 
     /tmp/ccP4HCkU.s:367    .text:0000000000000144 .L0 
     /tmp/ccP4HCkU.s:370    .text:000000000000014c .L0 
     /tmp/ccP4HCkU.s:373    .text:0000000000000154 .L0 
     /tmp/ccP4HCkU.s:374    .text:0000000000000154 .L0 
     /tmp/ccP4HCkU.s:382    .text:0000000000000164 .L0 
     /tmp/ccP4HCkU.s:387    .text:0000000000000170 .L0 
     /tmp/ccP4HCkU.s:392    .text:0000000000000180 .L0 
     /tmp/ccP4HCkU.s:396    .text:000000000000018c .L0 
     /tmp/ccP4HCkU.s:398    .text:0000000000000190 .L0 
     /tmp/ccP4HCkU.s:401    .text:0000000000000198 .L0 
     /tmp/ccP4HCkU.s:403    .text:000000000000019c .L0 
     /tmp/ccP4HCkU.s:409    .text:00000000000001b0 .L0 
     /tmp/ccP4HCkU.s:411    .text:00000000000001b4 .L0 
     /tmp/ccP4HCkU.s:415    .text:00000000000001c0 .L0 
     /tmp/ccP4HCkU.s:431    .text:00000000000001cc .L0 
     /tmp/ccP4HCkU.s:437    .text:00000000000001d4 .L0 
     /tmp/ccP4HCkU.s:438    .text:00000000000001d4 .L0 
     /tmp/ccP4HCkU.s:441    .text:00000000000001dc .L0 
     /tmp/ccP4HCkU.s:449    .text:00000000000001e8 .L0 
     /tmp/ccP4HCkU.s:450    .text:00000000000001e8 .L0 
src/kernel/../../h/../h/riscv.hpp:164    .text:00000000000001e8 .L0 
     /tmp/ccP4HCkU.s:462    .text:00000000000001ec .L0 
     /tmp/ccP4HCkU.s:463    .text:00000000000001ec .L0 
src/kernel/../../h/../h/riscv.hpp:108    .text:00000000000001ec .L0 
GAS LISTING /tmp/ccP4HCkU.s 			page 52


     /tmp/ccP4HCkU.s:473    .text:00000000000001f0 .L0 
     /tmp/ccP4HCkU.s:474    .text:00000000000001f0 .L0 
     /tmp/ccP4HCkU.s:475    .text:00000000000001f4 .L0 
     /tmp/ccP4HCkU.s:476    .text:00000000000001f4 .L0 
     /tmp/ccP4HCkU.s:478    .text:00000000000001f8 .L0 
     /tmp/ccP4HCkU.s:479    .text:00000000000001f8 .L0 
     /tmp/ccP4HCkU.s:481    .text:00000000000001fc .L0 
     /tmp/ccP4HCkU.s:483    .text:0000000000000200 .L0 
     /tmp/ccP4HCkU.s:486    .text:0000000000000204 .L0 
     /tmp/ccP4HCkU.s:489    .text:0000000000000208 .L0 
     /tmp/ccP4HCkU.s:491    .text:000000000000020c .L0 
     /tmp/ccP4HCkU.s:493    .text:0000000000000210 .L0 
     /tmp/ccP4HCkU.s:495    .text:0000000000000214 .L0 
     /tmp/ccP4HCkU.s:499    .text:0000000000000218 .L0 
     /tmp/ccP4HCkU.s:503    .text:0000000000000218 .L0 
     /tmp/ccP4HCkU.s:504    .text:0000000000000218 .L0 
     /tmp/ccP4HCkU.s:507    .text:0000000000000220 .L0 
     /tmp/ccP4HCkU.s:516    .text:0000000000000230 .L0 
     /tmp/ccP4HCkU.s:517    .text:0000000000000230 .L0 
     /tmp/ccP4HCkU.s:518    .text:0000000000000230 .L0 
     /tmp/ccP4HCkU.s:526    .text:0000000000000244 .L0 
     /tmp/ccP4HCkU.s:528    .text:0000000000000248 .L0 
     /tmp/ccP4HCkU.s:530    .text:000000000000024c .L0 
     /tmp/ccP4HCkU.s:534    .text:0000000000000254 .L0 
     /tmp/ccP4HCkU.s:541    .text:000000000000025c .L0 
     /tmp/ccP4HCkU.s:542    .text:000000000000025c .L0 
     /tmp/ccP4HCkU.s:548    .text:0000000000000268 .L0 
     /tmp/ccP4HCkU.s:549    .text:0000000000000268 .L0 
     /tmp/ccP4HCkU.s:556    .text:0000000000000270 .L0 
     /tmp/ccP4HCkU.s:557    .text:0000000000000270 .L0 
     /tmp/ccP4HCkU.s:564    .text:0000000000000278 .L0 
     /tmp/ccP4HCkU.s:574    .text:0000000000000280 .L0 
     /tmp/ccP4HCkU.s:575    .text:0000000000000280 .L0 
     /tmp/ccP4HCkU.s:577    .text:0000000000000288 .L0 
     /tmp/ccP4HCkU.s:578    .text:0000000000000288 .L0 
     /tmp/ccP4HCkU.s:586    .text:0000000000000290 .L0 
     /tmp/ccP4HCkU.s:597    .text:0000000000000298 .L0 
     /tmp/ccP4HCkU.s:598    .text:0000000000000298 .L0 
     /tmp/ccP4HCkU.s:608    .text:00000000000002a4 .L0 
     /tmp/ccP4HCkU.s:621    .text:00000000000002ac .L0 
     /tmp/ccP4HCkU.s:625    .text:00000000000002ac .L0 
     /tmp/ccP4HCkU.s:626    .text:00000000000002ac .L0 
     /tmp/ccP4HCkU.s:627    .text:00000000000002ac .L0 
     /tmp/ccP4HCkU.s:630    .text:00000000000002b4 .L0 
     /tmp/ccP4HCkU.s:639    .text:00000000000002c0 .L0 
     /tmp/ccP4HCkU.s:645    .text:00000000000002c4 .L0 
     /tmp/ccP4HCkU.s:652    .text:00000000000002d0 .L0 
     /tmp/ccP4HCkU.s:653    .text:00000000000002d0 .L0 
     /tmp/ccP4HCkU.s:657    .text:00000000000002e0 .L0 
     /tmp/ccP4HCkU.s:658    .text:00000000000002e0 .L0 
     /tmp/ccP4HCkU.s:663    .text:00000000000002e4 .L0 
     /tmp/ccP4HCkU.s:665    .text:00000000000002e8 .L0 
     /tmp/ccP4HCkU.s:667    .text:00000000000002e8 .L0 
     /tmp/ccP4HCkU.s:668    .text:00000000000002e8 .L0 
     /tmp/ccP4HCkU.s:676    .text:00000000000002f0 .L0 
     /tmp/ccP4HCkU.s:677    .text:00000000000002f0 .L0 
     /tmp/ccP4HCkU.s:678    .text:00000000000002f0 .L0 
GAS LISTING /tmp/ccP4HCkU.s 			page 53


     /tmp/ccP4HCkU.s:688    .text:0000000000000300 .L0 
     /tmp/ccP4HCkU.s:689    .text:0000000000000300 .L0 
     /tmp/ccP4HCkU.s:690    .text:0000000000000300 .L0 
     /tmp/ccP4HCkU.s:694    .text:000000000000030c .L0 
     /tmp/ccP4HCkU.s:696    .text:0000000000000310 .L0 
     /tmp/ccP4HCkU.s:700    .text:0000000000000318 .L0 
     /tmp/ccP4HCkU.s:701    .text:0000000000000318 .L0 
     /tmp/ccP4HCkU.s:711    .text:0000000000000328 .L0 
     /tmp/ccP4HCkU.s:712    .text:0000000000000328 .L0 
     /tmp/ccP4HCkU.s:713    .text:0000000000000328 .L0 
     /tmp/ccP4HCkU.s:717    .text:0000000000000334 .L0 
     /tmp/ccP4HCkU.s:719    .text:0000000000000338 .L0 
     /tmp/ccP4HCkU.s:723    .text:0000000000000340 .L0 
     /tmp/ccP4HCkU.s:724    .text:0000000000000340 .L0 
     /tmp/ccP4HCkU.s:732    .text:0000000000000350 .L0 
     /tmp/ccP4HCkU.s:733    .text:0000000000000350 .L0 
     /tmp/ccP4HCkU.s:747    .text:000000000000035c .L0 
     /tmp/ccP4HCkU.s:762    .text:0000000000000364 .L0 
     /tmp/ccP4HCkU.s:763    .text:0000000000000364 .L0 
     /tmp/ccP4HCkU.s:769    .text:0000000000000370 .L0 
     /tmp/ccP4HCkU.s:773    .text:000000000000037c .L0 
     /tmp/ccP4HCkU.s:779    .text:000000000000038c .L0 
     /tmp/ccP4HCkU.s:783    .text:0000000000000398 .L0 
     /tmp/ccP4HCkU.s:785    .text:000000000000039c .L0 
     /tmp/ccP4HCkU.s:789    .text:00000000000003a4 .L0 
     /tmp/ccP4HCkU.s:791    .text:00000000000003a8 .L0 
     /tmp/ccP4HCkU.s:797    .text:00000000000003bc .L0 
     /tmp/ccP4HCkU.s:799    .text:00000000000003c0 .L0 
     /tmp/ccP4HCkU.s:803    .text:00000000000003cc .L0 
     /tmp/ccP4HCkU.s:809    .text:00000000000003d8 .L0 
     /tmp/ccP4HCkU.s:822    .text:00000000000003e0 .L0 
     /tmp/ccP4HCkU.s:828    .text:00000000000003e0 _Z8sysEcallmmmmm
     /tmp/ccP4HCkU.s:831    .text:00000000000003e0 .L0 
     /tmp/ccP4HCkU.s:833    .text:00000000000003e0 .L0 
     /tmp/ccP4HCkU.s:834    .text:00000000000003e4 .L0 
     /tmp/ccP4HCkU.s:842    .text:0000000000000400 .L0 
     /tmp/ccP4HCkU.s:843    .text:0000000000000400 .L0 
     /tmp/ccP4HCkU.s:844    .text:0000000000000400 .L0 
     /tmp/ccP4HCkU.s:845    .text:0000000000000400 .L0 
     /tmp/ccP4HCkU.s:846    .text:0000000000000400 .L0 
     /tmp/ccP4HCkU.s:847    .text:0000000000000400 .L0 
     /tmp/ccP4HCkU.s:848    .text:0000000000000400 .L0 
     /tmp/ccP4HCkU.s:850    .text:0000000000000404 .L0 
     /tmp/ccP4HCkU.s:855    .text:0000000000000408 .L0 
     /tmp/ccP4HCkU.s:856    .text:0000000000000408 .L0 
     /tmp/ccP4HCkU.s:857    .text:0000000000000408 .L0 
src/kernel/../../h/../h/riscv.hpp:113    .text:0000000000000408 .L0 
     /tmp/ccP4HCkU.s:865    .text:0000000000000410 .L0 
     /tmp/ccP4HCkU.s:866    .text:0000000000000410 .L0 
     /tmp/ccP4HCkU.s:870    .text:0000000000000414 .L0 
     /tmp/ccP4HCkU.s:875    .text:0000000000000418 .L0 
     /tmp/ccP4HCkU.s:876    .text:0000000000000418 .L0 
src/kernel/../../h/../h/riscv.hpp:169    .text:0000000000000418 .L0 
     /tmp/ccP4HCkU.s:884    .text:0000000000000420 .L0 
     /tmp/ccP4HCkU.s:885    .text:0000000000000420 .L0 
     /tmp/ccP4HCkU.s:891    .text:0000000000000424 .L0 
     /tmp/ccP4HCkU.s:899    .text:0000000000000434 .L0 
GAS LISTING /tmp/ccP4HCkU.s 			page 54


     /tmp/ccP4HCkU.s:907    .text:000000000000043c .L0 
     /tmp/ccP4HCkU.s:917    .text:0000000000000444 .L0 
     /tmp/ccP4HCkU.s:929    .text:000000000000044c .L0 
     /tmp/ccP4HCkU.s:943    .text:0000000000000454 .L0 
     /tmp/ccP4HCkU.s:959    .text:000000000000045c .L0 
     /tmp/ccP4HCkU.s:977    .text:0000000000000464 .L0 
     /tmp/ccP4HCkU.s:997    .text:000000000000046c .L0 
     /tmp/ccP4HCkU.s:1019   .text:0000000000000474 .L0 
     /tmp/ccP4HCkU.s:1022   .text:000000000000047c .L0 
     /tmp/ccP4HCkU.s:1025   .text:0000000000000484 .L0 
     /tmp/ccP4HCkU.s:1028   .text:000000000000048c .L0 
     /tmp/ccP4HCkU.s:1031   .text:0000000000000494 .L0 
     /tmp/ccP4HCkU.s:1032   .text:0000000000000494 .L0 
     /tmp/ccP4HCkU.s:1040   .text:00000000000004a4 .L0 
     /tmp/ccP4HCkU.s:1045   .text:00000000000004b0 .L0 
     /tmp/ccP4HCkU.s:1051   .text:00000000000004c0 .L0 
     /tmp/ccP4HCkU.s:1055   .text:00000000000004cc .L0 
     /tmp/ccP4HCkU.s:1057   .text:00000000000004d0 .L0 
     /tmp/ccP4HCkU.s:1060   .text:00000000000004d8 .L0 
     /tmp/ccP4HCkU.s:1062   .text:00000000000004dc .L0 
     /tmp/ccP4HCkU.s:1068   .text:00000000000004f0 .L0 
     /tmp/ccP4HCkU.s:1070   .text:00000000000004f4 .L0 
     /tmp/ccP4HCkU.s:1074   .text:0000000000000500 .L0 
     /tmp/ccP4HCkU.s:1090   .text:000000000000050c .L0 
     /tmp/ccP4HCkU.s:1096   .text:0000000000000514 .L0 
     /tmp/ccP4HCkU.s:1097   .text:0000000000000514 .L0 
     /tmp/ccP4HCkU.s:1100   .text:000000000000051c .L0 
     /tmp/ccP4HCkU.s:1108   .text:0000000000000528 .L0 
     /tmp/ccP4HCkU.s:1109   .text:0000000000000528 .L0 
src/kernel/../../h/../h/riscv.hpp:108    .text:0000000000000528 .L0 
     /tmp/ccP4HCkU.s:1119   .text:000000000000052c .L0 
     /tmp/ccP4HCkU.s:1120   .text:000000000000052c .L0 
     /tmp/ccP4HCkU.s:1121   .text:0000000000000530 .L0 
     /tmp/ccP4HCkU.s:1122   .text:0000000000000530 .L0 
     /tmp/ccP4HCkU.s:1124   .text:0000000000000534 .L0 
     /tmp/ccP4HCkU.s:1125   .text:0000000000000534 .L0 
     /tmp/ccP4HCkU.s:1127   .text:0000000000000538 .L0 
     /tmp/ccP4HCkU.s:1129   .text:000000000000053c .L0 
     /tmp/ccP4HCkU.s:1132   .text:0000000000000540 .L0 
     /tmp/ccP4HCkU.s:1134   .text:0000000000000544 .L0 
     /tmp/ccP4HCkU.s:1136   .text:0000000000000548 .L0 
     /tmp/ccP4HCkU.s:1138   .text:000000000000054c .L0 
     /tmp/ccP4HCkU.s:1142   .text:0000000000000550 .L0 
     /tmp/ccP4HCkU.s:1146   .text:0000000000000550 .L0 
     /tmp/ccP4HCkU.s:1147   .text:0000000000000550 .L0 
     /tmp/ccP4HCkU.s:1150   .text:0000000000000558 .L0 
     /tmp/ccP4HCkU.s:1159   .text:0000000000000568 .L0 
     /tmp/ccP4HCkU.s:1160   .text:0000000000000568 .L0 
     /tmp/ccP4HCkU.s:1161   .text:0000000000000568 .L0 
     /tmp/ccP4HCkU.s:1169   .text:000000000000057c .L0 
     /tmp/ccP4HCkU.s:1171   .text:0000000000000580 .L0 
     /tmp/ccP4HCkU.s:1173   .text:0000000000000584 .L0 
     /tmp/ccP4HCkU.s:1177   .text:000000000000058c .L0 
     /tmp/ccP4HCkU.s:1184   .text:0000000000000594 .L0 
     /tmp/ccP4HCkU.s:1185   .text:0000000000000594 .L0 
     /tmp/ccP4HCkU.s:1191   .text:00000000000005a0 .L0 
     /tmp/ccP4HCkU.s:1192   .text:00000000000005a0 .L0 
GAS LISTING /tmp/ccP4HCkU.s 			page 55


     /tmp/ccP4HCkU.s:1199   .text:00000000000005a8 .L0 
     /tmp/ccP4HCkU.s:1200   .text:00000000000005a8 .L0 
     /tmp/ccP4HCkU.s:1205   .text:00000000000005b0 .L0 
     /tmp/ccP4HCkU.s:1206   .text:00000000000005b0 .L0 
src/kernel/../../h/../h/riscv.hpp:164    .text:00000000000005b0 .L0 
     /tmp/ccP4HCkU.s:1219   .text:00000000000005b4 .L0 
     /tmp/ccP4HCkU.s:1229   .text:00000000000005bc .L0 
     /tmp/ccP4HCkU.s:1230   .text:00000000000005bc .L0 
     /tmp/ccP4HCkU.s:1232   .text:00000000000005c4 .L0 
     /tmp/ccP4HCkU.s:1233   .text:00000000000005c4 .L0 
     /tmp/ccP4HCkU.s:1238   .text:00000000000005cc .L0 
     /tmp/ccP4HCkU.s:1239   .text:00000000000005cc .L0 
src/kernel/../../h/../h/riscv.hpp:164    .text:00000000000005cc .L0 
     /tmp/ccP4HCkU.s:1253   .text:00000000000005d0 .L0 
     /tmp/ccP4HCkU.s:1264   .text:00000000000005d8 .L0 
     /tmp/ccP4HCkU.s:1265   .text:00000000000005d8 .L0 
     /tmp/ccP4HCkU.s:1275   .text:00000000000005e4 .L0 
     /tmp/ccP4HCkU.s:1288   .text:00000000000005ec .L0 
     /tmp/ccP4HCkU.s:1291   .text:00000000000005ec .L0 
     /tmp/ccP4HCkU.s:1292   .text:00000000000005ec .L0 
     /tmp/ccP4HCkU.s:1293   .text:00000000000005ec .L0 
     /tmp/ccP4HCkU.s:1296   .text:00000000000005f4 .L0 
     /tmp/ccP4HCkU.s:1304   .text:0000000000000600 .L0 
     /tmp/ccP4HCkU.s:1309   .text:0000000000000604 .L0 
     /tmp/ccP4HCkU.s:1316   .text:0000000000000610 .L0 
     /tmp/ccP4HCkU.s:1317   .text:0000000000000610 .L0 
     /tmp/ccP4HCkU.s:1321   .text:0000000000000620 .L0 
     /tmp/ccP4HCkU.s:1322   .text:0000000000000620 .L0 
     /tmp/ccP4HCkU.s:1327   .text:0000000000000624 .L0 
     /tmp/ccP4HCkU.s:1337   .text:0000000000000628 .L0 
     /tmp/ccP4HCkU.s:1351   .text:0000000000000630 .L0 
     /tmp/ccP4HCkU.s:1352   .text:0000000000000630 .L0 
     /tmp/ccP4HCkU.s:1353   .text:0000000000000630 .L0 
     /tmp/ccP4HCkU.s:1355   .text:0000000000000634 .L0 
     /tmp/ccP4HCkU.s:1361   .text:0000000000000640 .L0 
     /tmp/ccP4HCkU.s:1362   .text:0000000000000640 .L0 
     /tmp/ccP4HCkU.s:1365   .text:0000000000000648 .L0 
     /tmp/ccP4HCkU.s:1380   .text:0000000000000654 .L0 
     /tmp/ccP4HCkU.s:1395   .text:000000000000065c .L0 
     /tmp/ccP4HCkU.s:1396   .text:000000000000065c .L0 
     /tmp/ccP4HCkU.s:1397   .text:000000000000065c .L0 
     /tmp/ccP4HCkU.s:1403   .text:0000000000000668 .L0 
     /tmp/ccP4HCkU.s:1404   .text:0000000000000668 .L0 
src/kernel/../../h/../h/riscv.hpp:164    .text:0000000000000668 .L0 
     /tmp/ccP4HCkU.s:1419   .text:0000000000000670 .L0 
     /tmp/ccP4HCkU.s:1420   .text:0000000000000670 .L0 
     /tmp/ccP4HCkU.s:1421   .text:0000000000000670 .L0 
     /tmp/ccP4HCkU.s:1436   .text:000000000000067c .L0 
     /tmp/ccP4HCkU.s:1451   .text:0000000000000684 .L0 
     /tmp/ccP4HCkU.s:1452   .text:0000000000000684 .L0 
     /tmp/ccP4HCkU.s:1458   .text:0000000000000690 .L0 
     /tmp/ccP4HCkU.s:1459   .text:0000000000000690 .L0 
src/kernel/../../h/../h/riscv.hpp:164    .text:0000000000000690 .L0 
     /tmp/ccP4HCkU.s:1478   .text:0000000000000694 .L0 
     /tmp/ccP4HCkU.s:1493   .text:000000000000069c .L0 
     /tmp/ccP4HCkU.s:1494   .text:000000000000069c .L0 
     /tmp/ccP4HCkU.s:1500   .text:00000000000006a8 .L0 
GAS LISTING /tmp/ccP4HCkU.s 			page 56


     /tmp/ccP4HCkU.s:1504   .text:00000000000006b4 .L0 
     /tmp/ccP4HCkU.s:1510   .text:00000000000006c4 .L0 
     /tmp/ccP4HCkU.s:1514   .text:00000000000006d0 .L0 
     /tmp/ccP4HCkU.s:1516   .text:00000000000006d4 .L0 
     /tmp/ccP4HCkU.s:1520   .text:00000000000006dc .L0 
     /tmp/ccP4HCkU.s:1522   .text:00000000000006e0 .L0 
     /tmp/ccP4HCkU.s:1528   .text:00000000000006f4 .L0 
     /tmp/ccP4HCkU.s:1530   .text:00000000000006f8 .L0 
     /tmp/ccP4HCkU.s:1534   .text:0000000000000704 .L0 
     /tmp/ccP4HCkU.s:1540   .text:0000000000000710 .L0 
     /tmp/ccP4HCkU.s:1553   .text:0000000000000718 .L0 
     /tmp/ccP4HCkU.s:1559   .text:0000000000000718 interrupt
     /tmp/ccP4HCkU.s:1562   .text:0000000000000718 .L0 
     /tmp/ccP4HCkU.s:1564   .text:0000000000000718 .L0 
     /tmp/ccP4HCkU.s:1565   .text:000000000000071c .L0 
     /tmp/ccP4HCkU.s:1570   .text:000000000000072c .L0 
     /tmp/ccP4HCkU.s:1571   .text:000000000000072c .L0 
     /tmp/ccP4HCkU.s:1572   .text:000000000000072c .L0 
     /tmp/ccP4HCkU.s:1573   .text:000000000000072c .L0 
     /tmp/ccP4HCkU.s:1575   .text:0000000000000730 .L0 
     /tmp/ccP4HCkU.s:1579   .text:0000000000000730 .L0 
     /tmp/ccP4HCkU.s:1580   .text:0000000000000730 .L0 
     /tmp/ccP4HCkU.s:1581   .text:0000000000000730 .L0 
src/kernel/../../h/../h/riscv.hpp:103    .text:0000000000000730 .L0 
     /tmp/ccP4HCkU.s:1589   .text:0000000000000738 .L0 
     /tmp/ccP4HCkU.s:1590   .text:0000000000000738 .L0 
     /tmp/ccP4HCkU.s:1596   .text:000000000000073c .L0 
     /tmp/ccP4HCkU.s:1602   .text:0000000000000744 .L0 
     /tmp/ccP4HCkU.s:1610   .text:000000000000074c .L0 
     /tmp/ccP4HCkU.s:1622   .text:000000000000075c .L0 
     /tmp/ccP4HCkU.s:1636   .text:000000000000076c .L0 
     /tmp/ccP4HCkU.s:1639   .text:0000000000000774 .L0 
     /tmp/ccP4HCkU.s:1642   .text:000000000000077c .L0 
     /tmp/ccP4HCkU.s:1657   .text:0000000000000784 .L0 
     /tmp/ccP4HCkU.s:1658   .text:0000000000000784 .L0 
     /tmp/ccP4HCkU.s:1664   .text:0000000000000790 .L0 
     /tmp/ccP4HCkU.s:1665   .text:0000000000000790 .L0 
     /tmp/ccP4HCkU.s:1670   .text:0000000000000794 .L0 
     /tmp/ccP4HCkU.s:1673   .text:0000000000000798 .L0 
     /tmp/ccP4HCkU.s:1674   .text:0000000000000798 .L0 
src/kernel/interrupt_cpp.cpp:256    .text:0000000000000798 .L0 
     /tmp/ccP4HCkU.s:1681   .text:000000000000079c .L0 
     /tmp/ccP4HCkU.s:1683   .text:000000000000079c .L0 
     /tmp/ccP4HCkU.s:1688   .text:00000000000007ac .L0 
     /tmp/ccP4HCkU.s:1689   .text:00000000000007ac .L0 
     /tmp/ccP4HCkU.s:1693   .text:00000000000007bc .L0 
     /tmp/ccP4HCkU.s:1694   .text:00000000000007bc .L0 
     /tmp/ccP4HCkU.s:1699   .text:00000000000007cc .L0 
     /tmp/ccP4HCkU.s:1700   .text:00000000000007cc .L0 
     /tmp/ccP4HCkU.s:1704   .text:00000000000007dc .L0 
     /tmp/ccP4HCkU.s:1705   .text:00000000000007dc .L0 
     /tmp/ccP4HCkU.s:1711   .text:00000000000007ec .L0 
     /tmp/ccP4HCkU.s:1712   .text:00000000000007ec .L0 
     /tmp/ccP4HCkU.s:1713   .text:00000000000007ec .L0 
src/kernel/../../h/../h/riscv.hpp:113    .text:00000000000007ec .L0 
     /tmp/ccP4HCkU.s:1721   .text:00000000000007f4 .L0 
     /tmp/ccP4HCkU.s:1722   .text:00000000000007f4 .L0 
GAS LISTING /tmp/ccP4HCkU.s 			page 57


     /tmp/ccP4HCkU.s:1726   .text:00000000000007f8 .L0 
     /tmp/ccP4HCkU.s:1730   .text:0000000000000804 .L0 
     /tmp/ccP4HCkU.s:1731   .text:0000000000000804 .L0 
     /tmp/ccP4HCkU.s:1735   .text:0000000000000814 .L0 
     /tmp/ccP4HCkU.s:1736   .text:0000000000000814 .L0 
     /tmp/ccP4HCkU.s:1740   .text:0000000000000824 .L0 
     /tmp/ccP4HCkU.s:1741   .text:0000000000000824 .L0 
     /tmp/ccP4HCkU.s:1746   .text:0000000000000834 .L0 
     /tmp/ccP4HCkU.s:1747   .text:0000000000000834 .L0 
     /tmp/ccP4HCkU.s:1751   .text:0000000000000844 .L0 
     /tmp/ccP4HCkU.s:1752   .text:0000000000000844 .L0 
     /tmp/ccP4HCkU.s:1758   .text:0000000000000850 .L0 
     /tmp/ccP4HCkU.s:1759   .text:0000000000000850 .L0 
     /tmp/ccP4HCkU.s:1765   .text:0000000000000858 .L0 
     /tmp/ccP4HCkU.s:1766   .text:0000000000000858 .L0 
     /tmp/ccP4HCkU.s:1778   .text:0000000000000864 .L0 
     /tmp/ccP4HCkU.s:1779   .text:0000000000000864 .L0 
     /tmp/ccP4HCkU.s:1782   .text:000000000000086c .L0 
src/kernel/interrupt_cpp.cpp:228    .text:000000000000086c .L0 
     /tmp/ccP4HCkU.s:1792   .text:0000000000000870 .L0 
     /tmp/ccP4HCkU.s:1793   .text:0000000000000874 .L0 
     /tmp/ccP4HCkU.s:1794   .text:0000000000000874 .L0 
     /tmp/ccP4HCkU.s:1796   .text:0000000000000878 .L0 
     /tmp/ccP4HCkU.s:1797   .text:0000000000000878 .L0 
     /tmp/ccP4HCkU.s:1799   .text:000000000000087c .L0 
     /tmp/ccP4HCkU.s:1802   .text:0000000000000880 .L0 
     /tmp/ccP4HCkU.s:1804   .text:0000000000000884 .L0 
     /tmp/ccP4HCkU.s:1808   .text:0000000000000888 .L0 
     /tmp/ccP4HCkU.s:1812   .text:0000000000000888 .L0 
     /tmp/ccP4HCkU.s:1813   .text:0000000000000888 .L0 
     /tmp/ccP4HCkU.s:1816   .text:0000000000000890 .L0 
src/kernel/interrupt_cpp.cpp:235    .text:0000000000000890 .L0 
     /tmp/ccP4HCkU.s:1827   .text:0000000000000898 .L0 
     /tmp/ccP4HCkU.s:1828   .text:0000000000000898 .L0 
     /tmp/ccP4HCkU.s:1835   .text:00000000000008a4 .L0 
     /tmp/ccP4HCkU.s:1836   .text:00000000000008a4 .L0 
     /tmp/ccP4HCkU.s:1844   .text:00000000000008b0 .L0 
     /tmp/ccP4HCkU.s:1845   .text:00000000000008b0 .L0 
     /tmp/ccP4HCkU.s:1850   .text:00000000000008c0 .L0 
     /tmp/ccP4HCkU.s:1851   .text:00000000000008c0 .L0 
     /tmp/ccP4HCkU.s:1860   .text:00000000000008c8 .L0 
     /tmp/ccP4HCkU.s:1861   .text:00000000000008cc .L0 
     /tmp/ccP4HCkU.s:1893   .text:00000000000008cc .L0 
     /tmp/ccP4HCkU.s:35     .text:0000000000000020 .L0 
     /tmp/ccP4HCkU.s:42     .text:0000000000000034 .L0 
     /tmp/ccP4HCkU.s:129    .text:0000000000000080 .L0 
     /tmp/ccP4HCkU.s:374    .text:0000000000000154 .L0 
     /tmp/ccP4HCkU.s:542    .text:000000000000025c .L0 
     /tmp/ccP4HCkU.s:575    .text:0000000000000280 .L0 
     /tmp/ccP4HCkU.s:653    .text:00000000000002d0 .L0 
     /tmp/ccP4HCkU.s:763    .text:0000000000000364 .L0 
     /tmp/ccP4HCkU.s:1032   .text:0000000000000494 .L0 
     /tmp/ccP4HCkU.s:1185   .text:0000000000000594 .L0 
     /tmp/ccP4HCkU.s:1230   .text:00000000000005bc .L0 
     /tmp/ccP4HCkU.s:1317   .text:0000000000000610 .L0 
     /tmp/ccP4HCkU.s:1494   .text:000000000000069c .L0 
     /tmp/ccP4HCkU.s:1658   .text:0000000000000784 .L0 
GAS LISTING /tmp/ccP4HCkU.s 			page 58


     /tmp/ccP4HCkU.s:1866   .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccP4HCkU.s:1683   .text:000000000000079c .L0 
     /tmp/ccP4HCkU.s:1869   .rodata.str1.8:0000000000000038 .LC1
     /tmp/ccP4HCkU.s:1689   .text:00000000000007ac .L0 
     /tmp/ccP4HCkU.s:1872   .rodata.str1.8:0000000000000048 .LC2
     /tmp/ccP4HCkU.s:1700   .text:00000000000007cc .L0 
     /tmp/ccP4HCkU.s:1875   .rodata.str1.8:0000000000000050 .LC3
     /tmp/ccP4HCkU.s:1705   .text:00000000000007dc .L0 
     /tmp/ccP4HCkU.s:1731   .text:0000000000000804 .L0 
     /tmp/ccP4HCkU.s:1878   .rodata.str1.8:0000000000000058 .LC4
     /tmp/ccP4HCkU.s:1736   .text:0000000000000814 .L0 
     /tmp/ccP4HCkU.s:1880   .rodata.str1.8:0000000000000060 .LC5
     /tmp/ccP4HCkU.s:1747   .text:0000000000000834 .L0 
     /tmp/ccP4HCkU.s:1752   .text:0000000000000844 .L0 
     /tmp/ccP4HCkU.s:1883   .rodata.str1.8:0000000000000068 .LC6
     /tmp/ccP4HCkU.s:1845   .text:00000000000008b0 .L0 
     /tmp/ccP4HCkU.s:88     .text:0000000000000068 .L4
     /tmp/ccP4HCkU.s:56     .text:0000000000000048 .L2
     /tmp/ccP4HCkU.s:434    .text:00000000000001d4 .L24
     /tmp/ccP4HCkU.s:498    .text:0000000000000218 .L25
     /tmp/ccP4HCkU.s:512    .text:0000000000000230 .L26
     /tmp/ccP4HCkU.s:537    .text:000000000000025c .L27
     /tmp/ccP4HCkU.s:571    .text:0000000000000280 .L28
     /tmp/ccP4HCkU.s:594    .text:0000000000000298 .L29
     /tmp/ccP4HCkU.s:617    .text:00000000000002ac .L30
     /tmp/ccP4HCkU.s:671    .text:00000000000002f0 .L31
     /tmp/ccP4HCkU.s:684    .text:0000000000000300 .L32
     /tmp/ccP4HCkU.s:706    .text:0000000000000328 .L33
     /tmp/ccP4HCkU.s:729    .text:0000000000000350 .L34
     /tmp/ccP4HCkU.s:760    .text:0000000000000364 .L35
     /tmp/ccP4HCkU.s:444    .text:00000000000001e8 .L7
     /tmp/ccP4HCkU.s:532    .text:0000000000000254 .L36
     /tmp/ccP4HCkU.s:698    .text:0000000000000318 .L37
     /tmp/ccP4HCkU.s:721    .text:0000000000000340 .L38
     /tmp/ccP4HCkU.s:1093   .text:0000000000000514 .L57
     /tmp/ccP4HCkU.s:1141   .text:0000000000000550 .L58
     /tmp/ccP4HCkU.s:1155   .text:0000000000000568 .L59
     /tmp/ccP4HCkU.s:1180   .text:0000000000000594 .L60
     /tmp/ccP4HCkU.s:1222   .text:00000000000005bc .L61
     /tmp/ccP4HCkU.s:1256   .text:00000000000005d8 .L62
     /tmp/ccP4HCkU.s:1284   .text:00000000000005ec .L63
     /tmp/ccP4HCkU.s:1347   .text:0000000000000630 .L64
     /tmp/ccP4HCkU.s:1383   .text:000000000000065c .L65
     /tmp/ccP4HCkU.s:1412   .text:0000000000000670 .L66
     /tmp/ccP4HCkU.s:1449   .text:0000000000000684 .L67
     /tmp/ccP4HCkU.s:1481   .text:000000000000069c .L68
     /tmp/ccP4HCkU.s:1103   .text:0000000000000528 .L41
     /tmp/ccP4HCkU.s:1175   .text:000000000000058c .L69
     /tmp/ccP4HCkU.s:1771   .text:0000000000000864 .L79
     /tmp/ccP4HCkU.s:1807   .text:0000000000000888 .L80
     /tmp/ccP4HCkU.s:1824   .text:0000000000000898 .L81
     /tmp/ccP4HCkU.s:1832   .text:00000000000008a4 .L82
     /tmp/ccP4HCkU.s:1644   .text:0000000000000784 .L76
     /tmp/ccP4HCkU.s:1789   .text:0000000000000870 .L70
     /tmp/ccP4HCkU.s:1840   .text:00000000000008b0 .L77
     /tmp/ccP4HCkU.s:5592   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccP4HCkU.s:9400   .debug_str:0000000000000758 .LASF299
GAS LISTING /tmp/ccP4HCkU.s 			page 59


     /tmp/ccP4HCkU.s:9192   .debug_str:000000000000011c .LASF300
     /tmp/ccP4HCkU.s:9548   .debug_str:0000000000000cd2 .LASF301
     /tmp/ccP4HCkU.s:8      .text:0000000000000000 .Ltext0
     /tmp/ccP4HCkU.s:1886   .text:00000000000008cc .Letext0
     /tmp/ccP4HCkU.s:9156   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccP4HCkU.s:9370   .debug_str:0000000000000689 .LASF0
     /tmp/ccP4HCkU.s:9416   .debug_str:000000000000087f .LASF1
     /tmp/ccP4HCkU.s:9562   .debug_str:0000000000000d56 .LASF2
     /tmp/ccP4HCkU.s:9578   .debug_str:0000000000000dd1 .LASF4
     /tmp/ccP4HCkU.s:9388   .debug_str:0000000000000700 .LASF3
     /tmp/ccP4HCkU.s:9180   .debug_str:00000000000000bc .LASF5
     /tmp/ccP4HCkU.s:9524   .debug_str:0000000000000c22 .LASF6
     /tmp/ccP4HCkU.s:9514   .debug_str:0000000000000bcc .LASF7
     /tmp/ccP4HCkU.s:9402   .debug_str:000000000000081c .LASF8
     /tmp/ccP4HCkU.s:9328   .debug_str:0000000000000537 .LASF9
     /tmp/ccP4HCkU.s:9344   .debug_str:00000000000005a9 .LASF10
     /tmp/ccP4HCkU.s:9240   .debug_str:0000000000000290 .LASF11
     /tmp/ccP4HCkU.s:9312   .debug_str:00000000000004e4 .LASF12
     /tmp/ccP4HCkU.s:9256   .debug_str:00000000000002df .LASF13
     /tmp/ccP4HCkU.s:9238   .debug_str:0000000000000280 .LASF14
     /tmp/ccP4HCkU.s:9626   .debug_str:0000000000000f2b .LASF15
     /tmp/ccP4HCkU.s:9292   .debug_str:000000000000041d .LASF16
     /tmp/ccP4HCkU.s:9608   .debug_str:0000000000000ea7 .LASF17
     /tmp/ccP4HCkU.s:9326   .debug_str:000000000000052b .LASF302
     /tmp/ccP4HCkU.s:9242   .debug_str:000000000000029f .LASF18
     /tmp/ccP4HCkU.s:9414   .debug_str:000000000000087a .LASF19
     /tmp/ccP4HCkU.s:9506   .debug_str:0000000000000b95 .LASF23
     /tmp/ccP4HCkU.s:9210   .debug_str:00000000000001ae .LASF20
     /tmp/ccP4HCkU.s:9604   .debug_str:0000000000000e8a .LASF21
     /tmp/ccP4HCkU.s:9486   .debug_str:0000000000000b03 .LASF22
     /tmp/ccP4HCkU.s:9698   .debug_str:000000000000115d .LASF126
     /tmp/ccP4HCkU.s:9200   .debug_str:0000000000000158 .LASF25
     /tmp/ccP4HCkU.s:9510   .debug_str:0000000000000bac .LASF24
     /tmp/ccP4HCkU.s:9422   .debug_str:00000000000008cb .LASF26
     /tmp/ccP4HCkU.s:9384   .debug_str:00000000000006de .LASF27
     /tmp/ccP4HCkU.s:9650   .debug_str:0000000000000fe1 .LASF28
     /tmp/ccP4HCkU.s:9394   .debug_str:0000000000000729 .LASF34
     /tmp/ccP4HCkU.s:9722   .debug_str:0000000000001216 .LASF29
     /tmp/ccP4HCkU.s:9752   .debug_str:00000000000012ed .LASF31
     /tmp/ccP4HCkU.s:9566   .debug_str:0000000000000d6b .LASF30
     /tmp/ccP4HCkU.s:9702   .debug_str:0000000000001171 .LASF32
     /tmp/ccP4HCkU.s:9300   .debug_str:0000000000000474 .LASF33
     /tmp/ccP4HCkU.s:9358   .debug_str:0000000000000613 .LASF35
     /tmp/ccP4HCkU.s:9742   .debug_str:0000000000001297 .LASF114
     /tmp/ccP4HCkU.s:9462   .debug_str:0000000000000a28 .LASF116
     /tmp/ccP4HCkU.s:9460   .debug_str:0000000000000a1e .LASF36
     /tmp/ccP4HCkU.s:9184   .debug_str:00000000000000ce .LASF37
     /tmp/ccP4HCkU.s:9636   .debug_str:0000000000000f88 .LASF38
     /tmp/ccP4HCkU.s:9308   .debug_str:00000000000004b2 .LASF39
     /tmp/ccP4HCkU.s:9730   .debug_str:0000000000001241 .LASF40
     /tmp/ccP4HCkU.s:9272   .debug_str:0000000000000375 .LASF41
     /tmp/ccP4HCkU.s:9262   .debug_str:000000000000032c .LASF47
     /tmp/ccP4HCkU.s:9218   .debug_str:00000000000001d6 .LASF49
     /tmp/ccP4HCkU.s:9444   .debug_str:00000000000009aa .LASF42
     /tmp/ccP4HCkU.s:9684   .debug_str:0000000000001113 .LASF43
     /tmp/ccP4HCkU.s:9616   .debug_str:0000000000000ee3 .LASF44
     /tmp/ccP4HCkU.s:9476   .debug_str:0000000000000ac9 .LASF45
GAS LISTING /tmp/ccP4HCkU.s 			page 60


     /tmp/ccP4HCkU.s:9670   .debug_str:00000000000010a2 .LASF46
     /tmp/ccP4HCkU.s:9694   .debug_str:0000000000001140 .LASF48
     /tmp/ccP4HCkU.s:9430   .debug_str:0000000000000926 .LASF50
     /tmp/ccP4HCkU.s:9766   .debug_str:0000000000001361 .LASF51
     /tmp/ccP4HCkU.s:9458   .debug_str:0000000000000a0d .LASF52
     /tmp/ccP4HCkU.s:9224   .debug_str:0000000000000214 .LASF53
     /tmp/ccP4HCkU.s:9446   .debug_str:00000000000009af .LASF54
     /tmp/ccP4HCkU.s:9168   .debug_str:000000000000004e .LASF55
     /tmp/ccP4HCkU.s:9456   .debug_str:00000000000009fb .LASF56
     /tmp/ccP4HCkU.s:9606   .debug_str:0000000000000e94 .LASF57
     /tmp/ccP4HCkU.s:9516   .debug_str:0000000000000bdf .LASF58
     /tmp/ccP4HCkU.s:9366   .debug_str:0000000000000667 .LASF59
     /tmp/ccP4HCkU.s:9564   .debug_str:0000000000000d64 .LASF60
     /tmp/ccP4HCkU.s:9618   .debug_str:0000000000000ee8 .LASF61
     /tmp/ccP4HCkU.s:9364   .debug_str:0000000000000660 .LASF62
     /tmp/ccP4HCkU.s:9420   .debug_str:00000000000008b1 .LASF63
     /tmp/ccP4HCkU.s:9166   .debug_str:0000000000000047 .LASF64
     /tmp/ccP4HCkU.s:9540   .debug_str:0000000000000c84 .LASF65
     /tmp/ccP4HCkU.s:9576   .debug_str:0000000000000dbe .LASF255
     /tmp/ccP4HCkU.s:9382   .debug_str:00000000000006d6 .LASF66
     /tmp/ccP4HCkU.s:9746   .debug_str:00000000000012af .LASF67
     /tmp/ccP4HCkU.s:9288   .debug_str:00000000000003fc .LASF68
     /tmp/ccP4HCkU.s:9356   .debug_str:00000000000005f8 .LASF69
     /tmp/ccP4HCkU.s:9350   .debug_str:00000000000005d3 .LASF70
     /tmp/ccP4HCkU.s:9634   .debug_str:0000000000000f5d .LASF71
     /tmp/ccP4HCkU.s:9252   .debug_str:00000000000002ce .LASF72
     /tmp/ccP4HCkU.s:9160   .debug_str:000000000000001a .LASF73
     /tmp/ccP4HCkU.s:9642   .debug_str:0000000000000fb1 .LASF74
     /tmp/ccP4HCkU.s:9290   .debug_str:0000000000000407 .LASF75
     /tmp/ccP4HCkU.s:9658   .debug_str:0000000000001046 .LASF145
     /tmp/ccP4HCkU.s:9162   .debug_str:000000000000003a .LASF76
     /tmp/ccP4HCkU.s:9234   .debug_str:000000000000025d .LASF77
     /tmp/ccP4HCkU.s:9220   .debug_str:00000000000001fd .LASF78
     /tmp/ccP4HCkU.s:9246   .debug_str:00000000000002aa .LASF79
     /tmp/ccP4HCkU.s:9248   .debug_str:00000000000002b3 .LASF303
     /tmp/ccP4HCkU.s:9340   .debug_str:0000000000000589 .LASF80
     /tmp/ccP4HCkU.s:9322   .debug_str:0000000000000515 .LASF81
     /tmp/ccP4HCkU.s:9492   .debug_str:0000000000000b23 .LASF82
     /tmp/ccP4HCkU.s:9352   .debug_str:00000000000005e0 .LASF83
     /tmp/ccP4HCkU.s:9580   .debug_str:0000000000000dd8 .LASF84
     /tmp/ccP4HCkU.s:9174   .debug_str:0000000000000097 .LASF85
     /tmp/ccP4HCkU.s:9574   .debug_str:0000000000000db5 .LASF86
     /tmp/ccP4HCkU.s:9260   .debug_str:000000000000030d .LASF87
     /tmp/ccP4HCkU.s:9592   .debug_str:0000000000000e23 .LASF88
     /tmp/ccP4HCkU.s:9544   .debug_str:0000000000000cb2 .LASF89
     /tmp/ccP4HCkU.s:9448   .debug_str:00000000000009c0 .LASF90
     /tmp/ccP4HCkU.s:9310   .debug_str:00000000000004d3 .LASF91
     /tmp/ccP4HCkU.s:9638   .debug_str:0000000000000f91 .LASF92
     /tmp/ccP4HCkU.s:9632   .debug_str:0000000000000f47 .LASF93
     /tmp/ccP4HCkU.s:9426   .debug_str:0000000000000900 .LASF94
     /tmp/ccP4HCkU.s:9660   .debug_str:000000000000104f .LASF95
     /tmp/ccP4HCkU.s:9332   .debug_str:000000000000054d .LASF96
     /tmp/ccP4HCkU.s:9696   .debug_str:0000000000001146 .LASF97
     /tmp/ccP4HCkU.s:9512   .debug_str:0000000000000bbe .LASF98
     /tmp/ccP4HCkU.s:9770   .debug_str:0000000000001383 .LASF99
     /tmp/ccP4HCkU.s:9662   .debug_str:0000000000001068 .LASF100
     /tmp/ccP4HCkU.s:9704   .debug_str:000000000000118d .LASF101
GAS LISTING /tmp/ccP4HCkU.s 			page 61


     /tmp/ccP4HCkU.s:9348   .debug_str:00000000000005c4 .LASF102
     /tmp/ccP4HCkU.s:9158   .debug_str:0000000000000000 .LASF103
     /tmp/ccP4HCkU.s:9624   .debug_str:0000000000000f1e .LASF104
     /tmp/ccP4HCkU.s:9734   .debug_str:0000000000001251 .LASF105
     /tmp/ccP4HCkU.s:9500   .debug_str:0000000000000b64 .LASF304
     /tmp/ccP4HCkU.s:9226   .debug_str:0000000000000224 .LASF106
     /tmp/ccP4HCkU.s:9554   .debug_str:0000000000000d14 .LASF108
     /tmp/ccP4HCkU.s:9276   .debug_str:000000000000039d .LASF107
     /tmp/ccP4HCkU.s:9250   .debug_str:00000000000002bb .LASF109
     /tmp/ccP4HCkU.s:9710   .debug_str:00000000000011d6 .LASF110
     /tmp/ccP4HCkU.s:9452   .debug_str:00000000000009d3 .LASF111
     /tmp/ccP4HCkU.s:9198   .debug_str:0000000000000152 .LASF112
     /tmp/ccP4HCkU.s:9652   .debug_str:0000000000001014 .LASF113
     /tmp/ccP4HCkU.s:9740   .debug_str:0000000000001280 .LASF115
     /tmp/ccP4HCkU.s:9472   .debug_str:0000000000000a9f .LASF117
     /tmp/ccP4HCkU.s:9700   .debug_str:0000000000001167 .LASF118
     /tmp/ccP4HCkU.s:9232   .debug_str:0000000000000249 .LASF119
     /tmp/ccP4HCkU.s:9558   .debug_str:0000000000000d2d .LASF120
     /tmp/ccP4HCkU.s:9648   .debug_str:0000000000000fc5 .LASF121
     /tmp/ccP4HCkU.s:9586   .debug_str:0000000000000df6 .LASF122
     /tmp/ccP4HCkU.s:9560   .debug_str:0000000000000d3d .LASF123
     /tmp/ccP4HCkU.s:9590   .debug_str:0000000000000e12 .LASF124
     /tmp/ccP4HCkU.s:9654   .debug_str:0000000000001024 .LASF125
     /tmp/ccP4HCkU.s:9498   .debug_str:0000000000000b59 .LASF127
     /tmp/ccP4HCkU.s:9440   .debug_str:0000000000000984 .LASF128
     /tmp/ccP4HCkU.s:9372   .debug_str:0000000000000696 .LASF129
     /tmp/ccP4HCkU.s:9208   .debug_str:00000000000001a4 .LASF130
     /tmp/ccP4HCkU.s:9274   .debug_str:0000000000000398 .LASF131
     /tmp/ccP4HCkU.s:9760   .debug_str:000000000000133b .LASF132
     /tmp/ccP4HCkU.s:9600   .debug_str:0000000000000e71 .LASF133
     /tmp/ccP4HCkU.s:9666   .debug_str:000000000000107d .LASF134
     /tmp/ccP4HCkU.s:9284   .debug_str:00000000000003e0 .LASF135
     /tmp/ccP4HCkU.s:9450   .debug_str:00000000000009c7 .LASF136
     /tmp/ccP4HCkU.s:9396   .debug_str:0000000000000745 .LASF137
     /tmp/ccP4HCkU.s:9508   .debug_str:0000000000000ba5 .LASF138
     /tmp/ccP4HCkU.s:9680   .debug_str:00000000000010f6 .LASF139
     /tmp/ccP4HCkU.s:9614   .debug_str:0000000000000ecc .LASF259
     /tmp/ccP4HCkU.s:9222   .debug_str:0000000000000206 .LASF140
     /tmp/ccP4HCkU.s:9428   .debug_str:000000000000090d .LASF142
     /tmp/ccP4HCkU.s:9268   .debug_str:0000000000000355 .LASF305
     /tmp/ccP4HCkU.s:9172   .debug_str:000000000000006f .LASF306
     /tmp/ccP4HCkU.s:9202   .debug_str:0000000000000171 .LASF141
     /tmp/ccP4HCkU.s:9466   .debug_str:0000000000000a58 .LASF143
     /tmp/ccP4HCkU.s:9716   .debug_str:0000000000001201 .LASF144
     /tmp/ccP4HCkU.s:9536   .debug_str:0000000000000c65 .LASF146
     /tmp/ccP4HCkU.s:9408   .debug_str:000000000000084a .LASF147
     /tmp/ccP4HCkU.s:9772   .debug_str:000000000000139c .LASF148
     /tmp/ccP4HCkU.s:9728   .debug_str:0000000000001238 .LASF149
     /tmp/ccP4HCkU.s:9556   .debug_str:0000000000000d24 .LASF150
     /tmp/ccP4HCkU.s:9496   .debug_str:0000000000000b44 .LASF151
     /tmp/ccP4HCkU.s:9692   .debug_str:0000000000001137 .LASF152
     /tmp/ccP4HCkU.s:9682   .debug_str:00000000000010fe .LASF153
     /tmp/ccP4HCkU.s:9478   .debug_str:0000000000000ace .LASF154
     /tmp/ccP4HCkU.s:9406   .debug_str:0000000000000837 .LASF155
     /tmp/ccP4HCkU.s:9528   .debug_str:0000000000000c31 .LASF156
     /tmp/ccP4HCkU.s:9532   .debug_str:0000000000000c3e .LASF157
     /tmp/ccP4HCkU.s:9672   .debug_str:00000000000010a9 .LASF158
GAS LISTING /tmp/ccP4HCkU.s 			page 62


     /tmp/ccP4HCkU.s:9706   .debug_str:00000000000011a8 .LASF159
     /tmp/ccP4HCkU.s:9474   .debug_str:0000000000000ac1 .LASF160
     /tmp/ccP4HCkU.s:9494   .debug_str:0000000000000b30 .LASF161
     /tmp/ccP4HCkU.s:9738   .debug_str:0000000000001278 .LASF162
     /tmp/ccP4HCkU.s:9622   .debug_str:0000000000000f0a .LASF163
     /tmp/ccP4HCkU.s:9610   .debug_str:0000000000000ebd .LASF164
     /tmp/ccP4HCkU.s:9380   .debug_str:00000000000006c2 .LASF165
     /tmp/ccP4HCkU.s:9432   .debug_str:000000000000093b .LASF166
     /tmp/ccP4HCkU.s:9534   .debug_str:0000000000000c51 .LASF167
     /tmp/ccP4HCkU.s:9620   .debug_str:0000000000000f03 .LASF168
     /tmp/ccP4HCkU.s:9584   .debug_str:0000000000000de3 .LASF169
     /tmp/ccP4HCkU.s:9278   .debug_str:00000000000003a6 .LASF170
     /tmp/ccP4HCkU.s:9338   .debug_str:0000000000000576 .LASF171
     /tmp/ccP4HCkU.s:9378   .debug_str:00000000000006bc .LASF172
     /tmp/ccP4HCkU.s:9270   .debug_str:0000000000000363 .LASF173
     /tmp/ccP4HCkU.s:9582   .debug_str:0000000000000ddd .LASF174
     /tmp/ccP4HCkU.s:9362   .debug_str:000000000000064e .LASF175
     /tmp/ccP4HCkU.s:9182   .debug_str:00000000000000c3 .LASF176
     /tmp/ccP4HCkU.s:9568   .debug_str:0000000000000d75 .LASF177
     /tmp/ccP4HCkU.s:9314   .debug_str:00000000000004f3 .LASF178
     /tmp/ccP4HCkU.s:9764   .debug_str:0000000000001349 .LASF179
     /tmp/ccP4HCkU.s:9714   .debug_str:00000000000011f7 .LASF180
     /tmp/ccP4HCkU.s:9188   .debug_str:00000000000000f8 .LASF181
     /tmp/ccP4HCkU.s:9720   .debug_str:000000000000120c .LASF182
     /tmp/ccP4HCkU.s:9748   .debug_str:00000000000012c6 .LASF183
     /tmp/ccP4HCkU.s:9484   .debug_str:0000000000000afe .LASF184
     /tmp/ccP4HCkU.s:9502   .debug_str:0000000000000b69 .LASF185
     /tmp/ccP4HCkU.s:9664   .debug_str:0000000000001078 .LASF186
     /tmp/ccP4HCkU.s:9750   .debug_str:00000000000012dc .LASF187
     /tmp/ccP4HCkU.s:9488   .debug_str:0000000000000b0d .LASF188
     /tmp/ccP4HCkU.s:9392   .debug_str:0000000000000718 .LASF189
     /tmp/ccP4HCkU.s:9732   .debug_str:000000000000124c .LASF190
     /tmp/ccP4HCkU.s:9170   .debug_str:000000000000005e .LASF191
     /tmp/ccP4HCkU.s:9254   .debug_str:00000000000002da .LASF192
     /tmp/ccP4HCkU.s:9368   .debug_str:0000000000000678 .LASF193
     /tmp/ccP4HCkU.s:9736   .debug_str:0000000000001273 .LASF194
     /tmp/ccP4HCkU.s:9674   .debug_str:00000000000010b1 .LASF195
     /tmp/ccP4HCkU.s:9376   .debug_str:00000000000006af .LASF196
     /tmp/ccP4HCkU.s:9708   .debug_str:00000000000011bc .LASF197
     /tmp/ccP4HCkU.s:9588   .debug_str:0000000000000e04 .LASF198
     /tmp/ccP4HCkU.s:9296   .debug_str:000000000000044c .LASF199
     /tmp/ccP4HCkU.s:9354   .debug_str:00000000000005ed .LASF200
     /tmp/ccP4HCkU.s:9480   .debug_str:0000000000000ad5 .LASF201
     /tmp/ccP4HCkU.s:9228   .debug_str:000000000000022a .LASF202
     /tmp/ccP4HCkU.s:9542   .debug_str:0000000000000c9a .LASF203
     /tmp/ccP4HCkU.s:9190   .debug_str:000000000000010e .LASF204
     /tmp/ccP4HCkU.s:9668   .debug_str:0000000000001087 .LASF205
     /tmp/ccP4HCkU.s:9644   .debug_str:0000000000000fb8 .LASF206
     /tmp/ccP4HCkU.s:9320   .debug_str:000000000000050a .LASF207
     /tmp/ccP4HCkU.s:9386   .debug_str:00000000000006ec .LASF208
     /tmp/ccP4HCkU.s:9436   .debug_str:0000000000000952 .LASF209
     /tmp/ccP4HCkU.s:9768   .debug_str:000000000000136e .LASF210
     /tmp/ccP4HCkU.s:9640   .debug_str:0000000000000f9c .LASF211
     /tmp/ccP4HCkU.s:9342   .debug_str:0000000000000595 .LASF212
     /tmp/ccP4HCkU.s:9164   .debug_str:0000000000000042 .LASF213
     /tmp/ccP4HCkU.s:9598   .debug_str:0000000000000e5a .LASF214
     /tmp/ccP4HCkU.s:9630   .debug_str:0000000000000f40 .LASF215
GAS LISTING /tmp/ccP4HCkU.s 			page 63


     /tmp/ccP4HCkU.s:9294   .debug_str:0000000000000433 .LASF216
     /tmp/ccP4HCkU.s:9330   .debug_str:0000000000000547 .LASF217
     /tmp/ccP4HCkU.s:9468   .debug_str:0000000000000a6c .LASF218
     /tmp/ccP4HCkU.s:9596   .debug_str:0000000000000e3f .LASF219
     /tmp/ccP4HCkU.s:9464   .debug_str:0000000000000a4c .LASF220
     /tmp/ccP4HCkU.s:9538   .debug_str:0000000000000c70 .LASF221
     /tmp/ccP4HCkU.s:9724   .debug_str:0000000000001221 .LASF222
     /tmp/ccP4HCkU.s:9526   .debug_str:0000000000000c29 .LASF223
     /tmp/ccP4HCkU.s:9530   .debug_str:0000000000000c38 .LASF224
     /tmp/ccP4HCkU.s:9762   .debug_str:0000000000001340 .LASF225
     /tmp/ccP4HCkU.s:9390   .debug_str:0000000000000712 .LASF226
     /tmp/ccP4HCkU.s:9244   .debug_str:00000000000002a4 .LASF227
     /tmp/ccP4HCkU.s:9628   .debug_str:0000000000000f37 .LASF228
     /tmp/ccP4HCkU.s:9286   .debug_str:00000000000003e6 .LASF229
     /tmp/ccP4HCkU.s:9178   .debug_str:00000000000000af .LASF230
     /tmp/ccP4HCkU.s:9504   .debug_str:0000000000000b7a .LASF231
     /tmp/ccP4HCkU.s:9546   .debug_str:0000000000000cc6 .LASF232
     /tmp/ccP4HCkU.s:9776   .debug_str:00000000000013bf .LASF233
     /tmp/ccP4HCkU.s:9336   .debug_str:0000000000000566 .LASF234
     /tmp/ccP4HCkU.s:9236   .debug_str:0000000000000263 .LASF235
     /tmp/ccP4HCkU.s:9374   .debug_str:00000000000006a3 .LASF236
     /tmp/ccP4HCkU.s:9282   .debug_str:00000000000003c7 .LASF237
     /tmp/ccP4HCkU.s:9334   .debug_str:0000000000000559 .LASF238
     /tmp/ccP4HCkU.s:9656   .debug_str:000000000000102c .LASF239
     /tmp/ccP4HCkU.s:9196   .debug_str:0000000000000147 .LASF240
     /tmp/ccP4HCkU.s:9404   .debug_str:000000000000082f .LASF241
     /tmp/ccP4HCkU.s:9646   .debug_str:0000000000000fbd .LASF242
     /tmp/ccP4HCkU.s:9602   .debug_str:0000000000000e77 .LASF243
     /tmp/ccP4HCkU.s:9176   .debug_str:00000000000000a3 .LASF307
     /tmp/ccP4HCkU.s:9316   .debug_str:00000000000004fe .LASF244
     /tmp/ccP4HCkU.s:9552   .debug_str:0000000000000d0e .LASF245
     /tmp/ccP4HCkU.s:9454   .debug_str:00000000000009ed .LASF246
     /tmp/ccP4HCkU.s:9302   .debug_str:000000000000047f .LASF247
     /tmp/ccP4HCkU.s:9206   .debug_str:000000000000019d .LASF248
     /tmp/ccP4HCkU.s:9470   .debug_str:0000000000000a86 .LASF249
     /tmp/ccP4HCkU.s:9550   .debug_str:0000000000000cf5 .LASF250
     /tmp/ccP4HCkU.s:9774   .debug_str:00000000000013a5 .LASF251
     /tmp/ccP4HCkU.s:9280   .debug_str:00000000000003ad .LASF252
     /tmp/ccP4HCkU.s:9346   .debug_str:00000000000005b7 .LASF253
     /tmp/ccP4HCkU.s:9676   .debug_str:00000000000010c2 .LASF254
     /tmp/ccP4HCkU.s:9520   .debug_str:0000000000000bfe .LASF308
     /tmp/ccP4HCkU.s:9678   .debug_str:00000000000010db .LASF256
     /tmp/ccP4HCkU.s:9398   .debug_str:000000000000074e .LASF257
     /tmp/ccP4HCkU.s:9756   .debug_str:0000000000001313 .LASF258
     /tmp/ccP4HCkU.s:9216   .debug_str:00000000000001c2 .LASF309
     /tmp/ccP4HCkU.s:9360   .debug_str:0000000000000636 .LASF260
     /tmp/ccP4HCkU.s:9186   .debug_str:00000000000000ef .LASF261
     /tmp/ccP4HCkU.s:9442   .debug_str:0000000000000991 .LASF262
     /tmp/ccP4HCkU.s:9410   .debug_str:0000000000000853 .LASF263
     /tmp/ccP4HCkU.s:9204   .debug_str:000000000000017b .LASF264
     /tmp/ccP4HCkU.s:9518   .debug_str:0000000000000bf1 .LASF265
     /tmp/ccP4HCkU.s:9258   .debug_str:00000000000002ef .LASF266
     /tmp/ccP4HCkU.s:9754   .debug_str:0000000000001309 .LASF267
     /tmp/ccP4HCkU.s:9304   .debug_str:000000000000048e .LASF268
     /tmp/ccP4HCkU.s:9744   .debug_str:00000000000012a3 .LASF269
     /tmp/ccP4HCkU.s:9570   .debug_str:0000000000000d8d .LASF270
     /tmp/ccP4HCkU.s:9758   .debug_str:000000000000132d .LASF271
GAS LISTING /tmp/ccP4HCkU.s 			page 64


     /tmp/ccP4HCkU.s:9418   .debug_str:0000000000000892 .LASF272
     /tmp/ccP4HCkU.s:9298   .debug_str:0000000000000467 .LASF273
     /tmp/ccP4HCkU.s:9438   .debug_str:0000000000000966 .LASF274
     /tmp/ccP4HCkU.s:9412   .debug_str:000000000000085f .LASF275
     /tmp/ccP4HCkU.s:9306   .debug_str:00000000000004ac .LASF276
     /tmp/ccP4HCkU.s:9522   .debug_str:0000000000000c19 .LASF277
     /tmp/ccP4HCkU.s:9572   .debug_str:0000000000000daa .LASF278
     /tmp/ccP4HCkU.s:9214   .debug_str:00000000000001bb .LASF279
     /tmp/ccP4HCkU.s:9318   .debug_str:0000000000000505 .LASF280
     /tmp/ccP4HCkU.s:9324   .debug_str:0000000000000521 .LASF281
     /tmp/ccP4HCkU.s:1560   .text:0000000000000718 .LFB94
     /tmp/ccP4HCkU.s:1862   .text:00000000000008cc .LFE94
     /tmp/ccP4HCkU.s:7126   .debug_loc:0000000000000000 .LLST55
     /tmp/ccP4HCkU.s:7199   .debug_loc:0000000000000119 .LLST56
     /tmp/ccP4HCkU.s:7268   .debug_loc:000000000000021f .LLST57
     /tmp/ccP4HCkU.s:7337   .debug_loc:0000000000000325 .LLST58
     /tmp/ccP4HCkU.s:7406   .debug_loc:000000000000042b .LLST59
     /tmp/ccP4HCkU.s:9612   .debug_str:0000000000000ec5 .LASF282
     /tmp/ccP4HCkU.s:7475   .debug_loc:0000000000000531 .LLST60
     /tmp/ccP4HCkU.s:1671   .text:0000000000000798 .LBB481
     /tmp/ccP4HCkU.s:1768   .text:0000000000000860 .LBE481
     /tmp/ccP4HCkU.s:9726   .debug_str:0000000000001232 .LASF283
     /tmp/ccP4HCkU.s:7486   .debug_loc:0000000000000567 .LLST62
     /tmp/ccP4HCkU.s:1709   .text:00000000000007ec .LBB482
     /tmp/ccP4HCkU.s:1724   .text:00000000000007f8 .LBE482
     /tmp/ccP4HCkU.s:1710   .text:00000000000007ec .LBB483
     /tmp/ccP4HCkU.s:1723   .text:00000000000007f8 .LBE483
     /tmp/ccP4HCkU.s:1755   .text:0000000000000850 .LBB484
     /tmp/ccP4HCkU.s:1763   .text:0000000000000858 .LBE484
     /tmp/ccP4HCkU.s:7493   .debug_loc:000000000000058a .LLST63
     /tmp/ccP4HCkU.s:1686   .text:00000000000007ac .LVL130
     /tmp/ccP4HCkU.s:1691   .text:00000000000007bc .LVL131
     /tmp/ccP4HCkU.s:1697   .text:00000000000007cc .LVL132
     /tmp/ccP4HCkU.s:1702   .text:00000000000007dc .LVL133
     /tmp/ccP4HCkU.s:1707   .text:00000000000007ec .LVL134
     /tmp/ccP4HCkU.s:1728   .text:0000000000000804 .LVL135
     /tmp/ccP4HCkU.s:1733   .text:0000000000000814 .LVL136
     /tmp/ccP4HCkU.s:1738   .text:0000000000000824 .LVL137
     /tmp/ccP4HCkU.s:1744   .text:0000000000000834 .LVL138
     /tmp/ccP4HCkU.s:1749   .text:0000000000000844 .LVL139
     /tmp/ccP4HCkU.s:1767   .text:0000000000000860 .LVL142
     /tmp/ccP4HCkU.s:1577   .text:0000000000000730 .LBB471
     /tmp/ccP4HCkU.s:1593   .text:000000000000073c .LBE471
     /tmp/ccP4HCkU.s:1578   .text:0000000000000730 .LBB472
     /tmp/ccP4HCkU.s:1592   .text:000000000000073c .LBE472
     /tmp/ccP4HCkU.s:1661   .text:0000000000000790 .LBB479
     /tmp/ccP4HCkU.s:1668   .text:0000000000000794 .LBE479
     /tmp/ccP4HCkU.s:7500   .debug_loc:00000000000005ad .LLST61
     /tmp/ccP4HCkU.s:1780   .text:000000000000086c .LVL144
     /tmp/ccP4HCkU.s:1814   .text:0000000000000890 .LVL148
     /tmp/ccP4HCkU.s:1829   .text:00000000000008a0 .LVL150
     /tmp/ccP4HCkU.s:1837   .text:00000000000008ac .LVL152
     /tmp/ccP4HCkU.s:1848   .text:00000000000008c0 .LVL155
     /tmp/ccP4HCkU.s:1852   .text:00000000000008c8 .LVL156
     /tmp/ccP4HCkU.s:9266   .debug_str:000000000000034c .LASF284
     /tmp/ccP4HCkU.s:9490   .debug_str:0000000000000b12 .LASF285
     /tmp/ccP4HCkU.s:829    .text:00000000000003e0 .LFB93
GAS LISTING /tmp/ccP4HCkU.s 			page 65


     /tmp/ccP4HCkU.s:1554   .text:0000000000000718 .LFE93
     /tmp/ccP4HCkU.s:7507   .debug_loc:00000000000005d0 .LLST27
     /tmp/ccP4HCkU.s:7540   .debug_loc:0000000000000658 .LLST28
     /tmp/ccP4HCkU.s:7660   .debug_loc:0000000000000872 .LLST29
     /tmp/ccP4HCkU.s:7777   .debug_loc:0000000000000a89 .LLST30
     /tmp/ccP4HCkU.s:7923   .debug_loc:0000000000000cae .LLST31
     /tmp/ccP4HCkU.s:9718   .debug_str:0000000000001207 .LASF286
     /tmp/ccP4HCkU.s:8069   .debug_loc:0000000000000ed3 .LLST32
     /tmp/ccP4HCkU.s:9212   .debug_str:00000000000001b3 .LASF287
     /tmp/ccP4HCkU.s:8080   .debug_loc:0000000000000f09 .LLST33
     /tmp/ccP4HCkU.s:8095   .debug_loc:0000000000000f52 .LLST34
     /tmp/ccP4HCkU.s:1157   .text:0000000000000568 .LBB411
     /tmp/ccP4HCkU.s:1181   .text:0000000000000594 .LBE411
     /tmp/ccP4HCkU.s:8152   .debug_loc:000000000000104c .LLST53
     /tmp/ccP4HCkU.s:1167   .text:000000000000057c .LVL89
     /tmp/ccP4HCkU.s:1286   .text:00000000000005ec .LBB358
     /tmp/ccP4HCkU.s:1328   .text:0000000000000628 .LBE358
     /tmp/ccP4HCkU.s:8163   .debug_loc:0000000000001082 .LLST45
     /tmp/ccP4HCkU.s:1289   .text:00000000000005ec .LBB359
     /tmp/ccP4HCkU.s:1300   .text:0000000000000600 .LBE359
     /tmp/ccP4HCkU.s:8174   .debug_loc:00000000000010b8 .LLST46
     /tmp/ccP4HCkU.s:1294   .text:00000000000005f4 .LVL100
     /tmp/ccP4HCkU.s:1298   .text:0000000000000600 .LVL101
     /tmp/ccP4HCkU.s:1301   .text:0000000000000600 .LBB361
     /tmp/ccP4HCkU.s:1325   .text:0000000000000624 .LBE361
     /tmp/ccP4HCkU.s:8183   .debug_loc:00000000000010dd .LLST47
     /tmp/ccP4HCkU.s:8190   .debug_loc:0000000000001100 .LLST48
     /tmp/ccP4HCkU.s:1306   .text:0000000000000604 .LBB363
     /tmp/ccP4HCkU.s:1314   .text:0000000000000610 .LBE363
     /tmp/ccP4HCkU.s:8197   .debug_loc:0000000000001123 .LLST49
     /tmp/ccP4HCkU.s:1349   .text:0000000000000630 .LBB350
     /tmp/ccP4HCkU.s:1370   .text:0000000000000654 .LBE350
     /tmp/ccP4HCkU.s:8206   .debug_loc:0000000000001148 .LLST43
     /tmp/ccP4HCkU.s:1358   .text:0000000000000640 .LBB351
     /tmp/ccP4HCkU.s:1369   .text:0000000000000654 .LBE351
     /tmp/ccP4HCkU.s:8217   .debug_loc:000000000000117e .LLST44
     /tmp/ccP4HCkU.s:1363   .text:0000000000000648 .LVL107
     /tmp/ccP4HCkU.s:1367   .text:0000000000000654 .LVL108
     /tmp/ccP4HCkU.s:1357   .text:0000000000000640 .LVL106
     /tmp/ccP4HCkU.s:1393   .text:000000000000065c .LBB343
     /tmp/ccP4HCkU.s:1415   .text:0000000000000670 .LBE343
     /tmp/ccP4HCkU.s:8224   .debug_loc:00000000000011a1 .LLST41
     /tmp/ccP4HCkU.s:1401   .text:0000000000000668 .LBB344
     /tmp/ccP4HCkU.s:1414   .text:0000000000000670 .LBE344
     /tmp/ccP4HCkU.s:8235   .debug_loc:00000000000011d7 .LLST42
     /tmp/ccP4HCkU.s:1399   .text:0000000000000668 .LVL110
     /tmp/ccP4HCkU.s:1417   .text:0000000000000670 .LBB338
     /tmp/ccP4HCkU.s:1424   .text:000000000000067c .LBE338
     /tmp/ccP4HCkU.s:8242   .debug_loc:00000000000011fa .LLST37
     /tmp/ccP4HCkU.s:1423   .text:000000000000067c .LVL112
     /tmp/ccP4HCkU.s:853    .text:0000000000000408 .LBB322
     /tmp/ccP4HCkU.s:868    .text:0000000000000414 .LBE322
     /tmp/ccP4HCkU.s:854    .text:0000000000000408 .LBB323
     /tmp/ccP4HCkU.s:867    .text:0000000000000414 .LBE323
     /tmp/ccP4HCkU.s:872    .text:0000000000000418 .LBB324
     /tmp/ccP4HCkU.s:888    .text:0000000000000424 .LBE324
     /tmp/ccP4HCkU.s:873    .text:0000000000000418 .LBB325
GAS LISTING /tmp/ccP4HCkU.s 			page 66


     /tmp/ccP4HCkU.s:887    .text:0000000000000424 .LBE325
     /tmp/ccP4HCkU.s:1037   .text:00000000000004a4 .LBB336
     /tmp/ccP4HCkU.s:1078   .text:000000000000050c .LBE336
     /tmp/ccP4HCkU.s:8253   .debug_loc:0000000000001230 .LLST35
     /tmp/ccP4HCkU.s:8260   .debug_loc:0000000000001253 .LLST36
     /tmp/ccP4HCkU.s:1043   .text:00000000000004b0 .LVL73
     /tmp/ccP4HCkU.s:1049   .text:00000000000004c0 .LVL75
     /tmp/ccP4HCkU.s:1072   .text:0000000000000500 .LVL76
     /tmp/ccP4HCkU.s:1076   .text:000000000000050c .LVL77
     /tmp/ccP4HCkU.s:1456   .text:0000000000000690 .LBB339
     /tmp/ccP4HCkU.s:1466   .text:0000000000000694 .LBE339
     /tmp/ccP4HCkU.s:8267   .debug_loc:0000000000001276 .LLST38
     /tmp/ccP4HCkU.s:1497   .text:00000000000006a8 .LBB341
     /tmp/ccP4HCkU.s:1538   .text:0000000000000710 .LBE341
     /tmp/ccP4HCkU.s:8274   .debug_loc:0000000000001299 .LLST39
     /tmp/ccP4HCkU.s:1498   .text:00000000000006a8 .LBB342
     /tmp/ccP4HCkU.s:1537   .text:0000000000000710 .LBE342
     /tmp/ccP4HCkU.s:8281   .debug_loc:00000000000012bc .LLST40
     /tmp/ccP4HCkU.s:1502   .text:00000000000006b4 .LVL117
     /tmp/ccP4HCkU.s:1508   .text:00000000000006c4 .LVL119
     /tmp/ccP4HCkU.s:1532   .text:0000000000000704 .LVL121
     /tmp/ccP4HCkU.s:1536   .text:0000000000000710 .LVL122
     /tmp/ccP4HCkU.s:1236   .text:00000000000005cc .LBB381
     /tmp/ccP4HCkU.s:1246   .text:00000000000005d0 .LBE381
     /tmp/ccP4HCkU.s:8288   .debug_loc:00000000000012df .LLST50
     /tmp/ccP4HCkU.s:1188   .text:00000000000005a0 .LBB394
     /tmp/ccP4HCkU.s:1197   .text:00000000000005a8 .LBE394
     /tmp/ccP4HCkU.s:8295   .debug_loc:0000000000001302 .LLST51
     /tmp/ccP4HCkU.s:1203   .text:00000000000005b0 .LBB396
     /tmp/ccP4HCkU.s:1213   .text:00000000000005b4 .LBE396
     /tmp/ccP4HCkU.s:8302   .debug_loc:0000000000001325 .LLST52
     /tmp/ccP4HCkU.s:1106   .text:0000000000000528 .LBB461
     /tmp/ccP4HCkU.s:1117   .text:000000000000052c .LBE461
     /tmp/ccP4HCkU.s:8309   .debug_loc:0000000000001348 .LLST54
     /tmp/ccP4HCkU.s:1098   .text:000000000000051c .LVL79
     /tmp/ccP4HCkU.s:1102   .text:0000000000000528 .LVL80
     /tmp/ccP4HCkU.s:1148   .text:0000000000000558 .LVL84
     /tmp/ccP4HCkU.s:1152   .text:0000000000000564 .LVL85
     /tmp/ccP4HCkU.s:1201   .text:00000000000005b0 .LVL94
     /tmp/ccP4HCkU.s:1234   .text:00000000000005cc .LVL96
     /tmp/ccP4HCkU.s:1267   .text:00000000000005e4 .LVL98
     /tmp/ccP4HCkU.s:1454   .text:0000000000000690 .LVL114
     /tmp/ccP4HCkU.s:9690   .debug_str:000000000000112e .LASF288
     /tmp/ccP4HCkU.s:9264   .debug_str:000000000000033b .LASF289
     /tmp/ccP4HCkU.s:169    .text:000000000000009c .LFB92
     /tmp/ccP4HCkU.s:823    .text:00000000000003e0 .LFE92
     /tmp/ccP4HCkU.s:8316   .debug_loc:000000000000136b .LLST3
     /tmp/ccP4HCkU.s:8349   .debug_loc:00000000000013f3 .LLST4
     /tmp/ccP4HCkU.s:8469   .debug_loc:000000000000160d .LLST5
     /tmp/ccP4HCkU.s:8589   .debug_loc:0000000000001827 .LLST6
     /tmp/ccP4HCkU.s:8735   .debug_loc:0000000000001a4c .LLST7
     /tmp/ccP4HCkU.s:8881   .debug_loc:0000000000001c71 .LLST8
     /tmp/ccP4HCkU.s:8892   .debug_loc:0000000000001ca7 .LLST9
     /tmp/ccP4HCkU.s:8903   .debug_loc:0000000000001cdd .LLST10
     /tmp/ccP4HCkU.s:514    .text:0000000000000230 .LBB227
     /tmp/ccP4HCkU.s:538    .text:000000000000025c .LBE227
     /tmp/ccP4HCkU.s:8985   .debug_loc:0000000000001e4a .LLST24
GAS LISTING /tmp/ccP4HCkU.s 			page 67


     /tmp/ccP4HCkU.s:524    .text:0000000000000244 .LVL31
     /tmp/ccP4HCkU.s:619    .text:00000000000002ac .LBB189
     /tmp/ccP4HCkU.s:672    .text:00000000000002f0 .LBE189
     /tmp/ccP4HCkU.s:8996   .debug_loc:0000000000001e80 .LLST18
     /tmp/ccP4HCkU.s:622    .text:00000000000002ac .LBB190
     /tmp/ccP4HCkU.s:634    .text:00000000000002c0 .LBE190
     /tmp/ccP4HCkU.s:9007   .debug_loc:0000000000001eb6 .LLST19
     /tmp/ccP4HCkU.s:628    .text:00000000000002b4 .LVL42
     /tmp/ccP4HCkU.s:632    .text:00000000000002c0 .LVL43
     /tmp/ccP4HCkU.s:635    .text:00000000000002c0 .LBB192
     /tmp/ccP4HCkU.s:661    .text:00000000000002e4 .LBE192
     /tmp/ccP4HCkU.s:9016   .debug_loc:0000000000001edb .LLST20
     /tmp/ccP4HCkU.s:9023   .debug_loc:0000000000001efe .LLST21
     /tmp/ccP4HCkU.s:641    .text:00000000000002c4 .LBB194
     /tmp/ccP4HCkU.s:650    .text:00000000000002d0 .LBE194
     /tmp/ccP4HCkU.s:9030   .debug_loc:0000000000001f21 .LLST22
     /tmp/ccP4HCkU.s:674    .text:00000000000002f0 .LBB184
     /tmp/ccP4HCkU.s:681    .text:00000000000002fc .LBE184
     /tmp/ccP4HCkU.s:9039   .debug_loc:0000000000001f46 .LLST17
     /tmp/ccP4HCkU.s:680    .text:00000000000002fc .LVL49
     /tmp/ccP4HCkU.s:686    .text:0000000000000300 .LBB180
     /tmp/ccP4HCkU.s:707    .text:0000000000000328 .LBE180
     /tmp/ccP4HCkU.s:9050   .debug_loc:0000000000001f7c .LLST16
     /tmp/ccP4HCkU.s:692    .text:000000000000030c .LVL51
     /tmp/ccP4HCkU.s:703    .text:0000000000000324 .LVL52
     /tmp/ccP4HCkU.s:709    .text:0000000000000328 .LBB177
     /tmp/ccP4HCkU.s:730    .text:0000000000000350 .LBE177
     /tmp/ccP4HCkU.s:9061   .debug_loc:0000000000001fb2 .LLST13
     /tmp/ccP4HCkU.s:715    .text:0000000000000334 .LVL54
     /tmp/ccP4HCkU.s:726    .text:000000000000034c .LVL55
     /tmp/ccP4HCkU.s:195    .text:00000000000000c8 .LBB161
     /tmp/ccP4HCkU.s:210    .text:00000000000000d4 .LBE161
     /tmp/ccP4HCkU.s:196    .text:00000000000000c8 .LBB162
     /tmp/ccP4HCkU.s:209    .text:00000000000000d4 .LBE162
     /tmp/ccP4HCkU.s:214    .text:00000000000000d8 .LBB163
     /tmp/ccP4HCkU.s:230    .text:00000000000000e4 .LBE163
     /tmp/ccP4HCkU.s:215    .text:00000000000000d8 .LBB164
     /tmp/ccP4HCkU.s:229    .text:00000000000000e4 .LBE164
     /tmp/ccP4HCkU.s:378    .text:0000000000000164 .LBB175
     /tmp/ccP4HCkU.s:419    .text:00000000000001cc .LBE175
     /tmp/ccP4HCkU.s:9072   .debug_loc:0000000000001fe8 .LLST11
     /tmp/ccP4HCkU.s:9079   .debug_loc:000000000000200b .LLST12
     /tmp/ccP4HCkU.s:385    .text:0000000000000170 .LVL14
     /tmp/ccP4HCkU.s:390    .text:0000000000000180 .LVL15
     /tmp/ccP4HCkU.s:413    .text:00000000000001c0 .LVL16
     /tmp/ccP4HCkU.s:417    .text:00000000000001cc .LVL17
     /tmp/ccP4HCkU.s:766    .text:0000000000000370 .LBB178
     /tmp/ccP4HCkU.s:807    .text:00000000000003d8 .LBE178
     /tmp/ccP4HCkU.s:9086   .debug_loc:000000000000202e .LLST14
     /tmp/ccP4HCkU.s:767    .text:0000000000000370 .LBB179
     /tmp/ccP4HCkU.s:806    .text:00000000000003d8 .LBE179
     /tmp/ccP4HCkU.s:9093   .debug_loc:0000000000002051 .LLST15
     /tmp/ccP4HCkU.s:771    .text:000000000000037c .LVL60
     /tmp/ccP4HCkU.s:777    .text:000000000000038c .LVL62
     /tmp/ccP4HCkU.s:801    .text:00000000000003cc .LVL64
     /tmp/ccP4HCkU.s:805    .text:00000000000003d8 .LVL65
     /tmp/ccP4HCkU.s:545    .text:0000000000000268 .LBB215
GAS LISTING /tmp/ccP4HCkU.s 			page 68


     /tmp/ccP4HCkU.s:554    .text:0000000000000270 .LBE215
     /tmp/ccP4HCkU.s:9100   .debug_loc:0000000000002074 .LLST23
     /tmp/ccP4HCkU.s:447    .text:00000000000001e8 .LBB268
     /tmp/ccP4HCkU.s:458    .text:00000000000001ec .LBE268
     /tmp/ccP4HCkU.s:9107   .debug_loc:0000000000002097 .LLST25
     /tmp/ccP4HCkU.s:460    .text:00000000000001ec .LBB270
     /tmp/ccP4HCkU.s:471    .text:00000000000001f0 .LBE270
     /tmp/ccP4HCkU.s:9114   .debug_loc:00000000000020ba .LLST26
     /tmp/ccP4HCkU.s:439    .text:00000000000001dc .LVL19
     /tmp/ccP4HCkU.s:443    .text:00000000000001e8 .LVL20
     /tmp/ccP4HCkU.s:505    .text:0000000000000220 .LVL26
     /tmp/ccP4HCkU.s:509    .text:000000000000022c .LVL27
     /tmp/ccP4HCkU.s:558    .text:0000000000000278 .LVL36
     /tmp/ccP4HCkU.s:579    .text:0000000000000290 .LVL38
     /tmp/ccP4HCkU.s:600    .text:00000000000002a4 .LVL40
     /tmp/ccP4HCkU.s:735    .text:000000000000035c .LVL57
     /tmp/ccP4HCkU.s:9194   .debug_str:0000000000000139 .LASF290
     /tmp/ccP4HCkU.s:9594   .debug_str:0000000000000e2c .LASF291
     /tmp/ccP4HCkU.s:13     .text:0000000000000000 .LFB91
     /tmp/ccP4HCkU.s:163    .text:000000000000009c .LFE91
     /tmp/ccP4HCkU.s:91     .text:0000000000000068 .LBB112
     /tmp/ccP4HCkU.s:160    .text:000000000000009c .LBE112
     /tmp/ccP4HCkU.s:93     .text:0000000000000068 .LBB113
     /tmp/ccP4HCkU.s:109    .text:0000000000000074 .LBE113
     /tmp/ccP4HCkU.s:94     .text:0000000000000068 .LBB114
     /tmp/ccP4HCkU.s:108    .text:0000000000000074 .LBE114
     /tmp/ccP4HCkU.s:110    .text:0000000000000074 .LBB115
     /tmp/ccP4HCkU.s:126    .text:0000000000000080 .LBE115
     /tmp/ccP4HCkU.s:111    .text:0000000000000074 .LBB116
     /tmp/ccP4HCkU.s:125    .text:0000000000000080 .LBE116
     /tmp/ccP4HCkU.s:135    .text:0000000000000090 .LBB117
     /tmp/ccP4HCkU.s:146    .text:0000000000000094 .LBE117
     /tmp/ccP4HCkU.s:9121   .debug_loc:00000000000020dd .LLST1
     /tmp/ccP4HCkU.s:148    .text:0000000000000094 .LBB119
     /tmp/ccP4HCkU.s:159    .text:000000000000009c .LBE119
     /tmp/ccP4HCkU.s:133    .text:0000000000000090 .LVL7
     /tmp/ccP4HCkU.s:45     .text:0000000000000040 .LBB110
     /tmp/ccP4HCkU.s:53     .text:0000000000000044 .LBE110
     /tmp/ccP4HCkU.s:9128   .debug_loc:0000000000002100 .LLST0
     /tmp/ccP4HCkU.s:60     .text:0000000000000048 .LBB121
     /tmp/ccP4HCkU.s:73     .text:0000000000000050 .LBE121
     /tmp/ccP4HCkU.s:9135   .debug_loc:0000000000002123 .LLST2
     /tmp/ccP4HCkU.s:32     .text:0000000000000020 .LVL0
     /tmp/ccP4HCkU.s:9230   .debug_str:0000000000000235 .LASF293
     /tmp/ccP4HCkU.s:9688   .debug_str:0000000000001129 .LASF292
     /tmp/ccP4HCkU.s:9482   .debug_str:0000000000000aed .LASF294
     /tmp/ccP4HCkU.s:9712   .debug_str:00000000000011e3 .LASF295
     /tmp/ccP4HCkU.s:9686   .debug_str:000000000000111c .LASF297
     /tmp/ccP4HCkU.s:9434   .debug_str:0000000000000943 .LASF296
     /tmp/ccP4HCkU.s:9424   .debug_str:00000000000008f6 .LASF298
     /tmp/ccP4HCkU.s:1563   .text:0000000000000718 .LVL124
     /tmp/ccP4HCkU.s:1684   .text:00000000000007a4 .LVL129
     /tmp/ccP4HCkU.s:1770   .text:0000000000000864 .LVL143
     /tmp/ccP4HCkU.s:1787   .text:0000000000000870 .LVL145
     /tmp/ccP4HCkU.s:1806   .text:0000000000000888 .LVL147
     /tmp/ccP4HCkU.s:1831   .text:00000000000008a4 .LVL151
     /tmp/ccP4HCkU.s:1839   .text:00000000000008b0 .LVL153
GAS LISTING /tmp/ccP4HCkU.s 			page 69


     /tmp/ccP4HCkU.s:1846   .text:00000000000008b8 .LVL154
     /tmp/ccP4HCkU.s:1823   .text:0000000000000898 .LVL149
     /tmp/ccP4HCkU.s:1591   .text:000000000000073c .LVL125
     /tmp/ccP4HCkU.s:1800   .text:000000000000087c .LVL146
     /tmp/ccP4HCkU.s:1679   .text:000000000000079c .LVL128
     /tmp/ccP4HCkU.s:1754   .text:0000000000000850 .LVL140
     /tmp/ccP4HCkU.s:1761   .text:0000000000000858 .LVL141
     /tmp/ccP4HCkU.s:1660   .text:0000000000000790 .LVL126
     /tmp/ccP4HCkU.s:1666   .text:0000000000000794 .LVL127
     /tmp/ccP4HCkU.s:832    .text:00000000000003e0 .LVL67
     /tmp/ccP4HCkU.s:1041   .text:00000000000004a8 .LVL72
     /tmp/ccP4HCkU.s:1092   .text:0000000000000514 .LVL78
     /tmp/ccP4HCkU.s:1140   .text:0000000000000550 .LVL83
     /tmp/ccP4HCkU.s:1518   .text:00000000000006dc .LVL120
     /tmp/ccP4HCkU.s:1154   .text:0000000000000568 .LVL86
     /tmp/ccP4HCkU.s:1164   .text:0000000000000570 .LVL88
     /tmp/ccP4HCkU.s:1179   .text:0000000000000594 .LVL90
     /tmp/ccP4HCkU.s:1221   .text:00000000000005bc .LVL95
     /tmp/ccP4HCkU.s:1255   .text:00000000000005d8 .LVL97
     /tmp/ccP4HCkU.s:1283   .text:00000000000005ec .LVL99
     /tmp/ccP4HCkU.s:1346   .text:0000000000000630 .LVL105
     /tmp/ccP4HCkU.s:1382   .text:000000000000065c .LVL109
     /tmp/ccP4HCkU.s:1411   .text:0000000000000670 .LVL111
     /tmp/ccP4HCkU.s:1448   .text:0000000000000684 .LVL113
     /tmp/ccP4HCkU.s:1480   .text:000000000000069c .LVL115
     /tmp/ccP4HCkU.s:1046   .text:00000000000004b4 .LVL74
     /tmp/ccP4HCkU.s:1162   .text:000000000000056c .LVL87
     /tmp/ccP4HCkU.s:1193   .text:00000000000005a4 .LVL92
     /tmp/ccP4HCkU.s:871    .text:0000000000000418 .LVL68
     /tmp/ccP4HCkU.s:1130   .text:000000000000053c .LVL82
     /tmp/ccP4HCkU.s:886    .text:0000000000000424 .LVL69
     /tmp/ccP4HCkU.s:1034   .text:00000000000004a0 .LVL70
     /tmp/ccP4HCkU.s:1505   .text:00000000000006b8 .LVL118
     /tmp/ccP4HCkU.s:1541   .text:0000000000000714 .LVL123
     /tmp/ccP4HCkU.s:1323   .text:0000000000000624 .LVL104
     /tmp/ccP4HCkU.s:1305   .text:0000000000000604 .LVL102
     /tmp/ccP4HCkU.s:1312   .text:0000000000000610 .LVL103
     /tmp/ccP4HCkU.s:1036   .text:00000000000004a4 .LVL71
     /tmp/ccP4HCkU.s:1496   .text:00000000000006a8 .LVL116
     /tmp/ccP4HCkU.s:1187   .text:00000000000005a0 .LVL91
     /tmp/ccP4HCkU.s:1195   .text:00000000000005a8 .LVL93
     /tmp/ccP4HCkU.s:1114   .text:000000000000052c .LVL81
     /tmp/ccP4HCkU.s:172    .text:000000000000009c .LVL9
     /tmp/ccP4HCkU.s:383    .text:0000000000000168 .LVL13
     /tmp/ccP4HCkU.s:433    .text:00000000000001d4 .LVL18
     /tmp/ccP4HCkU.s:497    .text:0000000000000218 .LVL25
     /tmp/ccP4HCkU.s:787    .text:00000000000003a4 .LVL63
     /tmp/ccP4HCkU.s:511    .text:0000000000000230 .LVL28
     /tmp/ccP4HCkU.s:521    .text:0000000000000238 .LVL30
     /tmp/ccP4HCkU.s:536    .text:000000000000025c .LVL32
     /tmp/ccP4HCkU.s:570    .text:0000000000000280 .LVL37
     /tmp/ccP4HCkU.s:593    .text:0000000000000298 .LVL39
     /tmp/ccP4HCkU.s:616    .text:00000000000002ac .LVL41
     /tmp/ccP4HCkU.s:670    .text:00000000000002f0 .LVL48
     /tmp/ccP4HCkU.s:683    .text:0000000000000300 .LVL50
     /tmp/ccP4HCkU.s:705    .text:0000000000000328 .LVL53
     /tmp/ccP4HCkU.s:728    .text:0000000000000350 .LVL56
GAS LISTING /tmp/ccP4HCkU.s 			page 70


     /tmp/ccP4HCkU.s:759    .text:0000000000000364 .LVL58
     /tmp/ccP4HCkU.s:519    .text:0000000000000234 .LVL29
     /tmp/ccP4HCkU.s:774    .text:0000000000000380 .LVL61
     /tmp/ccP4HCkU.s:550    .text:000000000000026c .LVL34
     /tmp/ccP4HCkU.s:213    .text:00000000000000d8 .LVL10
     /tmp/ccP4HCkU.s:484    .text:0000000000000200 .LVL23
     /tmp/ccP4HCkU.s:228    .text:00000000000000e4 .LVL11
     /tmp/ccP4HCkU.s:487    .text:0000000000000204 .LVL24
     /tmp/ccP4HCkU.s:666    .text:00000000000002e8 .LVL47
     /tmp/ccP4HCkU.s:810    .text:00000000000003dc .LVL66
     /tmp/ccP4HCkU.s:659    .text:00000000000002e4 .LVL46
     /tmp/ccP4HCkU.s:640    .text:00000000000002c4 .LVL44
     /tmp/ccP4HCkU.s:648    .text:00000000000002d0 .LVL45
     /tmp/ccP4HCkU.s:377    .text:0000000000000164 .LVL12
     /tmp/ccP4HCkU.s:765    .text:0000000000000370 .LVL59
     /tmp/ccP4HCkU.s:544    .text:0000000000000268 .LVL33
     /tmp/ccP4HCkU.s:552    .text:0000000000000270 .LVL35
     /tmp/ccP4HCkU.s:455    .text:00000000000001ec .LVL21
     /tmp/ccP4HCkU.s:468    .text:00000000000001f0 .LVL22
     /tmp/ccP4HCkU.s:143    .text:0000000000000094 .LVL8
     /tmp/ccP4HCkU.s:44     .text:0000000000000040 .LVL1
     /tmp/ccP4HCkU.s:51     .text:0000000000000044 .LVL2
     /tmp/ccP4HCkU.s:59     .text:0000000000000048 .LVL3
     /tmp/ccP4HCkU.s:70     .text:0000000000000050 .LVL4
     /tmp/ccP4HCkU.s:1894   .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN9Scheduler12update_sleepEv
_ZN3TCB16timeSliceCounterE
_ZN3TCB7runningE
_ZN3TCB5yieldEv
_ZN5StdIO7obufferE
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
_ZN15MemoryAllocator11getInstanceEv
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN3TCB12createThreadEPFvPvES0_Pm
_ZN3TCB8dispatchEv
_ZN3TCB12deleteThreadEPS_
_ZN10KSemaphore16activeSemaphoresE
_ZN10KSemaphore5closeEPS_
_ZN10KSemaphore6existsEPS_
_ZN3TCB5sleepEm
_ZN5StdIO7ibufferE
_ZN10KSemaphoreD1Ev
_Z12kprintStringPKc
_Z9kprintIntmi
_ZN5StdIO15console_handlerEv
_ZN3TCB13panicDispatchEv
