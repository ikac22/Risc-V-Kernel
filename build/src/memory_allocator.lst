GAS LISTING /tmp/ccX8I8ej.s 			page 1


   1              		.file	"memory_allocator.cpp"
   2              		.option nopic
   3              		.option norelax
   4              		.attribute arch, "rv64i2p0_m2p0_a2p0"
   5              		.attribute unaligned_access, 0
   6              		.attribute stack_align, 16
   7              		.text
   8              	.Ltext0:
   9              		.align	2
  10              		.globl	_ZN15MemoryAllocator11getInstanceEv
  12              	_ZN15MemoryAllocator11getInstanceEv:
  13              	.LFB1:
  14              		.file 1 "src/memory_allocator.cpp"
   1:src/memory_allocator.cpp **** #include"../h/memory_allocator.hpp"
   2:src/memory_allocator.cpp **** #include"../h/kernel_funs.h"
   3:src/memory_allocator.cpp **** MemoryAllocator MemoryAllocator::allocator;
   4:src/memory_allocator.cpp **** 
   5:src/memory_allocator.cpp **** MemoryAllocator& MemoryAllocator::getInstance(){
  15              		.loc 1 5 48
  16              		.cfi_startproc
  17 0000 130101FF 		addi	sp,sp,-16
  18              		.cfi_def_cfa_offset 16
  19 0004 23348100 		sd	s0,8(sp)
  20              		.cfi_offset 8, -8
  21 0008 13040101 		addi	s0,sp,16
  22              		.cfi_def_cfa 8, 0
   6:src/memory_allocator.cpp ****     if(!allocator.init){
  23              		.loc 1 6 5
  24              		.loc 1 6 19 is_stmt 0
  25 000c 97070000 		lbu	a5,.LANCHOR0
  25      83C70700 
  26              		.loc 1 6 5
  27 0014 63960704 		bne	a5,zero,.L2
   7:src/memory_allocator.cpp ****         allocator.fall_head = nullptr;
  28              		.loc 1 7 9 is_stmt 1
  29              		.loc 1 7 29 is_stmt 0
  30 0018 17070000 		lla	a4,.LANCHOR0
  30      13070700 
  31 0020 23380700 		sd	zero,16(a4)
   8:src/memory_allocator.cpp ****         allocator.fmem_head = (FreeSegment*)HEAP_START_ADDR;
  32              		.loc 1 8 9 is_stmt 1
  33              		.loc 1 8 29 is_stmt 0
  34 0024 97060000 		lla	a3,HEAP_START_ADDR
  34      93860600 
  35 002c 83B70600 		ld	a5,0(a3)
  36 0030 2334F700 		sd	a5,8(a4)
   9:src/memory_allocator.cpp ****         allocator.fmem_head->next = nullptr;
  37              		.loc 1 9 9 is_stmt 1
  38              		.loc 1 9 35 is_stmt 0
  39 0034 23B00700 		sd	zero,0(a5)
  10:src/memory_allocator.cpp ****         allocator.fmem_head->size = ((size_t)HEAP_END_ADDR - (size_t)HEAP_START_ADDR - sizeof(FreeS
  40              		.loc 1 10 9 is_stmt 1
  41              		.loc 1 10 60 is_stmt 0
  42 0038 97070000 		lla	a5,HEAP_END_ADDR
  42      93870700 
  43 0040 83B70700 		ld	a5,0(a5)
  44 0044 83B60600 		ld	a3,0(a3)
GAS LISTING /tmp/ccX8I8ej.s 			page 2


  45 0048 B387D740 		sub	a5,a5,a3
  46              		.loc 1 10 19
  47 004c 83368700 		ld	a3,8(a4)
  48              		.loc 1 10 86
  49 0050 938707FF 		addi	a5,a5,-16
  50              		.loc 1 10 35
  51 0054 23B4F600 		sd	a5,8(a3)
  11:src/memory_allocator.cpp ****         allocator.init = true;
  52              		.loc 1 11 9 is_stmt 1
  53              		.loc 1 11 24 is_stmt 0
  54 0058 93071000 		li	a5,1
  55 005c 2300F700 		sb	a5,0(a4)
  56              	.L2:
  12:src/memory_allocator.cpp ****     }
  13:src/memory_allocator.cpp ****     return allocator;
  57              		.loc 1 13 5 is_stmt 1
  14:src/memory_allocator.cpp **** }
  58              		.loc 1 14 1 is_stmt 0
  59 0060 17050000 		lla	a0,.LANCHOR0
  59      13050500 
  60 0068 03348100 		ld	s0,8(sp)
  61              		.cfi_restore 8
  62              		.cfi_def_cfa 2, 16
  63 006c 13010101 		addi	sp,sp,16
  64              		.cfi_def_cfa_offset 0
  65 0070 67800000 		jr	ra
  66              		.cfi_endproc
  67              	.LFE1:
  69              		.align	2
  70              		.globl	_ZN15MemoryAllocator9mem_allocEm
  72              	_ZN15MemoryAllocator9mem_allocEm:
  73              	.LFB2:
  15:src/memory_allocator.cpp **** 
  16:src/memory_allocator.cpp **** void* MemoryAllocator::mem_alloc(size_t size){
  74              		.loc 1 16 46 is_stmt 1
  75              		.cfi_startproc
  76              	.LVL0:
  77 0074 130101FF 		addi	sp,sp,-16
  78              		.cfi_def_cfa_offset 16
  79 0078 23348100 		sd	s0,8(sp)
  80              		.cfi_offset 8, -8
  81 007c 13040101 		addi	s0,sp,16
  82              		.cfi_def_cfa 8, 0
  17:src/memory_allocator.cpp ****     FreeSegment* best = nullptr,*best_prev = nullptr,* curr = fmem_head, *prev = nullptr;
  83              		.loc 1 17 5
  84              	.LVL1:
  85              		.loc 1 17 56 is_stmt 0
  86 0080 83378500 		ld	a5,8(a0)
  87              	.LVL2:
  18:src/memory_allocator.cpp ****     size = size*MEM_BLOCK_SIZE;
  88              		.loc 1 18 5 is_stmt 1
  89              		.loc 1 18 10 is_stmt 0
  90 0084 93956500 		slli	a1,a1,6
  91              	.LVL3:
  17:src/memory_allocator.cpp ****     FreeSegment* best = nullptr,*best_prev = nullptr,* curr = fmem_head, *prev = nullptr;
  92              		.loc 1 17 75
  93 0088 13060000 		li	a2,0
GAS LISTING /tmp/ccX8I8ej.s 			page 3


  17:src/memory_allocator.cpp ****     FreeSegment* best = nullptr,*best_prev = nullptr,* curr = fmem_head, *prev = nullptr;
  94              		.loc 1 17 34
  95 008c 93080000 		li	a7,0
  17:src/memory_allocator.cpp ****     FreeSegment* best = nullptr,*best_prev = nullptr,* curr = fmem_head, *prev = nullptr;
  96              		.loc 1 17 18
  97 0090 13070000 		li	a4,0
  98 0094 6F004001 		j	.L7
  99              	.LVL4:
 100              	.L13:
  19:src/memory_allocator.cpp **** 
  20:src/memory_allocator.cpp **** 
  21:src/memory_allocator.cpp ****     while(curr){
  22:src/memory_allocator.cpp ****         if(curr->size >= size)
  23:src/memory_allocator.cpp ****             if (!best || (curr->size < best->size)){
  24:src/memory_allocator.cpp ****                 best = curr;     
  25:src/memory_allocator.cpp ****                 best_prev = prev;
 101              		.loc 1 25 27
 102 0098 93080600 		mv	a7,a2
 103              	.LVL5:
  24:src/memory_allocator.cpp ****                 best_prev = prev;
 104              		.loc 1 24 22
 105 009c 13870700 		mv	a4,a5
 106              	.LVL6:
 107              	.L6:
  26:src/memory_allocator.cpp ****             }
  27:src/memory_allocator.cpp ****         prev = curr;
 108              		.loc 1 27 9 is_stmt 1
  28:src/memory_allocator.cpp ****         curr = curr->next;
 109              		.loc 1 28 9
  27:src/memory_allocator.cpp ****         curr = curr->next;
 110              		.loc 1 27 14 is_stmt 0
 111 00a0 13860700 		mv	a2,a5
 112              		.loc 1 28 14
 113 00a4 83B70700 		ld	a5,0(a5)
 114              	.LVL7:
 115              	.L7:
  21:src/memory_allocator.cpp ****         if(curr->size >= size)
 116              		.loc 1 21 5 is_stmt 1
  21:src/memory_allocator.cpp ****         if(curr->size >= size)
 117              		.loc 1 21 11 is_stmt 0
 118 00a8 63820702 		beq	a5,zero,.L5
  22:src/memory_allocator.cpp ****             if (!best || (curr->size < best->size)){
 119              		.loc 1 22 9 is_stmt 1
  22:src/memory_allocator.cpp ****             if (!best || (curr->size < best->size)){
 120              		.loc 1 22 18 is_stmt 0
 121 00ac 83B68700 		ld	a3,8(a5)
  22:src/memory_allocator.cpp ****             if (!best || (curr->size < best->size)){
 122              		.loc 1 22 9
 123 00b0 E3E8B6FE 		bltu	a3,a1,.L6
  23:src/memory_allocator.cpp ****                 best = curr;     
 124              		.loc 1 23 13 is_stmt 1
 125 00b4 E30207FE 		beq	a4,zero,.L13
  23:src/memory_allocator.cpp ****                 best = curr;     
 126              		.loc 1 23 46 is_stmt 0 discriminator 1
 127 00b8 03388700 		ld	a6,8(a4)
  23:src/memory_allocator.cpp ****                 best = curr;     
 128              		.loc 1 23 23 discriminator 1
GAS LISTING /tmp/ccX8I8ej.s 			page 4


 129 00bc E3F206FF 		bgeu	a3,a6,.L6
  25:src/memory_allocator.cpp ****             }
 130              		.loc 1 25 27
 131 00c0 93080600 		mv	a7,a2
 132              	.LVL8:
  24:src/memory_allocator.cpp ****                 best_prev = prev;
 133              		.loc 1 24 22
 134 00c4 13870700 		mv	a4,a5
 135              	.LVL9:
 136 00c8 6FF09FFD 		j	.L6
 137              	.LVL10:
 138              	.L5:
  29:src/memory_allocator.cpp ****     } 
  30:src/memory_allocator.cpp ****     if(!best)
 139              		.loc 1 30 5 is_stmt 1
 140 00cc 63080702 		beq	a4,zero,.L4
  31:src/memory_allocator.cpp ****         return nullptr;
  32:src/memory_allocator.cpp ****     if(best->size - size < sizeof(FreeSegment) + MEM_BLOCK_SIZE){
 141              		.loc 1 32 5
 142              		.loc 1 32 14 is_stmt 0
 143 00d0 83378700 		ld	a5,8(a4)
 144              	.LVL11:
 145              		.loc 1 32 19
 146 00d4 B387B740 		sub	a5,a5,a1
 147              		.loc 1 32 5
 148 00d8 9306F004 		li	a3,79
 149 00dc 63EEF602 		bgtu	a5,a3,.L9
  33:src/memory_allocator.cpp ****         if(!best_prev) fmem_head = best->next;
 150              		.loc 1 33 9 is_stmt 1
 151 00e0 63860802 		beq	a7,zero,.L16
  34:src/memory_allocator.cpp ****         else best_prev->next = best->next;
 152              		.loc 1 34 14
 153              		.loc 1 34 38 is_stmt 0
 154 00e4 83370700 		ld	a5,0(a4)
 155              		.loc 1 34 30
 156 00e8 23B0F800 		sd	a5,0(a7)
 157              	.L11:
  35:src/memory_allocator.cpp ****     }else{
  36:src/memory_allocator.cpp ****         curr = (FreeSegment*)((char*)best + sizeof(FreeSegment) + size);
  37:src/memory_allocator.cpp ****         curr->next = best->next;
  38:src/memory_allocator.cpp ****         curr->size = best->size - size - sizeof(FreeSegment);
  39:src/memory_allocator.cpp ****         best->size = size;
  40:src/memory_allocator.cpp ****         if(best_prev) best_prev->next = curr;
  41:src/memory_allocator.cpp ****         else fmem_head = curr;
  42:src/memory_allocator.cpp ****     }
  43:src/memory_allocator.cpp ****     best->next = fall_head;
 158              		.loc 1 43 5 is_stmt 1
 159              		.loc 1 43 18 is_stmt 0
 160 00ec 83370501 		ld	a5,16(a0)
 161              		.loc 1 43 16
 162 00f0 2330F700 		sd	a5,0(a4)
  44:src/memory_allocator.cpp ****     fall_head = best;
 163              		.loc 1 44 5 is_stmt 1
 164              		.loc 1 44 15 is_stmt 0
 165 00f4 2338E500 		sd	a4,16(a0)
  45:src/memory_allocator.cpp ****     return (char*)best+sizeof(FreeSegment);
 166              		.loc 1 45 5 is_stmt 1
GAS LISTING /tmp/ccX8I8ej.s 			page 5


 167              		.loc 1 45 42 is_stmt 0
 168 00f8 13070701 		addi	a4,a4,16
 169              	.LVL12:
 170              	.L4:
  46:src/memory_allocator.cpp **** }
 171              		.loc 1 46 1
 172 00fc 13050700 		mv	a0,a4
 173              	.LVL13:
 174 0100 03348100 		ld	s0,8(sp)
 175              		.cfi_remember_state
 176              		.cfi_restore 8
 177              		.cfi_def_cfa 2, 16
 178 0104 13010101 		addi	sp,sp,16
 179              		.cfi_def_cfa_offset 0
 180 0108 67800000 		jr	ra
 181              	.LVL14:
 182              	.L16:
 183              		.cfi_restore_state
  33:src/memory_allocator.cpp ****         else best_prev->next = best->next;
 184              		.loc 1 33 24 is_stmt 1 discriminator 1
  33:src/memory_allocator.cpp ****         else best_prev->next = best->next;
 185              		.loc 1 33 42 is_stmt 0 discriminator 1
 186 010c 83370700 		ld	a5,0(a4)
  33:src/memory_allocator.cpp ****         else best_prev->next = best->next;
 187              		.loc 1 33 34 discriminator 1
 188 0110 2334F500 		sd	a5,8(a0)
 189 0114 6FF09FFD 		j	.L11
 190              	.L9:
  36:src/memory_allocator.cpp ****         curr->next = best->next;
 191              		.loc 1 36 9 is_stmt 1
  36:src/memory_allocator.cpp ****         curr->next = best->next;
 192              		.loc 1 36 65 is_stmt 0
 193 0118 93870501 		addi	a5,a1,16
  36:src/memory_allocator.cpp ****         curr->next = best->next;
 194              		.loc 1 36 14
 195 011c B307F700 		add	a5,a4,a5
 196              	.LVL15:
  37:src/memory_allocator.cpp ****         curr->size = best->size - size - sizeof(FreeSegment);
 197              		.loc 1 37 9 is_stmt 1
  37:src/memory_allocator.cpp ****         curr->size = best->size - size - sizeof(FreeSegment);
 198              		.loc 1 37 28 is_stmt 0
 199 0120 83360700 		ld	a3,0(a4)
  37:src/memory_allocator.cpp ****         curr->size = best->size - size - sizeof(FreeSegment);
 200              		.loc 1 37 20
 201 0124 23B0D700 		sd	a3,0(a5)
  38:src/memory_allocator.cpp ****         best->size = size;
 202              		.loc 1 38 9 is_stmt 1
  38:src/memory_allocator.cpp ****         best->size = size;
 203              		.loc 1 38 28 is_stmt 0
 204 0128 83368700 		ld	a3,8(a4)
  38:src/memory_allocator.cpp ****         best->size = size;
 205              		.loc 1 38 33
 206 012c B386B640 		sub	a3,a3,a1
  38:src/memory_allocator.cpp ****         best->size = size;
 207              		.loc 1 38 40
 208 0130 938606FF 		addi	a3,a3,-16
  38:src/memory_allocator.cpp ****         best->size = size;
GAS LISTING /tmp/ccX8I8ej.s 			page 6


 209              		.loc 1 38 20
 210 0134 23B4D700 		sd	a3,8(a5)
  39:src/memory_allocator.cpp ****         if(best_prev) best_prev->next = curr;
 211              		.loc 1 39 9 is_stmt 1
  39:src/memory_allocator.cpp ****         if(best_prev) best_prev->next = curr;
 212              		.loc 1 39 20 is_stmt 0
 213 0138 2334B700 		sd	a1,8(a4)
  40:src/memory_allocator.cpp ****         else fmem_head = curr;
 214              		.loc 1 40 9 is_stmt 1
 215 013c 63860800 		beq	a7,zero,.L12
  40:src/memory_allocator.cpp ****         else fmem_head = curr;
 216              		.loc 1 40 23 discriminator 1
  40:src/memory_allocator.cpp ****         else fmem_head = curr;
 217              		.loc 1 40 39 is_stmt 0 discriminator 1
 218 0140 23B0F800 		sd	a5,0(a7)
 219 0144 6FF09FFA 		j	.L11
 220              	.L12:
  41:src/memory_allocator.cpp ****     }
 221              		.loc 1 41 14 is_stmt 1
  41:src/memory_allocator.cpp ****     }
 222              		.loc 1 41 24 is_stmt 0
 223 0148 2334F500 		sd	a5,8(a0)
 224 014c 6FF01FFA 		j	.L11
 225              		.cfi_endproc
 226              	.LFE2:
 228              		.align	2
 229              		.globl	_ZN15MemoryAllocator17wantToFreeAddressEPv
 231              	_ZN15MemoryAllocator17wantToFreeAddressEPv:
 232              	.LFB3:
  47:src/memory_allocator.cpp **** 
  48:src/memory_allocator.cpp **** bool MemoryAllocator::wantToFreeAddress(void* adr){
 233              		.loc 1 48 51 is_stmt 1
 234              		.cfi_startproc
 235              	.LVL16:
 236 0150 130101FF 		addi	sp,sp,-16
 237              		.cfi_def_cfa_offset 16
 238 0154 23348100 		sd	s0,8(sp)
 239              		.cfi_offset 8, -8
 240 0158 13040101 		addi	s0,sp,16
 241              		.cfi_def_cfa 8, 0
  49:src/memory_allocator.cpp ****     if(adr < HEAP_START_ADDR || adr >= HEAP_END_ADDR)
 242              		.loc 1 49 5
 243              		.loc 1 49 12 is_stmt 0
 244 015c 97070000 		lla	a5,HEAP_START_ADDR
 244      93870700 
 245 0164 83B70700 		ld	a5,0(a5)
 246              		.loc 1 49 5
 247 0168 63EEF504 		bgtu	a5,a1,.L23
 248              		.loc 1 49 37 discriminator 1
 249 016c 97070000 		lla	a5,HEAP_END_ADDR
 249      93870700 
 250 0174 83B70700 		ld	a5,0(a5)
 251              		.loc 1 49 30 discriminator 1
 252 0178 63FEF504 		bleu	a5,a1,.L24
  50:src/memory_allocator.cpp ****         return true;
  51:src/memory_allocator.cpp ****     size_t t = (size_t)adr;
 253              		.loc 1 51 5 is_stmt 1
GAS LISTING /tmp/ccX8I8ej.s 			page 7


 254              	.LVL17:
  52:src/memory_allocator.cpp ****     FreeSegment* prev = nullptr, *cur = fall_head;
 255              		.loc 1 52 5
 256              		.loc 1 52 35 is_stmt 0
 257 017c 83370501 		ld	a5,16(a0)
 258              	.LVL18:
 259              		.loc 1 52 18
 260 0180 93060000 		li	a3,0
 261              	.LVL19:
 262              	.L20:
  53:src/memory_allocator.cpp ****     while(cur)
 263              		.loc 1 53 5 is_stmt 1
 264              		.loc 1 53 11 is_stmt 0
 265 0184 638C0700 		beq	a5,zero,.L19
  54:src/memory_allocator.cpp ****     {
  55:src/memory_allocator.cpp ****         if(t == (size_t)cur+sizeof(FreeSegment))
 266              		.loc 1 55 9 is_stmt 1
 267              		.loc 1 55 28 is_stmt 0
 268 0188 13870701 		addi	a4,a5,16
 269              		.loc 1 55 9
 270 018c 6308B700 		beq	a4,a1,.L19
  56:src/memory_allocator.cpp ****             break;
  57:src/memory_allocator.cpp ****         prev = cur;
 271              		.loc 1 57 9 is_stmt 1
 272              	.LVL20:
  58:src/memory_allocator.cpp ****         cur = cur->next;
 273              		.loc 1 58 9
  57:src/memory_allocator.cpp ****         cur = cur->next;
 274              		.loc 1 57 14 is_stmt 0
 275 0190 93860700 		mv	a3,a5
 276              		.loc 1 58 13
 277 0194 83B70700 		ld	a5,0(a5)
 278              	.LVL21:
  53:src/memory_allocator.cpp ****     {
 279              		.loc 1 53 5
 280 0198 6FF0DFFE 		j	.L20
 281              	.L19:
  59:src/memory_allocator.cpp ****     }
  60:src/memory_allocator.cpp ****     if(cur)
 282              		.loc 1 60 5 is_stmt 1
 283 019c 63800704 		beq	a5,zero,.L25
  61:src/memory_allocator.cpp ****     {
  62:src/memory_allocator.cpp ****         if(prev)
 284              		.loc 1 62 9
 285 01a0 638C0600 		beq	a3,zero,.L21
  63:src/memory_allocator.cpp ****             prev->next = cur->next;
 286              		.loc 1 63 13
 287              		.loc 1 63 31 is_stmt 0
 288 01a4 03B70700 		ld	a4,0(a5)
 289              		.loc 1 63 24
 290 01a8 23B0E600 		sd	a4,0(a3)
 291              	.L22:
  64:src/memory_allocator.cpp ****         else
  65:src/memory_allocator.cpp ****             fall_head = cur->next;
  66:src/memory_allocator.cpp ****         cur->next = nullptr;
 292              		.loc 1 66 9 is_stmt 1
 293              		.loc 1 66 19 is_stmt 0
GAS LISTING /tmp/ccX8I8ej.s 			page 8


 294 01ac 23B00700 		sd	zero,0(a5)
  67:src/memory_allocator.cpp ****         return false;
 295              		.loc 1 67 9 is_stmt 1
 296              		.loc 1 67 16 is_stmt 0
 297 01b0 13050000 		li	a0,0
 298              	.LVL22:
 299 01b4 6F004001 		j	.L18
 300              	.LVL23:
 301              	.L21:
  65:src/memory_allocator.cpp ****         cur->next = nullptr;
 302              		.loc 1 65 13 is_stmt 1
  65:src/memory_allocator.cpp ****         cur->next = nullptr;
 303              		.loc 1 65 30 is_stmt 0
 304 01b8 03B70700 		ld	a4,0(a5)
  65:src/memory_allocator.cpp ****         cur->next = nullptr;
 305              		.loc 1 65 23
 306 01bc 2338E500 		sd	a4,16(a0)
 307 01c0 6FF0DFFE 		j	.L22
 308              	.LVL24:
 309              	.L23:
  50:src/memory_allocator.cpp ****     size_t t = (size_t)adr;
 310              		.loc 1 50 16
 311 01c4 13051000 		li	a0,1
 312              	.LVL25:
 313              	.L18:
  68:src/memory_allocator.cpp ****     }
  69:src/memory_allocator.cpp ****     else return true;
  70:src/memory_allocator.cpp **** }
 314              		.loc 1 70 1
 315 01c8 03348100 		ld	s0,8(sp)
 316              		.cfi_remember_state
 317              		.cfi_restore 8
 318              		.cfi_def_cfa 2, 16
 319 01cc 13010101 		addi	sp,sp,16
 320              		.cfi_def_cfa_offset 0
 321 01d0 67800000 		jr	ra
 322              	.LVL26:
 323              	.L24:
 324              		.cfi_restore_state
  50:src/memory_allocator.cpp ****     size_t t = (size_t)adr;
 325              		.loc 1 50 16
 326 01d4 13051000 		li	a0,1
 327              	.LVL27:
 328 01d8 6FF01FFF 		j	.L18
 329              	.LVL28:
 330              	.L25:
  69:src/memory_allocator.cpp **** }
 331              		.loc 1 69 17
 332 01dc 13051000 		li	a0,1
 333              	.LVL29:
 334 01e0 6FF09FFE 		j	.L18
 335              		.cfi_endproc
 336              	.LFE3:
 338              		.align	2
 339              		.globl	_ZN15MemoryAllocator13mergeWithNextEP11FreeSegment
 341              	_ZN15MemoryAllocator13mergeWithNextEP11FreeSegment:
 342              	.LFB4:
GAS LISTING /tmp/ccX8I8ej.s 			page 9


  71:src/memory_allocator.cpp **** 
  72:src/memory_allocator.cpp **** FreeSegment* MemoryAllocator::mergeWithNext(FreeSegment* t){
 343              		.loc 1 72 60 is_stmt 1
 344              		.cfi_startproc
 345              	.LVL30:
 346 01e4 130101FF 		addi	sp,sp,-16
 347              		.cfi_def_cfa_offset 16
 348 01e8 23348100 		sd	s0,8(sp)
 349              		.cfi_offset 8, -8
 350 01ec 13040101 		addi	s0,sp,16
 351              		.cfi_def_cfa 8, 0
  73:src/memory_allocator.cpp ****     if((char*)t + sizeof(FreeSegment) + t->size == (char*)t->next){
 352              		.loc 1 73 5
 353              		.loc 1 73 44 is_stmt 0
 354 01f0 03B78500 		ld	a4,8(a1)
 355              		.loc 1 73 39
 356 01f4 93070701 		addi	a5,a4,16
 357 01f8 B387F500 		add	a5,a1,a5
 358              		.loc 1 73 62
 359 01fc 03B50500 		ld	a0,0(a1)
 360              	.LVL31:
 361              		.loc 1 73 5
 362 0200 6388A700 		beq	a5,a0,.L30
 363              	.L27:
  74:src/memory_allocator.cpp ****         t->size += t->next->size + sizeof(FreeSegment);
  75:src/memory_allocator.cpp ****         t->next = t->next->next;
  76:src/memory_allocator.cpp ****         return t;
  77:src/memory_allocator.cpp ****     }
  78:src/memory_allocator.cpp ****     return t->next;
  79:src/memory_allocator.cpp **** }
 364              		.loc 1 79 1
 365 0204 03348100 		ld	s0,8(sp)
 366              		.cfi_remember_state
 367              		.cfi_restore 8
 368              		.cfi_def_cfa 2, 16
 369 0208 13010101 		addi	sp,sp,16
 370              		.cfi_def_cfa_offset 0
 371 020c 67800000 		jr	ra
 372              	.L30:
 373              		.cfi_restore_state
  74:src/memory_allocator.cpp ****         t->size += t->next->size + sizeof(FreeSegment);
 374              		.loc 1 74 9 is_stmt 1
  74:src/memory_allocator.cpp ****         t->size += t->next->size + sizeof(FreeSegment);
 375              		.loc 1 74 29 is_stmt 0
 376 0210 83378500 		ld	a5,8(a0)
  74:src/memory_allocator.cpp ****         t->size += t->next->size + sizeof(FreeSegment);
 377              		.loc 1 74 17
 378 0214 3307F700 		add	a4,a4,a5
 379 0218 13070701 		addi	a4,a4,16
 380 021c 23B4E500 		sd	a4,8(a1)
  75:src/memory_allocator.cpp ****         return t;
 381              		.loc 1 75 9 is_stmt 1
  75:src/memory_allocator.cpp ****         return t;
 382              		.loc 1 75 28 is_stmt 0
 383 0220 83370500 		ld	a5,0(a0)
  75:src/memory_allocator.cpp ****         return t;
 384              		.loc 1 75 17
GAS LISTING /tmp/ccX8I8ej.s 			page 10


 385 0224 23B0F500 		sd	a5,0(a1)
  76:src/memory_allocator.cpp ****     }
 386              		.loc 1 76 9 is_stmt 1
  76:src/memory_allocator.cpp ****     }
 387              		.loc 1 76 16 is_stmt 0
 388 0228 13850500 		mv	a0,a1
 389 022c 6FF09FFD 		j	.L27
 390              		.cfi_endproc
 391              	.LFE4:
 393              		.align	2
 394              		.globl	_ZN15MemoryAllocator8mem_freeEPv
 396              	_ZN15MemoryAllocator8mem_freeEPv:
 397              	.LFB5:
  80:src/memory_allocator.cpp **** 
  81:src/memory_allocator.cpp **** int MemoryAllocator::mem_free(void* adr){
 398              		.loc 1 81 41 is_stmt 1
 399              		.cfi_startproc
 400              	.LVL32:
 401 0230 130101FD 		addi	sp,sp,-48
 402              		.cfi_def_cfa_offset 48
 403 0234 23341102 		sd	ra,40(sp)
 404 0238 23308102 		sd	s0,32(sp)
 405 023c 233C9100 		sd	s1,24(sp)
 406 0240 23382101 		sd	s2,16(sp)
 407 0244 23343101 		sd	s3,8(sp)
 408 0248 23304101 		sd	s4,0(sp)
 409              		.cfi_offset 1, -8
 410              		.cfi_offset 8, -16
 411              		.cfi_offset 9, -24
 412              		.cfi_offset 18, -32
 413              		.cfi_offset 19, -40
 414              		.cfi_offset 20, -48
 415 024c 13040103 		addi	s0,sp,48
 416              		.cfi_def_cfa 8, 0
 417 0250 93090500 		mv	s3,a0
 418 0254 13890500 		mv	s2,a1
  82:src/memory_allocator.cpp ****     if(wantToFreeAddress(adr)) return -1;
 419              		.loc 1 82 5
 420              		.loc 1 82 25 is_stmt 0
 421 0258 97000000 		call	_ZN15MemoryAllocator17wantToFreeAddressEPv
 421      E7800000 
 422              	.LVL33:
 423              		.loc 1 82 5
 424 0260 6310050A 		bne	a0,zero,.L40
  83:src/memory_allocator.cpp ****     if(!fmem_head)
 425              		.loc 1 83 5 is_stmt 1
 426              	.LBB2:
 427              		.loc 1 83 9 is_stmt 0
 428 0264 83B78900 		ld	a5,8(s3)
 429              		.loc 1 83 5
 430 0268 63880700 		beq	a5,zero,.L42
 431              	.LBB3:
  84:src/memory_allocator.cpp ****         fmem_head = (FreeSegment*)((char*)adr - sizeof(FreeSegment));
  85:src/memory_allocator.cpp ****     else{
  86:src/memory_allocator.cpp ****         FreeSegment* newsgm = (FreeSegment*)((char*)adr - sizeof(FreeSegment)), *prev,* cur;
 432              		.loc 1 86 9 is_stmt 1
 433              		.loc 1 86 22 is_stmt 0
GAS LISTING /tmp/ccX8I8ej.s 			page 11


 434 026c 130A09FF 		addi	s4,s2,-16
 435              	.LVL34:
  87:src/memory_allocator.cpp ****         for(prev = nullptr, cur = fmem_head; cur; prev = cur, cur = cur->next)
 436              		.loc 1 87 9 is_stmt 1
 437              		.loc 1 87 18 is_stmt 0
 438 0270 93040000 		li	s1,0
 439 0274 6F00C001 		j	.L37
 440              	.LVL35:
 441              	.L42:
 442              	.LBE3:
  84:src/memory_allocator.cpp ****         fmem_head = (FreeSegment*)((char*)adr - sizeof(FreeSegment));
 443              		.loc 1 84 9 is_stmt 1
  84:src/memory_allocator.cpp ****         fmem_head = (FreeSegment*)((char*)adr - sizeof(FreeSegment));
 444              		.loc 1 84 21 is_stmt 0
 445 0278 130909FF 		addi	s2,s2,-16
 446              	.LVL36:
  84:src/memory_allocator.cpp ****         fmem_head = (FreeSegment*)((char*)adr - sizeof(FreeSegment));
 447              		.loc 1 84 19
 448 027c 23B42901 		sd	s2,8(s3)
 449 0280 6F004005 		j	.L32
 450              	.LVL37:
 451              	.L35:
 452              	.LBB4:
  88:src/memory_allocator.cpp ****             if((!prev || (size_t)adr > (size_t)prev) && (size_t)adr < (size_t)cur)
 453              		.loc 1 88 54 discriminator 3
 454 0284 636EF900 		bltu	s2,a5,.L34
 455              	.L36:
 456              	.LVL38:
  87:src/memory_allocator.cpp ****         for(prev = nullptr, cur = fmem_head; cur; prev = cur, cur = cur->next)
 457              		.loc 1 87 56 discriminator 2
 458 0288 93840700 		mv	s1,a5
  87:src/memory_allocator.cpp ****         for(prev = nullptr, cur = fmem_head; cur; prev = cur, cur = cur->next)
 459              		.loc 1 87 67 discriminator 2
 460 028c 83B70700 		ld	a5,0(a5)
 461              	.LVL39:
 462              	.L37:
  87:src/memory_allocator.cpp ****         for(prev = nullptr, cur = fmem_head; cur; prev = cur, cur = cur->next)
 463              		.loc 1 87 46 discriminator 1
 464 0290 63880700 		beq	a5,zero,.L34
 465              		.loc 1 88 13 is_stmt 1
 466 0294 E38804FE 		beq	s1,zero,.L35
 467              		.loc 1 88 23 is_stmt 0 discriminator 2
 468 0298 E3F824FF 		bleu	s2,s1,.L36
 469 029c 6FF09FFE 		j	.L35
 470              	.L34:
  89:src/memory_allocator.cpp ****                 break;
  90:src/memory_allocator.cpp ****         newsgm->next = cur;
 471              		.loc 1 90 9 is_stmt 1
 472              		.loc 1 90 22 is_stmt 0
 473 02a0 2338F9FE 		sd	a5,-16(s2)
  91:src/memory_allocator.cpp ****         if(cur)
 474              		.loc 1 91 9 is_stmt 1
 475 02a4 638A0700 		beq	a5,zero,.L38
  92:src/memory_allocator.cpp ****             mergeWithNext(newsgm);
 476              		.loc 1 92 13
 477              		.loc 1 92 26 is_stmt 0
 478 02a8 93050A00 		mv	a1,s4
GAS LISTING /tmp/ccX8I8ej.s 			page 12


 479 02ac 13850900 		mv	a0,s3
 480 02b0 97000000 		call	_ZN15MemoryAllocator13mergeWithNextEP11FreeSegment
 480      E7800000 
 481              	.LVL40:
 482              	.L38:
  93:src/memory_allocator.cpp ****         if(prev){
 483              		.loc 1 93 9 is_stmt 1
 484 02b8 638E0402 		beq	s1,zero,.L39
  94:src/memory_allocator.cpp ****             prev->next = newsgm;
 485              		.loc 1 94 13
 486              		.loc 1 94 24 is_stmt 0
 487 02bc 23B04401 		sd	s4,0(s1)
  95:src/memory_allocator.cpp ****             mergeWithNext(prev);
 488              		.loc 1 95 13 is_stmt 1
 489              		.loc 1 95 26 is_stmt 0
 490 02c0 93850400 		mv	a1,s1
 491 02c4 13850900 		mv	a0,s3
 492 02c8 97000000 		call	_ZN15MemoryAllocator13mergeWithNextEP11FreeSegment
 492      E7800000 
 493              	.LVL41:
 494              	.LBE4:
 495              	.LBE2:
  96:src/memory_allocator.cpp ****         }
  97:src/memory_allocator.cpp ****         else
  98:src/memory_allocator.cpp ****             fmem_head = newsgm;
  99:src/memory_allocator.cpp ****     }
 100:src/memory_allocator.cpp ****     return 0;
 496              		.loc 1 100 12
 497 02d0 13050000 		li	a0,0
 498              	.LVL42:
 499              	.L32:
 101:src/memory_allocator.cpp **** }
 500              		.loc 1 101 1
 501 02d4 83308102 		ld	ra,40(sp)
 502              		.cfi_remember_state
 503              		.cfi_restore 1
 504 02d8 03340102 		ld	s0,32(sp)
 505              		.cfi_restore 8
 506              		.cfi_def_cfa 2, 48
 507 02dc 83348101 		ld	s1,24(sp)
 508              		.cfi_restore 9
 509 02e0 03390101 		ld	s2,16(sp)
 510              		.cfi_restore 18
 511 02e4 83398100 		ld	s3,8(sp)
 512              		.cfi_restore 19
 513              	.LVL43:
 514 02e8 033A0100 		ld	s4,0(sp)
 515              		.cfi_restore 20
 516 02ec 13010103 		addi	sp,sp,48
 517              		.cfi_def_cfa_offset 0
 518 02f0 67800000 		jr	ra
 519              	.LVL44:
 520              	.L39:
 521              		.cfi_restore_state
 522              	.LBB6:
 523              	.LBB5:
  98:src/memory_allocator.cpp ****     }
GAS LISTING /tmp/ccX8I8ej.s 			page 13


 524              		.loc 1 98 13 is_stmt 1
  98:src/memory_allocator.cpp ****     }
 525              		.loc 1 98 23 is_stmt 0
 526 02f4 23B44901 		sd	s4,8(s3)
 527              	.LBE5:
 528              	.LBE6:
 100:src/memory_allocator.cpp **** }
 529              		.loc 1 100 12
 530 02f8 13050000 		li	a0,0
 531 02fc 6FF09FFD 		j	.L32
 532              	.LVL45:
 533              	.L40:
  82:src/memory_allocator.cpp ****     if(!fmem_head)
 534              		.loc 1 82 40
 535 0300 1305F0FF 		li	a0,-1
 536 0304 6FF01FFD 		j	.L32
 537              		.cfi_endproc
 538              	.LFE5:
 540              		.align	2
 541              		.globl	_ZN15MemoryAllocator10print_listEv
 543              	_ZN15MemoryAllocator10print_listEv:
 544              	.LFB6:
 102:src/memory_allocator.cpp **** 
 103:src/memory_allocator.cpp **** void MemoryAllocator::print_list(){
 545              		.loc 1 103 35 is_stmt 1
 546              		.cfi_startproc
 547              	.LVL46:
 548 0308 130101FE 		addi	sp,sp,-32
 549              		.cfi_def_cfa_offset 32
 550 030c 233C1100 		sd	ra,24(sp)
 551 0310 23388100 		sd	s0,16(sp)
 552 0314 23349100 		sd	s1,8(sp)
 553              		.cfi_offset 1, -8
 554              		.cfi_offset 8, -16
 555              		.cfi_offset 9, -24
 556 0318 13040102 		addi	s0,sp,32
 557              		.cfi_def_cfa 8, 0
 558 031c 93040500 		mv	s1,a0
 104:src/memory_allocator.cpp **** 
 105:src/memory_allocator.cpp ****     kprintString("------Free Segment Lista------\n");
 559              		.loc 1 105 5
 560              		.loc 1 105 17 is_stmt 0
 561 0320 17050000 		lla	a0,.LC0
 561      13050500 
 562              	.LVL47:
 563 0328 97000000 		call	_Z12kprintStringPKc
 563      E7800000 
 564              	.LVL48:
 106:src/memory_allocator.cpp ****     if(!fmem_head)
 565              		.loc 1 106 5 is_stmt 1
 566              		.loc 1 106 9 is_stmt 0
 567 0330 83B78400 		ld	a5,8(s1)
 568              		.loc 1 106 5
 569 0334 638A0704 		beq	a5,zero,.L48
 570              	.L44:
 107:src/memory_allocator.cpp ****         kprintString("LISTA JE PRAZNA!\n");
 108:src/memory_allocator.cpp ****     for(FreeSegment* curr = fmem_head; curr; curr = curr->next){
GAS LISTING /tmp/ccX8I8ej.s 			page 14


 571              		.loc 1 108 5 is_stmt 1
 572              	.LBB7:
 573              		.loc 1 108 22 is_stmt 0
 574 0338 83B48400 		ld	s1,8(s1)
 575              	.LVL49:
 576              	.L46:
 577              		.loc 1 108 40 discriminator 3
 578 033c 63800406 		beq	s1,zero,.L45
 109:src/memory_allocator.cpp ****         kprintInt((uint64)curr);
 579              		.loc 1 109 9 is_stmt 1 discriminator 2
 580              		.loc 1 109 18 is_stmt 0 discriminator 2
 581 0340 9305A000 		li	a1,10
 582 0344 13850400 		mv	a0,s1
 583 0348 97000000 		call	_Z9kprintIntmi
 583      E7800000 
 584              	.LVL50:
 110:src/memory_allocator.cpp ****         kprintString("\n");
 585              		.loc 1 110 9 is_stmt 1 discriminator 2
 586              		.loc 1 110 21 is_stmt 0 discriminator 2
 587 0350 17050000 		lla	a0,.LC2
 587      13050500 
 588 0358 97000000 		call	_Z12kprintStringPKc
 588      E7800000 
 589              	.LVL51:
 111:src/memory_allocator.cpp ****         kprintInt((uint64)curr->size);
 590              		.loc 1 111 9 is_stmt 1 discriminator 2
 591              		.loc 1 111 18 is_stmt 0 discriminator 2
 592 0360 9305A000 		li	a1,10
 593 0364 03B58400 		ld	a0,8(s1)
 594 0368 97000000 		call	_Z9kprintIntmi
 594      E7800000 
 595              	.LVL52:
 112:src/memory_allocator.cpp ****         kprintString("\n");
 596              		.loc 1 112 9 is_stmt 1 discriminator 2
 597              		.loc 1 112 21 is_stmt 0 discriminator 2
 598 0370 17050000 		lla	a0,.LC2
 598      13050500 
 599 0378 97000000 		call	_Z12kprintStringPKc
 599      E7800000 
 600              	.LVL53:
 108:src/memory_allocator.cpp ****         kprintInt((uint64)curr);
 601              		.loc 1 108 51 discriminator 2
 602 0380 83B40400 		ld	s1,0(s1)
 603              	.LVL54:
 108:src/memory_allocator.cpp ****         kprintInt((uint64)curr);
 604              		.loc 1 108 5 discriminator 2
 605 0384 6FF09FFB 		j	.L46
 606              	.LVL55:
 607              	.L48:
 608              	.LBE7:
 107:src/memory_allocator.cpp ****     for(FreeSegment* curr = fmem_head; curr; curr = curr->next){
 609              		.loc 1 107 9 is_stmt 1
 107:src/memory_allocator.cpp ****     for(FreeSegment* curr = fmem_head; curr; curr = curr->next){
 610              		.loc 1 107 21 is_stmt 0
 611 0388 17050000 		lla	a0,.LC1
 611      13050500 
 612 0390 97000000 		call	_Z12kprintStringPKc
GAS LISTING /tmp/ccX8I8ej.s 			page 15


 612      E7800000 
 613              	.LVL56:
 614 0398 6FF01FFA 		j	.L44
 615              	.LVL57:
 616              	.L45:
 113:src/memory_allocator.cpp ****     }
 114:src/memory_allocator.cpp ****     kprintString("------------------------------\n");
 617              		.loc 1 114 5 is_stmt 1
 618              		.loc 1 114 17 is_stmt 0
 619 039c 17050000 		lla	a0,.LC3
 619      13050500 
 620 03a4 97000000 		call	_Z12kprintStringPKc
 620      E7800000 
 621              	.LVL58:
 115:src/memory_allocator.cpp **** }
 622              		.loc 1 115 1
 623 03ac 83308101 		ld	ra,24(sp)
 624              		.cfi_restore 1
 625 03b0 03340101 		ld	s0,16(sp)
 626              		.cfi_restore 8
 627              		.cfi_def_cfa 2, 32
 628 03b4 83348100 		ld	s1,8(sp)
 629              		.cfi_restore 9
 630              	.LVL59:
 631 03b8 13010102 		addi	sp,sp,32
 632              		.cfi_def_cfa_offset 0
 633 03bc 67800000 		jr	ra
 634              		.cfi_endproc
 635              	.LFE6:
 637              		.align	2
 638              		.globl	_ZN15MemoryAllocator14print_all_listEv
 640              	_ZN15MemoryAllocator14print_all_listEv:
 641              	.LFB7:
 116:src/memory_allocator.cpp **** 
 117:src/memory_allocator.cpp **** void MemoryAllocator::print_all_list(){
 642              		.loc 1 117 39 is_stmt 1
 643              		.cfi_startproc
 644              	.LVL60:
 645 03c0 130101FE 		addi	sp,sp,-32
 646              		.cfi_def_cfa_offset 32
 647 03c4 233C1100 		sd	ra,24(sp)
 648 03c8 23388100 		sd	s0,16(sp)
 649 03cc 23349100 		sd	s1,8(sp)
 650              		.cfi_offset 1, -8
 651              		.cfi_offset 8, -16
 652              		.cfi_offset 9, -24
 653 03d0 13040102 		addi	s0,sp,32
 654              		.cfi_def_cfa 8, 0
 655 03d4 93040500 		mv	s1,a0
 118:src/memory_allocator.cpp **** 
 119:src/memory_allocator.cpp ****     kprintString("------Allocated Segment Lista------\n");
 656              		.loc 1 119 5
 657              		.loc 1 119 17 is_stmt 0
 658 03d8 17050000 		lla	a0,.LC4
 658      13050500 
 659              	.LVL61:
 660 03e0 97000000 		call	_Z12kprintStringPKc
GAS LISTING /tmp/ccX8I8ej.s 			page 16


 660      E7800000 
 661              	.LVL62:
 120:src/memory_allocator.cpp ****     if(!fall_head)
 662              		.loc 1 120 5 is_stmt 1
 663              		.loc 1 120 9 is_stmt 0
 664 03e8 83B70401 		ld	a5,16(s1)
 665              		.loc 1 120 5
 666 03ec 638A0704 		beq	a5,zero,.L54
 667              	.L50:
 121:src/memory_allocator.cpp ****         kprintString("LISTA JE PRAZNA!\n");
 122:src/memory_allocator.cpp ****     for(FreeSegment* curr = fall_head; curr; curr = curr->next){
 668              		.loc 1 122 5 is_stmt 1
 669              	.LBB8:
 670              		.loc 1 122 22 is_stmt 0
 671 03f0 83B40401 		ld	s1,16(s1)
 672              	.LVL63:
 673              	.L52:
 674              		.loc 1 122 40 discriminator 3
 675 03f4 63800406 		beq	s1,zero,.L51
 123:src/memory_allocator.cpp ****         kprintInt((uint64)curr);
 676              		.loc 1 123 9 is_stmt 1 discriminator 2
 677              		.loc 1 123 18 is_stmt 0 discriminator 2
 678 03f8 9305A000 		li	a1,10
 679 03fc 13850400 		mv	a0,s1
 680 0400 97000000 		call	_Z9kprintIntmi
 680      E7800000 
 681              	.LVL64:
 124:src/memory_allocator.cpp ****         kprintString("\n");
 682              		.loc 1 124 9 is_stmt 1 discriminator 2
 683              		.loc 1 124 21 is_stmt 0 discriminator 2
 684 0408 17050000 		lla	a0,.LC2
 684      13050500 
 685 0410 97000000 		call	_Z12kprintStringPKc
 685      E7800000 
 686              	.LVL65:
 125:src/memory_allocator.cpp ****         kprintInt((uint64)curr->size);
 687              		.loc 1 125 9 is_stmt 1 discriminator 2
 688              		.loc 1 125 18 is_stmt 0 discriminator 2
 689 0418 9305A000 		li	a1,10
 690 041c 03B58400 		ld	a0,8(s1)
 691 0420 97000000 		call	_Z9kprintIntmi
 691      E7800000 
 692              	.LVL66:
 126:src/memory_allocator.cpp ****         kprintString("\n");
 693              		.loc 1 126 9 is_stmt 1 discriminator 2
 694              		.loc 1 126 21 is_stmt 0 discriminator 2
 695 0428 17050000 		lla	a0,.LC2
 695      13050500 
 696 0430 97000000 		call	_Z12kprintStringPKc
 696      E7800000 
 697              	.LVL67:
 122:src/memory_allocator.cpp ****         kprintInt((uint64)curr);
 698              		.loc 1 122 51 discriminator 2
 699 0438 83B40400 		ld	s1,0(s1)
 700              	.LVL68:
 122:src/memory_allocator.cpp ****         kprintInt((uint64)curr);
 701              		.loc 1 122 5 discriminator 2
GAS LISTING /tmp/ccX8I8ej.s 			page 17


 702 043c 6FF09FFB 		j	.L52
 703              	.LVL69:
 704              	.L54:
 705              	.LBE8:
 121:src/memory_allocator.cpp ****     for(FreeSegment* curr = fall_head; curr; curr = curr->next){
 706              		.loc 1 121 9 is_stmt 1
 121:src/memory_allocator.cpp ****     for(FreeSegment* curr = fall_head; curr; curr = curr->next){
 707              		.loc 1 121 21 is_stmt 0
 708 0440 17050000 		lla	a0,.LC1
 708      13050500 
 709 0448 97000000 		call	_Z12kprintStringPKc
 709      E7800000 
 710              	.LVL70:
 711 0450 6FF01FFA 		j	.L50
 712              	.LVL71:
 713              	.L51:
 127:src/memory_allocator.cpp ****     }
 128:src/memory_allocator.cpp ****     kprintString("------------------------------\n");
 714              		.loc 1 128 5 is_stmt 1
 715              		.loc 1 128 17 is_stmt 0
 716 0454 17050000 		lla	a0,.LC3
 716      13050500 
 717 045c 97000000 		call	_Z12kprintStringPKc
 717      E7800000 
 718              	.LVL72:
 129:src/memory_allocator.cpp **** }...
 719              		.loc 1 129 1
 720 0464 83308101 		ld	ra,24(sp)
 721              		.cfi_restore 1
 722 0468 03340101 		ld	s0,16(sp)
 723              		.cfi_restore 8
 724              		.cfi_def_cfa 2, 32
 725 046c 83348100 		ld	s1,8(sp)
 726              		.cfi_restore 9
 727              	.LVL73:
 728 0470 13010102 		addi	sp,sp,32
 729              		.cfi_def_cfa_offset 0
 730 0474 67800000 		jr	ra
 731              		.cfi_endproc
 732              	.LFE7:
 734              		.globl	_ZN15MemoryAllocator9allocatorE
 735              		.bss
 736              		.align	3
 737              		.set	.LANCHOR0,. + 0
 740              	_ZN15MemoryAllocator9allocatorE:
 741 0000 00000000 		.zero	24
 741      00000000 
 741      00000000 
 741      00000000 
 741      00000000 
 742              		.section	.rodata.str1.8,"aMS",@progbits,1
 743              		.align	3
 744              	.LC0:
 745 0000 2D2D2D2D 		.string	"------Free Segment Lista------\n"
 745      2D2D4672 
 745      65652053 
 745      65676D65 
GAS LISTING /tmp/ccX8I8ej.s 			page 18


 745      6E74204C 
 746              	.LC1:
 747 0020 4C495354 		.string	"LISTA JE PRAZNA!\n"
 747      41204A45 
 747      20505241 
 747      5A4E4121 
 747      0A00
 748 0032 00000000 		.zero	6
 748      0000
 749              	.LC2:
 750 0038 0A00     		.string	"\n"
 751 003a 00000000 		.zero	6
 751      0000
 752              	.LC3:
 753 0040 2D2D2D2D 		.string	"------------------------------\n"
 753      2D2D2D2D 
 753      2D2D2D2D 
 753      2D2D2D2D 
 753      2D2D2D2D 
 754              	.LC4:
 755 0060 2D2D2D2D 		.string	"------Allocated Segment Lista------\n"
 755      2D2D416C 
 755      6C6F6361 
 755      74656420 
 755      5365676D 
 756              		.text
 757              	.Letext0:
 758              		.file 2 "src/../h/../lib/hw.h"
 759              		.file 3 "src/../h/memory_allocator.hpp"
 760              		.file 4 "src/../h/kernel_funs.h"
GAS LISTING /tmp/ccX8I8ej.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 memory_allocator.cpp
     /tmp/ccX8I8ej.s:12     .text:0000000000000000 _ZN15MemoryAllocator11getInstanceEv
     /tmp/ccX8I8ej.s:16     .text:0000000000000000 .L0 
     /tmp/ccX8I8ej.s:17     .text:0000000000000000 .L0 
     /tmp/ccX8I8ej.s:18     .text:0000000000000004 .L0 
     /tmp/ccX8I8ej.s:20     .text:0000000000000008 .L0 
     /tmp/ccX8I8ej.s:22     .text:000000000000000c .L0 
     /tmp/ccX8I8ej.s:24     .text:000000000000000c .L0 
     /tmp/ccX8I8ej.s:25     .text:000000000000000c .L0 
     /tmp/ccX8I8ej.s:27     .text:0000000000000014 .L0 
     /tmp/ccX8I8ej.s:29     .text:0000000000000018 .L0 
     /tmp/ccX8I8ej.s:30     .text:0000000000000018 .L0 
     /tmp/ccX8I8ej.s:33     .text:0000000000000024 .L0 
     /tmp/ccX8I8ej.s:34     .text:0000000000000024 .L0 
     /tmp/ccX8I8ej.s:38     .text:0000000000000034 .L0 
     /tmp/ccX8I8ej.s:39     .text:0000000000000034 .L0 
     /tmp/ccX8I8ej.s:41     .text:0000000000000038 .L0 
     /tmp/ccX8I8ej.s:42     .text:0000000000000038 .L0 
     /tmp/ccX8I8ej.s:47     .text:000000000000004c .L0 
     /tmp/ccX8I8ej.s:49     .text:0000000000000050 .L0 
     /tmp/ccX8I8ej.s:51     .text:0000000000000054 .L0 
     /tmp/ccX8I8ej.s:53     .text:0000000000000058 .L0 
     /tmp/ccX8I8ej.s:54     .text:0000000000000058 .L0 
     /tmp/ccX8I8ej.s:58     .text:0000000000000060 .L0 
     /tmp/ccX8I8ej.s:59     .text:0000000000000060 .L0 
     /tmp/ccX8I8ej.s:61     .text:000000000000006c .L0 
     /tmp/ccX8I8ej.s:62     .text:000000000000006c .L0 
     /tmp/ccX8I8ej.s:64     .text:0000000000000070 .L0 
     /tmp/ccX8I8ej.s:66     .text:0000000000000074 .L0 
     /tmp/ccX8I8ej.s:72     .text:0000000000000074 _ZN15MemoryAllocator9mem_allocEm
     /tmp/ccX8I8ej.s:75     .text:0000000000000074 .L0 
     /tmp/ccX8I8ej.s:77     .text:0000000000000074 .L0 
     /tmp/ccX8I8ej.s:78     .text:0000000000000078 .L0 
     /tmp/ccX8I8ej.s:80     .text:000000000000007c .L0 
     /tmp/ccX8I8ej.s:82     .text:0000000000000080 .L0 
     /tmp/ccX8I8ej.s:85     .text:0000000000000080 .L0 
     /tmp/ccX8I8ej.s:86     .text:0000000000000080 .L0 
     /tmp/ccX8I8ej.s:89     .text:0000000000000084 .L0 
     /tmp/ccX8I8ej.s:90     .text:0000000000000084 .L0 
     /tmp/ccX8I8ej.s:93     .text:0000000000000088 .L0 
     /tmp/ccX8I8ej.s:95     .text:000000000000008c .L0 
     /tmp/ccX8I8ej.s:97     .text:0000000000000090 .L0 
     /tmp/ccX8I8ej.s:102    .text:0000000000000098 .L0 
     /tmp/ccX8I8ej.s:105    .text:000000000000009c .L0 
     /tmp/ccX8I8ej.s:109    .text:00000000000000a0 .L0 
     /tmp/ccX8I8ej.s:110    .text:00000000000000a0 .L0 
     /tmp/ccX8I8ej.s:111    .text:00000000000000a0 .L0 
     /tmp/ccX8I8ej.s:113    .text:00000000000000a4 .L0 
     /tmp/ccX8I8ej.s:117    .text:00000000000000a8 .L0 
     /tmp/ccX8I8ej.s:118    .text:00000000000000a8 .L0 
     /tmp/ccX8I8ej.s:120    .text:00000000000000ac .L0 
     /tmp/ccX8I8ej.s:121    .text:00000000000000ac .L0 
     /tmp/ccX8I8ej.s:123    .text:00000000000000b0 .L0 
     /tmp/ccX8I8ej.s:125    .text:00000000000000b4 .L0 
     /tmp/ccX8I8ej.s:127    .text:00000000000000b8 .L0 
     /tmp/ccX8I8ej.s:129    .text:00000000000000bc .L0 
GAS LISTING /tmp/ccX8I8ej.s 			page 20


     /tmp/ccX8I8ej.s:131    .text:00000000000000c0 .L0 
     /tmp/ccX8I8ej.s:134    .text:00000000000000c4 .L0 
     /tmp/ccX8I8ej.s:140    .text:00000000000000cc .L0 
     /tmp/ccX8I8ej.s:142    .text:00000000000000d0 .L0 
     /tmp/ccX8I8ej.s:143    .text:00000000000000d0 .L0 
     /tmp/ccX8I8ej.s:146    .text:00000000000000d4 .L0 
     /tmp/ccX8I8ej.s:148    .text:00000000000000d8 .L0 
     /tmp/ccX8I8ej.s:151    .text:00000000000000e0 .L0 
     /tmp/ccX8I8ej.s:153    .text:00000000000000e4 .L0 
     /tmp/ccX8I8ej.s:154    .text:00000000000000e4 .L0 
     /tmp/ccX8I8ej.s:156    .text:00000000000000e8 .L0 
     /tmp/ccX8I8ej.s:159    .text:00000000000000ec .L0 
     /tmp/ccX8I8ej.s:160    .text:00000000000000ec .L0 
     /tmp/ccX8I8ej.s:162    .text:00000000000000f0 .L0 
     /tmp/ccX8I8ej.s:164    .text:00000000000000f4 .L0 
     /tmp/ccX8I8ej.s:165    .text:00000000000000f4 .L0 
     /tmp/ccX8I8ej.s:167    .text:00000000000000f8 .L0 
     /tmp/ccX8I8ej.s:168    .text:00000000000000f8 .L0 
     /tmp/ccX8I8ej.s:172    .text:00000000000000fc .L0 
     /tmp/ccX8I8ej.s:175    .text:0000000000000104 .L0 
     /tmp/ccX8I8ej.s:176    .text:0000000000000104 .L0 
     /tmp/ccX8I8ej.s:177    .text:0000000000000104 .L0 
     /tmp/ccX8I8ej.s:179    .text:0000000000000108 .L0 
     /tmp/ccX8I8ej.s:183    .text:000000000000010c .L0 
     /tmp/ccX8I8ej.s:185    .text:000000000000010c .L0 
     /tmp/ccX8I8ej.s:186    .text:000000000000010c .L0 
     /tmp/ccX8I8ej.s:188    .text:0000000000000110 .L0 
     /tmp/ccX8I8ej.s:192    .text:0000000000000118 .L0 
     /tmp/ccX8I8ej.s:193    .text:0000000000000118 .L0 
     /tmp/ccX8I8ej.s:195    .text:000000000000011c .L0 
     /tmp/ccX8I8ej.s:198    .text:0000000000000120 .L0 
     /tmp/ccX8I8ej.s:199    .text:0000000000000120 .L0 
     /tmp/ccX8I8ej.s:201    .text:0000000000000124 .L0 
     /tmp/ccX8I8ej.s:203    .text:0000000000000128 .L0 
     /tmp/ccX8I8ej.s:204    .text:0000000000000128 .L0 
     /tmp/ccX8I8ej.s:206    .text:000000000000012c .L0 
     /tmp/ccX8I8ej.s:208    .text:0000000000000130 .L0 
     /tmp/ccX8I8ej.s:210    .text:0000000000000134 .L0 
     /tmp/ccX8I8ej.s:212    .text:0000000000000138 .L0 
     /tmp/ccX8I8ej.s:213    .text:0000000000000138 .L0 
     /tmp/ccX8I8ej.s:215    .text:000000000000013c .L0 
     /tmp/ccX8I8ej.s:217    .text:0000000000000140 .L0 
     /tmp/ccX8I8ej.s:218    .text:0000000000000140 .L0 
     /tmp/ccX8I8ej.s:222    .text:0000000000000148 .L0 
     /tmp/ccX8I8ej.s:223    .text:0000000000000148 .L0 
     /tmp/ccX8I8ej.s:225    .text:0000000000000150 .L0 
     /tmp/ccX8I8ej.s:231    .text:0000000000000150 _ZN15MemoryAllocator17wantToFreeAddressEPv
     /tmp/ccX8I8ej.s:234    .text:0000000000000150 .L0 
     /tmp/ccX8I8ej.s:236    .text:0000000000000150 .L0 
     /tmp/ccX8I8ej.s:237    .text:0000000000000154 .L0 
     /tmp/ccX8I8ej.s:239    .text:0000000000000158 .L0 
     /tmp/ccX8I8ej.s:241    .text:000000000000015c .L0 
     /tmp/ccX8I8ej.s:243    .text:000000000000015c .L0 
     /tmp/ccX8I8ej.s:244    .text:000000000000015c .L0 
     /tmp/ccX8I8ej.s:247    .text:0000000000000168 .L0 
     /tmp/ccX8I8ej.s:249    .text:000000000000016c .L0 
     /tmp/ccX8I8ej.s:252    .text:0000000000000178 .L0 
GAS LISTING /tmp/ccX8I8ej.s 			page 21


     /tmp/ccX8I8ej.s:255    .text:000000000000017c .L0 
     /tmp/ccX8I8ej.s:256    .text:000000000000017c .L0 
     /tmp/ccX8I8ej.s:257    .text:000000000000017c .L0 
     /tmp/ccX8I8ej.s:260    .text:0000000000000180 .L0 
     /tmp/ccX8I8ej.s:264    .text:0000000000000184 .L0 
     /tmp/ccX8I8ej.s:265    .text:0000000000000184 .L0 
     /tmp/ccX8I8ej.s:267    .text:0000000000000188 .L0 
     /tmp/ccX8I8ej.s:268    .text:0000000000000188 .L0 
     /tmp/ccX8I8ej.s:270    .text:000000000000018c .L0 
     /tmp/ccX8I8ej.s:273    .text:0000000000000190 .L0 
     /tmp/ccX8I8ej.s:274    .text:0000000000000190 .L0 
     /tmp/ccX8I8ej.s:275    .text:0000000000000190 .L0 
     /tmp/ccX8I8ej.s:277    .text:0000000000000194 .L0 
     /tmp/ccX8I8ej.s:280    .text:0000000000000198 .L0 
     /tmp/ccX8I8ej.s:283    .text:000000000000019c .L0 
     /tmp/ccX8I8ej.s:285    .text:00000000000001a0 .L0 
     /tmp/ccX8I8ej.s:287    .text:00000000000001a4 .L0 
     /tmp/ccX8I8ej.s:288    .text:00000000000001a4 .L0 
     /tmp/ccX8I8ej.s:290    .text:00000000000001a8 .L0 
     /tmp/ccX8I8ej.s:293    .text:00000000000001ac .L0 
     /tmp/ccX8I8ej.s:294    .text:00000000000001ac .L0 
     /tmp/ccX8I8ej.s:296    .text:00000000000001b0 .L0 
     /tmp/ccX8I8ej.s:297    .text:00000000000001b0 .L0 
     /tmp/ccX8I8ej.s:303    .text:00000000000001b8 .L0 
     /tmp/ccX8I8ej.s:304    .text:00000000000001b8 .L0 
     /tmp/ccX8I8ej.s:306    .text:00000000000001bc .L0 
     /tmp/ccX8I8ej.s:311    .text:00000000000001c4 .L0 
     /tmp/ccX8I8ej.s:315    .text:00000000000001c8 .L0 
     /tmp/ccX8I8ej.s:316    .text:00000000000001cc .L0 
     /tmp/ccX8I8ej.s:317    .text:00000000000001cc .L0 
     /tmp/ccX8I8ej.s:318    .text:00000000000001cc .L0 
     /tmp/ccX8I8ej.s:320    .text:00000000000001d0 .L0 
     /tmp/ccX8I8ej.s:324    .text:00000000000001d4 .L0 
     /tmp/ccX8I8ej.s:326    .text:00000000000001d4 .L0 
     /tmp/ccX8I8ej.s:332    .text:00000000000001dc .L0 
     /tmp/ccX8I8ej.s:335    .text:00000000000001e4 .L0 
     /tmp/ccX8I8ej.s:341    .text:00000000000001e4 _ZN15MemoryAllocator13mergeWithNextEP11FreeSegment
     /tmp/ccX8I8ej.s:344    .text:00000000000001e4 .L0 
     /tmp/ccX8I8ej.s:346    .text:00000000000001e4 .L0 
     /tmp/ccX8I8ej.s:347    .text:00000000000001e8 .L0 
     /tmp/ccX8I8ej.s:349    .text:00000000000001ec .L0 
     /tmp/ccX8I8ej.s:351    .text:00000000000001f0 .L0 
     /tmp/ccX8I8ej.s:353    .text:00000000000001f0 .L0 
     /tmp/ccX8I8ej.s:354    .text:00000000000001f0 .L0 
     /tmp/ccX8I8ej.s:356    .text:00000000000001f4 .L0 
     /tmp/ccX8I8ej.s:359    .text:00000000000001fc .L0 
     /tmp/ccX8I8ej.s:362    .text:0000000000000200 .L0 
     /tmp/ccX8I8ej.s:365    .text:0000000000000204 .L0 
     /tmp/ccX8I8ej.s:366    .text:0000000000000208 .L0 
     /tmp/ccX8I8ej.s:367    .text:0000000000000208 .L0 
     /tmp/ccX8I8ej.s:368    .text:0000000000000208 .L0 
     /tmp/ccX8I8ej.s:370    .text:000000000000020c .L0 
     /tmp/ccX8I8ej.s:373    .text:0000000000000210 .L0 
     /tmp/ccX8I8ej.s:375    .text:0000000000000210 .L0 
     /tmp/ccX8I8ej.s:376    .text:0000000000000210 .L0 
     /tmp/ccX8I8ej.s:378    .text:0000000000000214 .L0 
     /tmp/ccX8I8ej.s:382    .text:0000000000000220 .L0 
GAS LISTING /tmp/ccX8I8ej.s 			page 22


     /tmp/ccX8I8ej.s:383    .text:0000000000000220 .L0 
     /tmp/ccX8I8ej.s:385    .text:0000000000000224 .L0 
     /tmp/ccX8I8ej.s:387    .text:0000000000000228 .L0 
     /tmp/ccX8I8ej.s:388    .text:0000000000000228 .L0 
     /tmp/ccX8I8ej.s:390    .text:0000000000000230 .L0 
     /tmp/ccX8I8ej.s:396    .text:0000000000000230 _ZN15MemoryAllocator8mem_freeEPv
     /tmp/ccX8I8ej.s:399    .text:0000000000000230 .L0 
     /tmp/ccX8I8ej.s:401    .text:0000000000000230 .L0 
     /tmp/ccX8I8ej.s:402    .text:0000000000000234 .L0 
     /tmp/ccX8I8ej.s:409    .text:000000000000024c .L0 
     /tmp/ccX8I8ej.s:410    .text:000000000000024c .L0 
     /tmp/ccX8I8ej.s:411    .text:000000000000024c .L0 
     /tmp/ccX8I8ej.s:412    .text:000000000000024c .L0 
     /tmp/ccX8I8ej.s:413    .text:000000000000024c .L0 
     /tmp/ccX8I8ej.s:414    .text:000000000000024c .L0 
     /tmp/ccX8I8ej.s:416    .text:0000000000000250 .L0 
     /tmp/ccX8I8ej.s:420    .text:0000000000000258 .L0 
     /tmp/ccX8I8ej.s:421    .text:0000000000000258 .L0 
     /tmp/ccX8I8ej.s:424    .text:0000000000000260 .L0 
     /tmp/ccX8I8ej.s:427    .text:0000000000000264 .L0 
     /tmp/ccX8I8ej.s:428    .text:0000000000000264 .L0 
     /tmp/ccX8I8ej.s:430    .text:0000000000000268 .L0 
     /tmp/ccX8I8ej.s:433    .text:000000000000026c .L0 
     /tmp/ccX8I8ej.s:434    .text:000000000000026c .L0 
     /tmp/ccX8I8ej.s:437    .text:0000000000000270 .L0 
     /tmp/ccX8I8ej.s:438    .text:0000000000000270 .L0 
     /tmp/ccX8I8ej.s:444    .text:0000000000000278 .L0 
     /tmp/ccX8I8ej.s:445    .text:0000000000000278 .L0 
     /tmp/ccX8I8ej.s:448    .text:000000000000027c .L0 
     /tmp/ccX8I8ej.s:454    .text:0000000000000284 .L0 
     /tmp/ccX8I8ej.s:458    .text:0000000000000288 .L0 
     /tmp/ccX8I8ej.s:460    .text:000000000000028c .L0 
     /tmp/ccX8I8ej.s:464    .text:0000000000000290 .L0 
     /tmp/ccX8I8ej.s:466    .text:0000000000000294 .L0 
     /tmp/ccX8I8ej.s:468    .text:0000000000000298 .L0 
     /tmp/ccX8I8ej.s:472    .text:00000000000002a0 .L0 
     /tmp/ccX8I8ej.s:473    .text:00000000000002a0 .L0 
     /tmp/ccX8I8ej.s:475    .text:00000000000002a4 .L0 
     /tmp/ccX8I8ej.s:477    .text:00000000000002a8 .L0 
     /tmp/ccX8I8ej.s:478    .text:00000000000002a8 .L0 
     /tmp/ccX8I8ej.s:484    .text:00000000000002b8 .L0 
     /tmp/ccX8I8ej.s:486    .text:00000000000002bc .L0 
     /tmp/ccX8I8ej.s:487    .text:00000000000002bc .L0 
     /tmp/ccX8I8ej.s:489    .text:00000000000002c0 .L0 
     /tmp/ccX8I8ej.s:490    .text:00000000000002c0 .L0 
     /tmp/ccX8I8ej.s:497    .text:00000000000002d0 .L0 
     /tmp/ccX8I8ej.s:501    .text:00000000000002d4 .L0 
     /tmp/ccX8I8ej.s:502    .text:00000000000002d8 .L0 
     /tmp/ccX8I8ej.s:503    .text:00000000000002d8 .L0 
     /tmp/ccX8I8ej.s:505    .text:00000000000002dc .L0 
     /tmp/ccX8I8ej.s:506    .text:00000000000002dc .L0 
     /tmp/ccX8I8ej.s:508    .text:00000000000002e0 .L0 
     /tmp/ccX8I8ej.s:510    .text:00000000000002e4 .L0 
     /tmp/ccX8I8ej.s:512    .text:00000000000002e8 .L0 
     /tmp/ccX8I8ej.s:515    .text:00000000000002ec .L0 
     /tmp/ccX8I8ej.s:517    .text:00000000000002f0 .L0 
     /tmp/ccX8I8ej.s:521    .text:00000000000002f4 .L0 
GAS LISTING /tmp/ccX8I8ej.s 			page 23


     /tmp/ccX8I8ej.s:525    .text:00000000000002f4 .L0 
     /tmp/ccX8I8ej.s:526    .text:00000000000002f4 .L0 
     /tmp/ccX8I8ej.s:530    .text:00000000000002f8 .L0 
     /tmp/ccX8I8ej.s:535    .text:0000000000000300 .L0 
     /tmp/ccX8I8ej.s:537    .text:0000000000000308 .L0 
     /tmp/ccX8I8ej.s:543    .text:0000000000000308 _ZN15MemoryAllocator10print_listEv
     /tmp/ccX8I8ej.s:546    .text:0000000000000308 .L0 
     /tmp/ccX8I8ej.s:548    .text:0000000000000308 .L0 
     /tmp/ccX8I8ej.s:549    .text:000000000000030c .L0 
     /tmp/ccX8I8ej.s:553    .text:0000000000000318 .L0 
     /tmp/ccX8I8ej.s:554    .text:0000000000000318 .L0 
     /tmp/ccX8I8ej.s:555    .text:0000000000000318 .L0 
     /tmp/ccX8I8ej.s:557    .text:000000000000031c .L0 
     /tmp/ccX8I8ej.s:560    .text:0000000000000320 .L0 
     /tmp/ccX8I8ej.s:561    .text:0000000000000320 .L0 
     /tmp/ccX8I8ej.s:566    .text:0000000000000330 .L0 
     /tmp/ccX8I8ej.s:567    .text:0000000000000330 .L0 
     /tmp/ccX8I8ej.s:569    .text:0000000000000334 .L0 
     /tmp/ccX8I8ej.s:573    .text:0000000000000338 .L0 
     /tmp/ccX8I8ej.s:574    .text:0000000000000338 .L0 
     /tmp/ccX8I8ej.s:578    .text:000000000000033c .L0 
     /tmp/ccX8I8ej.s:580    .text:0000000000000340 .L0 
     /tmp/ccX8I8ej.s:581    .text:0000000000000340 .L0 
     /tmp/ccX8I8ej.s:586    .text:0000000000000350 .L0 
     /tmp/ccX8I8ej.s:587    .text:0000000000000350 .L0 
     /tmp/ccX8I8ej.s:591    .text:0000000000000360 .L0 
     /tmp/ccX8I8ej.s:592    .text:0000000000000360 .L0 
     /tmp/ccX8I8ej.s:597    .text:0000000000000370 .L0 
     /tmp/ccX8I8ej.s:598    .text:0000000000000370 .L0 
     /tmp/ccX8I8ej.s:602    .text:0000000000000380 .L0 
     /tmp/ccX8I8ej.s:605    .text:0000000000000384 .L0 
     /tmp/ccX8I8ej.s:610    .text:0000000000000388 .L0 
     /tmp/ccX8I8ej.s:611    .text:0000000000000388 .L0 
     /tmp/ccX8I8ej.s:618    .text:000000000000039c .L0 
     /tmp/ccX8I8ej.s:619    .text:000000000000039c .L0 
     /tmp/ccX8I8ej.s:623    .text:00000000000003ac .L0 
     /tmp/ccX8I8ej.s:624    .text:00000000000003b0 .L0 
     /tmp/ccX8I8ej.s:626    .text:00000000000003b4 .L0 
     /tmp/ccX8I8ej.s:627    .text:00000000000003b4 .L0 
     /tmp/ccX8I8ej.s:629    .text:00000000000003b8 .L0 
     /tmp/ccX8I8ej.s:632    .text:00000000000003bc .L0 
     /tmp/ccX8I8ej.s:634    .text:00000000000003c0 .L0 
     /tmp/ccX8I8ej.s:640    .text:00000000000003c0 _ZN15MemoryAllocator14print_all_listEv
     /tmp/ccX8I8ej.s:643    .text:00000000000003c0 .L0 
     /tmp/ccX8I8ej.s:645    .text:00000000000003c0 .L0 
     /tmp/ccX8I8ej.s:646    .text:00000000000003c4 .L0 
     /tmp/ccX8I8ej.s:650    .text:00000000000003d0 .L0 
     /tmp/ccX8I8ej.s:651    .text:00000000000003d0 .L0 
     /tmp/ccX8I8ej.s:652    .text:00000000000003d0 .L0 
     /tmp/ccX8I8ej.s:654    .text:00000000000003d4 .L0 
     /tmp/ccX8I8ej.s:657    .text:00000000000003d8 .L0 
     /tmp/ccX8I8ej.s:658    .text:00000000000003d8 .L0 
     /tmp/ccX8I8ej.s:663    .text:00000000000003e8 .L0 
     /tmp/ccX8I8ej.s:664    .text:00000000000003e8 .L0 
     /tmp/ccX8I8ej.s:666    .text:00000000000003ec .L0 
     /tmp/ccX8I8ej.s:670    .text:00000000000003f0 .L0 
     /tmp/ccX8I8ej.s:671    .text:00000000000003f0 .L0 
GAS LISTING /tmp/ccX8I8ej.s 			page 24


     /tmp/ccX8I8ej.s:675    .text:00000000000003f4 .L0 
     /tmp/ccX8I8ej.s:677    .text:00000000000003f8 .L0 
     /tmp/ccX8I8ej.s:678    .text:00000000000003f8 .L0 
     /tmp/ccX8I8ej.s:683    .text:0000000000000408 .L0 
     /tmp/ccX8I8ej.s:684    .text:0000000000000408 .L0 
     /tmp/ccX8I8ej.s:688    .text:0000000000000418 .L0 
     /tmp/ccX8I8ej.s:689    .text:0000000000000418 .L0 
     /tmp/ccX8I8ej.s:694    .text:0000000000000428 .L0 
     /tmp/ccX8I8ej.s:695    .text:0000000000000428 .L0 
     /tmp/ccX8I8ej.s:699    .text:0000000000000438 .L0 
     /tmp/ccX8I8ej.s:702    .text:000000000000043c .L0 
     /tmp/ccX8I8ej.s:707    .text:0000000000000440 .L0 
     /tmp/ccX8I8ej.s:708    .text:0000000000000440 .L0 
     /tmp/ccX8I8ej.s:715    .text:0000000000000454 .L0 
     /tmp/ccX8I8ej.s:716    .text:0000000000000454 .L0 
     /tmp/ccX8I8ej.s:720    .text:0000000000000464 .L0 
     /tmp/ccX8I8ej.s:721    .text:0000000000000468 .L0 
     /tmp/ccX8I8ej.s:723    .text:000000000000046c .L0 
     /tmp/ccX8I8ej.s:724    .text:000000000000046c .L0 
     /tmp/ccX8I8ej.s:726    .text:0000000000000470 .L0 
     /tmp/ccX8I8ej.s:729    .text:0000000000000474 .L0 
     /tmp/ccX8I8ej.s:731    .text:0000000000000478 .L0 
     /tmp/ccX8I8ej.s:740    .bss:0000000000000000 _ZN15MemoryAllocator9allocatorE
     /tmp/ccX8I8ej.s:737    .bss:0000000000000000 .LANCHOR0
     /tmp/ccX8I8ej.s:761    .text:0000000000000478 .L0 
     /tmp/ccX8I8ej.s:25     .text:000000000000000c .L0 
     /tmp/ccX8I8ej.s:30     .text:0000000000000018 .L0 
     /tmp/ccX8I8ej.s:34     .text:0000000000000024 .L0 
     /tmp/ccX8I8ej.s:42     .text:0000000000000038 .L0 
     /tmp/ccX8I8ej.s:59     .text:0000000000000060 .L0 
     /tmp/ccX8I8ej.s:244    .text:000000000000015c .L0 
     /tmp/ccX8I8ej.s:249    .text:000000000000016c .L0 
     /tmp/ccX8I8ej.s:744    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccX8I8ej.s:561    .text:0000000000000320 .L0 
     /tmp/ccX8I8ej.s:749    .rodata.str1.8:0000000000000038 .LC2
     /tmp/ccX8I8ej.s:587    .text:0000000000000350 .L0 
     /tmp/ccX8I8ej.s:598    .text:0000000000000370 .L0 
     /tmp/ccX8I8ej.s:746    .rodata.str1.8:0000000000000020 .LC1
     /tmp/ccX8I8ej.s:611    .text:0000000000000388 .L0 
     /tmp/ccX8I8ej.s:752    .rodata.str1.8:0000000000000040 .LC3
     /tmp/ccX8I8ej.s:619    .text:000000000000039c .L0 
     /tmp/ccX8I8ej.s:754    .rodata.str1.8:0000000000000060 .LC4
     /tmp/ccX8I8ej.s:658    .text:00000000000003d8 .L0 
     /tmp/ccX8I8ej.s:684    .text:0000000000000408 .L0 
     /tmp/ccX8I8ej.s:695    .text:0000000000000428 .L0 
     /tmp/ccX8I8ej.s:708    .text:0000000000000440 .L0 
     /tmp/ccX8I8ej.s:716    .text:0000000000000454 .L0 
     /tmp/ccX8I8ej.s:56     .text:0000000000000060 .L2
     /tmp/ccX8I8ej.s:115    .text:00000000000000a8 .L7
     /tmp/ccX8I8ej.s:138    .text:00000000000000cc .L5
     /tmp/ccX8I8ej.s:107    .text:00000000000000a0 .L6
     /tmp/ccX8I8ej.s:100    .text:0000000000000098 .L13
     /tmp/ccX8I8ej.s:170    .text:00000000000000fc .L4
     /tmp/ccX8I8ej.s:190    .text:0000000000000118 .L9
     /tmp/ccX8I8ej.s:182    .text:000000000000010c .L16
     /tmp/ccX8I8ej.s:157    .text:00000000000000ec .L11
     /tmp/ccX8I8ej.s:220    .text:0000000000000148 .L12
GAS LISTING /tmp/ccX8I8ej.s 			page 25


     /tmp/ccX8I8ej.s:309    .text:00000000000001c4 .L23
     /tmp/ccX8I8ej.s:323    .text:00000000000001d4 .L24
     /tmp/ccX8I8ej.s:281    .text:000000000000019c .L19
     /tmp/ccX8I8ej.s:262    .text:0000000000000184 .L20
     /tmp/ccX8I8ej.s:330    .text:00000000000001dc .L25
     /tmp/ccX8I8ej.s:301    .text:00000000000001b8 .L21
     /tmp/ccX8I8ej.s:313    .text:00000000000001c8 .L18
     /tmp/ccX8I8ej.s:291    .text:00000000000001ac .L22
     /tmp/ccX8I8ej.s:372    .text:0000000000000210 .L30
     /tmp/ccX8I8ej.s:363    .text:0000000000000204 .L27
     /tmp/ccX8I8ej.s:533    .text:0000000000000300 .L40
     /tmp/ccX8I8ej.s:441    .text:0000000000000278 .L42
     /tmp/ccX8I8ej.s:462    .text:0000000000000290 .L37
     /tmp/ccX8I8ej.s:499    .text:00000000000002d4 .L32
     /tmp/ccX8I8ej.s:470    .text:00000000000002a0 .L34
     /tmp/ccX8I8ej.s:451    .text:0000000000000284 .L35
     /tmp/ccX8I8ej.s:455    .text:0000000000000288 .L36
     /tmp/ccX8I8ej.s:482    .text:00000000000002b8 .L38
     /tmp/ccX8I8ej.s:520    .text:00000000000002f4 .L39
     /tmp/ccX8I8ej.s:607    .text:0000000000000388 .L48
     /tmp/ccX8I8ej.s:616    .text:000000000000039c .L45
     /tmp/ccX8I8ej.s:576    .text:000000000000033c .L46
     /tmp/ccX8I8ej.s:570    .text:0000000000000338 .L44
     /tmp/ccX8I8ej.s:704    .text:0000000000000440 .L54
     /tmp/ccX8I8ej.s:713    .text:0000000000000454 .L51
     /tmp/ccX8I8ej.s:673    .text:00000000000003f4 .L52
     /tmp/ccX8I8ej.s:667    .text:00000000000003f0 .L50
     /tmp/ccX8I8ej.s:1605   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccX8I8ej.s:2774   .debug_str:00000000000000e7 .LASF54
     /tmp/ccX8I8ej.s:2870   .debug_str:0000000000000528 .LASF55
     /tmp/ccX8I8ej.s:2792   .debug_str:0000000000000252 .LASF56
     /tmp/ccX8I8ej.s:8      .text:0000000000000000 .Ltext0
     /tmp/ccX8I8ej.s:757    .text:0000000000000478 .Letext0
     /tmp/ccX8I8ej.s:2750   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccX8I8ej.s:2830   .debug_str:00000000000003ac .LASF0
     /tmp/ccX8I8ej.s:2812   .debug_str:0000000000000322 .LASF1
     /tmp/ccX8I8ej.s:2800   .debug_str:00000000000002c8 .LASF2
     /tmp/ccX8I8ej.s:2772   .debug_str:00000000000000e0 .LASF4
     /tmp/ccX8I8ej.s:2808   .debug_str:0000000000000304 .LASF3
     /tmp/ccX8I8ej.s:2756   .debug_str:0000000000000023 .LASF5
     /tmp/ccX8I8ej.s:2752   .debug_str:0000000000000000 .LASF6
     /tmp/ccX8I8ej.s:2856   .debug_str:000000000000049d .LASF7
     /tmp/ccX8I8ej.s:2838   .debug_str:0000000000000420 .LASF8
     /tmp/ccX8I8ej.s:2770   .debug_str:00000000000000d2 .LASF9
     /tmp/ccX8I8ej.s:2882   .debug_str:0000000000000569 .LASF10
     /tmp/ccX8I8ej.s:2796   .debug_str:0000000000000298 .LASF11
     /tmp/ccX8I8ej.s:2864   .debug_str:00000000000004db .LASF12
     /tmp/ccX8I8ej.s:2844   .debug_str:0000000000000452 .LASF13
     /tmp/ccX8I8ej.s:2814   .debug_str:0000000000000335 .LASF14
     /tmp/ccX8I8ej.s:2786   .debug_str:0000000000000223 .LASF15
     /tmp/ccX8I8ej.s:2840   .debug_str:0000000000000430 .LASF16
     /tmp/ccX8I8ej.s:2810   .debug_str:0000000000000316 .LASF57
     /tmp/ccX8I8ej.s:2758   .debug_str:000000000000002a .LASF17
     /tmp/ccX8I8ej.s:2876   .debug_str:0000000000000555 .LASF18
     /tmp/ccX8I8ej.s:2754   .debug_str:0000000000000013 .LASF22
     /tmp/ccX8I8ej.s:2784   .debug_str:000000000000021e .LASF19
     /tmp/ccX8I8ej.s:2794   .debug_str:000000000000028e .LASF20
GAS LISTING /tmp/ccX8I8ej.s 			page 26


     /tmp/ccX8I8ej.s:2790   .debug_str:0000000000000248 .LASF21
     /tmp/ccX8I8ej.s:2874   .debug_str:000000000000054b .LASF58
     /tmp/ccX8I8ej.s:2820   .debug_str:0000000000000360 .LASF24
     /tmp/ccX8I8ej.s:2848   .debug_str:000000000000046b .LASF23
     /tmp/ccX8I8ej.s:2778   .debug_str:00000000000001d2 .LASF25
     /tmp/ccX8I8ej.s:2826   .debug_str:0000000000000393 .LASF26
     /tmp/ccX8I8ej.s:2866   .debug_str:00000000000004eb .LASF27
     /tmp/ccX8I8ej.s:2780   .debug_str:00000000000001fd .LASF33
     /tmp/ccX8I8ej.s:2768   .debug_str:00000000000000c7 .LASF28
     /tmp/ccX8I8ej.s:2762   .debug_str:000000000000005e .LASF30
     /tmp/ccX8I8ej.s:2868   .debug_str:000000000000051e .LASF29
     /tmp/ccX8I8ej.s:2804   .debug_str:00000000000002db .LASF31
     /tmp/ccX8I8ej.s:2828   .debug_str:00000000000003a1 .LASF32
     /tmp/ccX8I8ej.s:2836   .debug_str:00000000000003fd .LASF34
     /tmp/ccX8I8ej.s:2842   .debug_str:0000000000000446 .LASF59
     /tmp/ccX8I8ej.s:2834   .debug_str:00000000000003d9 .LASF60
     /tmp/ccX8I8ej.s:2872   .debug_str:0000000000000541 .LASF35
     /tmp/ccX8I8ej.s:2858   .debug_str:00000000000004b0 .LASF36
     /tmp/ccX8I8ej.s:2846   .debug_str:0000000000000462 .LASF37
     /tmp/ccX8I8ej.s:2798   .debug_str:00000000000002a7 .LASF38
     /tmp/ccX8I8ej.s:2816   .debug_str:0000000000000341 .LASF39
     /tmp/ccX8I8ej.s:2766   .debug_str:00000000000000a4 .LASF40
     /tmp/ccX8I8ej.s:2824   .debug_str:0000000000000384 .LASF61
     /tmp/ccX8I8ej.s:2776   .debug_str:00000000000001ab .LASF62
     /tmp/ccX8I8ej.s:2862   .debug_str:00000000000004d6 .LASF41
     /tmp/ccX8I8ej.s:2832   .debug_str:00000000000003b9 .LASF63
     /tmp/ccX8I8ej.s:2760   .debug_str:000000000000002f .LASF64
     /tmp/ccX8I8ej.s:2764   .debug_str:000000000000007a .LASF65
     /tmp/ccX8I8ej.s:2788   .debug_str:0000000000000239 .LASF42
     /tmp/ccX8I8ej.s:2822   .debug_str:0000000000000379 .LASF43
     /tmp/ccX8I8ej.s:641    .text:00000000000003c0 .LFB7
     /tmp/ccX8I8ej.s:732    .text:0000000000000478 .LFE7
     /tmp/ccX8I8ej.s:2802   .debug_str:00000000000002d6 .LASF45
     /tmp/ccX8I8ej.s:2309   .debug_loc:0000000000000000 .LLST18
     /tmp/ccX8I8ej.s:669    .text:00000000000003f0 .LBB8
     /tmp/ccX8I8ej.s:705    .text:0000000000000440 .LBE8
     /tmp/ccX8I8ej.s:2782   .debug_str:0000000000000219 .LASF44
     /tmp/ccX8I8ej.s:2338   .debug_loc:0000000000000075 .LLST19
     /tmp/ccX8I8ej.s:681    .text:0000000000000408 .LVL64
     /tmp/ccX8I8ej.s:686    .text:0000000000000418 .LVL65
     /tmp/ccX8I8ej.s:692    .text:0000000000000428 .LVL66
     /tmp/ccX8I8ej.s:697    .text:0000000000000438 .LVL67
     /tmp/ccX8I8ej.s:661    .text:00000000000003e8 .LVL62
     /tmp/ccX8I8ej.s:710    .text:0000000000000450 .LVL70
     /tmp/ccX8I8ej.s:718    .text:0000000000000464 .LVL72
     /tmp/ccX8I8ej.s:544    .text:0000000000000308 .LFB6
     /tmp/ccX8I8ej.s:635    .text:00000000000003c0 .LFE6
     /tmp/ccX8I8ej.s:2349   .debug_loc:00000000000000ab .LLST16
     /tmp/ccX8I8ej.s:572    .text:0000000000000338 .LBB7
     /tmp/ccX8I8ej.s:608    .text:0000000000000388 .LBE7
     /tmp/ccX8I8ej.s:2378   .debug_loc:0000000000000120 .LLST17
     /tmp/ccX8I8ej.s:584    .text:0000000000000350 .LVL50
     /tmp/ccX8I8ej.s:589    .text:0000000000000360 .LVL51
     /tmp/ccX8I8ej.s:595    .text:0000000000000370 .LVL52
     /tmp/ccX8I8ej.s:600    .text:0000000000000380 .LVL53
     /tmp/ccX8I8ej.s:564    .text:0000000000000330 .LVL48
     /tmp/ccX8I8ej.s:613    .text:0000000000000398 .LVL56
GAS LISTING /tmp/ccX8I8ej.s 			page 27


     /tmp/ccX8I8ej.s:621    .text:00000000000003ac .LVL58
     /tmp/ccX8I8ej.s:397    .text:0000000000000230 .LFB5
     /tmp/ccX8I8ej.s:538    .text:0000000000000308 .LFE5
     /tmp/ccX8I8ej.s:2389   .debug_loc:0000000000000156 .LLST11
     /tmp/ccX8I8ej.s:2411   .debug_loc:00000000000001b5 .LLST12
     /tmp/ccX8I8ej.s:2740   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccX8I8ej.s:2854   .debug_str:0000000000000496 .LASF46
     /tmp/ccX8I8ej.s:2443   .debug_loc:000000000000023c .LLST13
     /tmp/ccX8I8ej.s:2878   .debug_str:000000000000055a .LASF47
     /tmp/ccX8I8ej.s:2458   .debug_loc:0000000000000285 .LLST14
     /tmp/ccX8I8ej.s:2482   .debug_loc:00000000000002f5 .LLST15
     /tmp/ccX8I8ej.s:481    .text:00000000000002b8 .LVL40
     /tmp/ccX8I8ej.s:493    .text:00000000000002d0 .LVL41
     /tmp/ccX8I8ej.s:422    .text:0000000000000260 .LVL33
     /tmp/ccX8I8ej.s:342    .text:00000000000001e4 .LFB4
     /tmp/ccX8I8ej.s:391    .text:0000000000000230 .LFE4
     /tmp/ccX8I8ej.s:2502   .debug_loc:0000000000000352 .LLST10
     /tmp/ccX8I8ej.s:232    .text:0000000000000150 .LFB3
     /tmp/ccX8I8ej.s:336    .text:00000000000001e4 .LFE3
     /tmp/ccX8I8ej.s:2516   .debug_loc:000000000000038b .LLST6
     /tmp/ccX8I8ej.s:2563   .debug_loc:000000000000043f .LLST7
     /tmp/ccX8I8ej.s:2574   .debug_loc:0000000000000475 .LLST8
     /tmp/ccX8I8ej.s:2598   .debug_loc:00000000000004e5 .LLST9
     /tmp/ccX8I8ej.s:73     .text:0000000000000074 .LFB2
     /tmp/ccX8I8ej.s:226    .text:0000000000000150 .LFE2
     /tmp/ccX8I8ej.s:2618   .debug_loc:0000000000000542 .LLST0
     /tmp/ccX8I8ej.s:2636   .debug_loc:000000000000058e .LLST1
     /tmp/ccX8I8ej.s:2860   .debug_str:00000000000004d1 .LASF48
     /tmp/ccX8I8ej.s:2647   .debug_loc:00000000000005c4 .LLST2
     /tmp/ccX8I8ej.s:2850   .debug_str:000000000000047d .LASF49
     /tmp/ccX8I8ej.s:2667   .debug_loc:0000000000000621 .LLST3
     /tmp/ccX8I8ej.s:2687   .debug_loc:000000000000067e .LLST4
     /tmp/ccX8I8ej.s:2707   .debug_loc:00000000000006db .LLST5
     /tmp/ccX8I8ej.s:13     .text:0000000000000000 .LFB1
     /tmp/ccX8I8ej.s:67     .text:0000000000000074 .LFE1
     /tmp/ccX8I8ej.s:2852   .debug_str:0000000000000487 .LASF50
     /tmp/ccX8I8ej.s:2880   .debug_str:000000000000055f .LASF52
     /tmp/ccX8I8ej.s:2818   .debug_str:000000000000034c .LASF51
     /tmp/ccX8I8ej.s:2806   .debug_str:00000000000002f7 .LASF53
     /tmp/ccX8I8ej.s:644    .text:00000000000003c0 .LVL60
     /tmp/ccX8I8ej.s:659    .text:00000000000003e0 .LVL61
     /tmp/ccX8I8ej.s:672    .text:00000000000003f4 .LVL63
     /tmp/ccX8I8ej.s:703    .text:0000000000000440 .LVL69
     /tmp/ccX8I8ej.s:712    .text:0000000000000454 .LVL71
     /tmp/ccX8I8ej.s:727    .text:0000000000000470 .LVL73
     /tmp/ccX8I8ej.s:547    .text:0000000000000308 .LVL46
     /tmp/ccX8I8ej.s:562    .text:0000000000000328 .LVL47
     /tmp/ccX8I8ej.s:575    .text:000000000000033c .LVL49
     /tmp/ccX8I8ej.s:606    .text:0000000000000388 .LVL55
     /tmp/ccX8I8ej.s:615    .text:000000000000039c .LVL57
     /tmp/ccX8I8ej.s:630    .text:00000000000003b8 .LVL59
     /tmp/ccX8I8ej.s:400    .text:0000000000000230 .LVL32
     /tmp/ccX8I8ej.s:513    .text:00000000000002e8 .LVL43
     /tmp/ccX8I8ej.s:519    .text:00000000000002f4 .LVL44
     /tmp/ccX8I8ej.s:446    .text:000000000000027c .LVL36
     /tmp/ccX8I8ej.s:450    .text:0000000000000284 .LVL37
     /tmp/ccX8I8ej.s:498    .text:00000000000002d4 .LVL42
GAS LISTING /tmp/ccX8I8ej.s 			page 28


     /tmp/ccX8I8ej.s:435    .text:0000000000000270 .LVL34
     /tmp/ccX8I8ej.s:440    .text:0000000000000278 .LVL35
     /tmp/ccX8I8ej.s:532    .text:0000000000000300 .LVL45
     /tmp/ccX8I8ej.s:456    .text:0000000000000288 .LVL38
     /tmp/ccX8I8ej.s:461    .text:0000000000000290 .LVL39
     /tmp/ccX8I8ej.s:345    .text:00000000000001e4 .LVL30
     /tmp/ccX8I8ej.s:360    .text:0000000000000200 .LVL31
     /tmp/ccX8I8ej.s:235    .text:0000000000000150 .LVL16
     /tmp/ccX8I8ej.s:298    .text:00000000000001b4 .LVL22
     /tmp/ccX8I8ej.s:300    .text:00000000000001b8 .LVL23
     /tmp/ccX8I8ej.s:312    .text:00000000000001c8 .LVL25
     /tmp/ccX8I8ej.s:322    .text:00000000000001d4 .LVL26
     /tmp/ccX8I8ej.s:327    .text:00000000000001d8 .LVL27
     /tmp/ccX8I8ej.s:329    .text:00000000000001dc .LVL28
     /tmp/ccX8I8ej.s:333    .text:00000000000001e0 .LVL29
     /tmp/ccX8I8ej.s:254    .text:000000000000017c .LVL17
     /tmp/ccX8I8ej.s:308    .text:00000000000001c4 .LVL24
     /tmp/ccX8I8ej.s:261    .text:0000000000000184 .LVL19
     /tmp/ccX8I8ej.s:272    .text:0000000000000190 .LVL20
     /tmp/ccX8I8ej.s:278    .text:0000000000000198 .LVL21
     /tmp/ccX8I8ej.s:258    .text:0000000000000180 .LVL18
     /tmp/ccX8I8ej.s:76     .text:0000000000000074 .LVL0
     /tmp/ccX8I8ej.s:173    .text:0000000000000100 .LVL13
     /tmp/ccX8I8ej.s:181    .text:000000000000010c .LVL14
     /tmp/ccX8I8ej.s:91     .text:0000000000000088 .LVL3
     /tmp/ccX8I8ej.s:84     .text:0000000000000080 .LVL1
     /tmp/ccX8I8ej.s:99     .text:0000000000000098 .LVL4
     /tmp/ccX8I8ej.s:135    .text:00000000000000c8 .LVL9
     /tmp/ccX8I8ej.s:137    .text:00000000000000cc .LVL10
     /tmp/ccX8I8ej.s:169    .text:00000000000000fc .LVL12
     /tmp/ccX8I8ej.s:103    .text:000000000000009c .LVL5
     /tmp/ccX8I8ej.s:106    .text:00000000000000a0 .LVL6
     /tmp/ccX8I8ej.s:132    .text:00000000000000c4 .LVL8
     /tmp/ccX8I8ej.s:87     .text:0000000000000084 .LVL2
     /tmp/ccX8I8ej.s:114    .text:00000000000000a8 .LVL7
     /tmp/ccX8I8ej.s:144    .text:00000000000000d4 .LVL11
     /tmp/ccX8I8ej.s:196    .text:0000000000000120 .LVL15
     /tmp/ccX8I8ej.s:762    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccX8I8ej.s:431    .text:000000000000026c .LBB3
     /tmp/ccX8I8ej.s:442    .text:0000000000000278 .LBE3
     /tmp/ccX8I8ej.s:452    .text:0000000000000284 .LBB4
     /tmp/ccX8I8ej.s:494    .text:00000000000002d0 .LBE4
     /tmp/ccX8I8ej.s:523    .text:00000000000002f4 .LBB5
     /tmp/ccX8I8ej.s:527    .text:00000000000002f8 .LBE5

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
_Z12kprintStringPKc
_Z9kprintIntmi
